#+TITLE: A Bayesian Nonlinear Multilevel Model of Urban Tree Growth
#+AUTHOR: erker
#+email: erker@wisc.edu
#+PROPERTY:  header-args:R :cache no :results output :exports both :comments link :session *R:allo3* :eval yes
#+PROPERTY:  header-args:sh :eval yes
#+startup: indent entitiespretty
#+FILETAGS: work allo
#+HTML_HEAD: <link rel="stylesheet" href="main.css" type="text/css">
#+OPTIONS: toc:nil num:t date:t author:nil
#+LATEX_HEADER: \usepackage[margin=1in]{geometry}
#+LATEX_HEADER: \usepackage{natbib}
#+LATEX_HEADER: \usepackage{chemformula}
#+latex_header: \usepackage{adjustbox}
#+LaTeX_HEADER: \RequirePackage{lineno} \def\linenumberfont{\normalfont\small\tt}
#+LATEX_HEADER: \hypersetup{colorlinks=true,linkcolor=black, citecolor=black, urlcolor=black}
#+latex_header: \usepackage{setspace} \doublespacing
#+LATEX_CLASS_OPTIONS: [12pt]
---------------------
* Introduction
Modeling the growth of trees has been important to estimate timber
production and other ecosystem services of forests for decades.
Multilevel modeling is an attractive modeling approach because it provides a
coherent framework to account for the many levels of observation or of
groupings in data and to pool information across groups
citep:lappi_bailey_1988.  This paper has two main contributions.
First, we demonstrate the use of Stan via the =brms= package in R to
fit bayesian nonlinear multilevel models to predict tree diameter
growth from age citep:carpenter_e_2017,buerkner_2017.  Second, we apply
the method to the Urban Tree Database citep:utd_2016,mcpherson_e_2016.
This dataset is the result an over a decade long effort to collect age
and size data on thousands of trees in 17 cities across the US.
Multilevel modeling has the potential to extract more information from
the data and improve predictions compared to the existing approach.
Improving predictions of tree size from tree age will improve our
ability to predict the important ecosystem services these trees
provide urban dwellers.


The existing approach to modeling the diameter growth of trees in the
urban tree database (UTD) was to fit a separate model for each tree
species in each city and test several model forms (various polynomials
and log transformations) with different weights and then select the
model with the lowest Akaike Information Criterion (AIC).  This
approach has several limitations, many highlighted in the report.
First, while the model form selected provided the lowest AIC, many of
the estimates are not biologically realistic (for example, estimates
of diameter may begin to increase or decrease sharply at old ages,
cubic and quadratic fits, respectively).  Therefore, the researchers
cautioned against applying the models beyond the range of the data, or
sometimes even within the range of data if the estimates were
unrealistic.  These unrealistic estimates and the inability to
extrapolate severely limits managers' ability to predict growth over
meaningful time scales (a century rather than a few decades).  A
second limitations is that some models predict negative diameters, an
impossibility.  Third, models are only provided for the cities and the
species sampled.  If a manager wants to predict the diameter growth of
a tree species in an unsampled city, the researchers recommend using
the model from the reference city in the same climate region.
However, many of the reference cities are on the border of climate
regions and as noted in the UTC report there is known large
variability in growth within regions (see figure 5 in the UTD report
originally from McPherson and Peper 2012, comparing Cheyenne to Ft.
Collins. The figure is reproduced in supplementary figures).  Furthermore,
if a manager wants to predict growth for an unsampled species or a
species that was sampled in a different city it is not obvious which
equation to use and the additional uncertainty that this introduces is
not quantified.

Our approach addresses the above limitations.  First, we use a weibull
curve, commonly used in foresty growth equations for its biological
realism, which makes extrapolation to ages outside the data range less
fraught.  Second, using this sigmoidal curve and modeling diameter
with a gamma distribution ensures our estimates of diameter are
positive.  Third, by modeling the weibull curve parameters as
functions of species, city, and climate, we are able to borrow
information across cities and across species to provide predictions
and associated uncertainty of diameter growth, even in cities
or species with very little or no data.

Sigmoidal curves very similar to the weibull have been used before in
modeling urban tree diameter growth as a function of age.
cite:frelich_1992 use the Chapman-Richards growth curve of form $y =
B_0 (1 - \text{exp}(B_1 x))^{B_{2}}$ to predict DBH from age for healthy trees (12
species, 221 trees total) in Minneapolis and St. Paul, Minnesota.
This equation form worked very well (8 out of 12 species had an R^2
over .9), but the trees used were only healthly open grown trees,
which is not representative of urban trees generally.  Following
cite:frelich_1992, in an early version of the urban tree database,
cite:mcpherson_simpson_99 fit the same curve to a small number of
observations and adjusted parameters for different locations based on
the number of frost free days.  The amount the parameters were
adjusted was based on expert opinion, not data.  cite:peper_2001a and
cite:peper_2001b compared the Chapman-Richards curve to logarithm
regression and selected the logarithm regression based on a higher R^2.
Subsequent UTD growth equations did not use sigmoidal curves
citep:mcpherson_e_2016.

Multilevel modeling was first introduced to forestry by
cite:lappi_bailey_1988 and has since been widely used to account for
multiple levels of variability (observations correlated within groups)
in allometric and growth equations. Indeed, one of the test datasets
in R to demonstrate nonlinear multilevel modeling are observations of
 [[https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/Orange.html][orange tree growth]] citep:r_lang. cite:hall_bailey_2001 give a
general overview of the frequentist multilevel approach and an example
of loblolly pine height growth in the Southeastern US.  Levels/groups in
their model are plot and tree nested within plot, and they use tree
density as a plot level covariate.  cite:nothdurft_e_2006 provide
another example of modeling tree height growth using norway spruce in
Germany.  They use the Sloboda function and levels in the model are
plot and trees nested in plot with elevation as a plot level
covariate.  cite:li_e_2011 provide a bayesian example modeling balsam
fir height growth in Maine using the Chapman-Richards equation, also
with tree nested within plot.  They found the bayesian approach has
similar parameter point estimates to the frequentist approach.  In an
urban tree context, cite:peper_e_2014 model DBH growth with repeat
measures data on individual trees and test a varying coefficients
model because they have repeat measures on individual trees.

Compared to past work, our approach is more complex from a modeling
standpoint in the use of a bayesian approach with both nested and
non-nested groupings and group level predictors.  The bayesian
multilevel/hierarchical modeling framework has many strengths as
discussed in cite:li_e_2011 (and others) and includes the ability to
sample parameter values from the entire posterior, rather than maximum
likelihood estimates.  Nonlinear multilevel models in the frequentist
approach depend on linear approximations such as first-order taylor
expansion, which is not required in the bayesian framework.  Summary
statistics of parameters (mean, median, quantiles) can be easily
calculated from posterior samples and the common assumption in the
frequentist paradigm that parameters are normally distributed can be
relaxed.  The ability to incorporate prior information from experts or
past studies on parameters is another strength of the bayesian
approach.

From the perspective of urban ecosystem services and disservices, the
size of trees is directly related to their potential to reduce noise,
air pollution, and storm water runoff.  It is also related to their
potential to interfer with infrastructure such as roads and
powerlines.  Thus models to predict urban tree growth are useful to
managers and scientists interested in better quanitifying urban tree
impacts on human wellbeing.

** COMMENT other thoughts
Age is an uncertain

limitations of existing approach and how our model addresses them.

| Existing Approach                                                                                                                                                                                                                                     | This Paper                                                                                                                          |
|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------|
| Can predict negative diameters                                                                                                                                                                                                                        | diameter is constrained to be positive                                                                                              |
| Tests several model forms                                                                                                                                                                                                                             | only uses the weibull curve                                                                                                         |
| extrapolation to higher ages than measured is fraught because equation form determined by best fit, not biology                                                                                                                                       | extrapolation to unobserved ages less fraught because weibull is biologically realistic                                             |
| a separate model for each species and city combination.  in a case with 2 observations the model had to be a line                                                                                                                                     | by borrowing information across species and city combinations, in the case with two observations, weibull was still possible to fit |
| what equation to use for unobserved species and city combinations is not clear.  (e.g. should species or city be weighted more?  use equation of different (but similar) species in the same city or of same species in different (but similar city)? | Provides predictions for all species and city combinations.                                                                         |
| Equations derived in the 17 cities are meant to apply to work in 17 large and heterogeneous regions.                                                                                                                                                  | Using climate data as city level predictors we can vary model parameter continuously across the entire US.                          |
|                                                                                                                                                                                                                                                       |                                                                                                                                     |

maybe the framewaork should be broader, just growth equations for all
trees with urban tree as a case study/example of application.


There are two story lines.
1) use of newerish statistical package to fit a pretty complex model
2) that growth equations for urban trees are newish, can be improved,
   and are important because they are fundamental to predicting
   ecosystem services.


Big problem   - urban ecosystem services depends on trees. predicting
depends on growth
narrower within - urban trees growth differently, there had been a
lack of data.
yet narrower
summary of approach and results

1) theoretically sound model form (through use of weibull)
2) expansion of predictive envelope/potential (through use of
   multilevel modeling).

Objective is to show how multilevel models can be used to predict tree
growth
1) Information about species functional groups and phylogeny to
   predict growth for unobserved species
2) Information about
3) Information about climate to predict growth in unobserved cities
4)


Urban trees have important ecological effects in cities that can
affect human wellbeing.  Forecasting ecosystem service provision by
trees requires a model of tree growth, since most services are
directly related to tree size (e.g. carbon storage in biomass, air
filtration by leaf area).  Until recently urban tree growth equations
have been rare because of lacking data.  In 2016 the US Forest Service
published the "Urban Tree Database and Allometric Equations", a
valuable dataset of the most common tree species in a dozen cities
across the US.  In addition to allometric equations, they also provide
growth equations.

While they are great step forward and an incredible resource, their
growth equations have limitations.  First, their method of model
selection simply chose the curve with the lowest AIC.  This meant that
any amount of extrapolation was highly suspect.  In the extreme case
where a species only had two observations in a city, the only possible
fit was a line. Second, they only fit equations for the most common
species in each of the cities they sampled.  It is not clear how to
modify an equation to fit a unobserved species or a unobserved city.
If red maple was not a species sampled in my city, should I use the
red maple equation from a climaticly dissimilar city?  Or should I use
the equation from the species most similar to red maple from my city?
What if I want to make a prediction about an unobserved species in an
unobserved city?

We remove these limitations by fitting a multilevel weibull model to
the data.  The weibull curve has a long history of use in forestry and
captures asymtotic growth well.  While it may not provide the best fit
to every dataset, it realistically models growth given what we know
about biological constraints, is flexible, and is less unreasonable to
extrapolate from.  The multilevel model allows information to be
shared across species and across cities, and, when combined with
species' phylogenetic data and cities' climate data, allows for
predictions at combinations of cities and species with little or no
individual level data, provided we know genus/functional group of the
species and the climate of the city.

DBH for illustrative purposes.

on selecting a model form
cite:weiskittel_e_2011
"This reality should lead to model forms that are complex enough to
accurately and adequately characterize the expected major behaviors of
the population, but simple enough to avoid being overly influenced by
the sample’s peculiarities."

** COMMENT past work


and asymtoptically normal approximations which are difficult
to (I don't fully understand how
parameters are estimated in the frequentist approach cite:hall_bailey_2001).


cite:lappi_bailey_1988
- first paper

cite:nothdurft_e_2006
- predict height from age
  - non-linear hierarchical mixed model to describe tree height growth
  - Sloboda function
  - norway spruce in germany
  - random effects for individual trees and plots.  Fixed effect at
    plot level of elevation
  - Use SAS procedure NLMIXED

cite:hall_bailey_2001
 - height from age
 - multilevel non-linear mixed model
 - loblolly in se US
 - Chapman-Richards growth model
 - levels are tree and plot
 - covariate of tree density (trees per hectare)
 - they really detail the use of these models in forestry.  Talk about
   the general approach.


cite:manso_e_2015
 - need to read
 - interesting covariates?


cite:dietze_e_2008
 - bayesian
 - crown dimensions (tree height, canopy depth, crown radius) ~ dbh
 - levels: individual trees nested in species.  a number of species
   level covariates
 -


like cite:dietze_e_2008 we use nest trees within species,
but then also nest within genus.  Covariates are at the level of
city.  More covariates could be added at individual tree and species
level.


cite:li_e_2011
 - bayesian approach
 -
 -


cite:weiskittel_e_2011


cite:sirkia_e_2015 - I don't understand this paper, though I think I
should.  It has to do with parameter estimation.

cite:yang_e_2009
 - basal area increment ~ tree dbh?


Growth estimate of Eucalyptus stands
based on nonlinear multilevel mixed-effects model theory

Miina, J., Heinonen, J., 2008. Stochastic simulation of forest regeneration establishment using a
multilevel multivariate model. Forest Science 54, 206–219.

Miina, J., Saksa, T., 2006. Predicting regeneration establishment in Norway spruce plantations
using a multivariate multilevel model. New Forests 32, 265–283.

Uzoh, F.C.C., Oliver, W.W., 2008. Individual tree diameter increment
model for managed even- aged stands of ponderosa pine throughout the
western United States using a multilevel linear mixed effects
model. Forest Ecology and Management 256, 438–445.

Kershaw Jr., J.A., Benjamin, J.G., Weiskittel, A.R., 2009. Approaches
for modeling vertical distribution of maximum knot size in black
spruce: A comparison of fixed- and mixed-effects nonlinear
models. Forest Science 55, 230–237.

Gregoire, T.G., Schabenberger, O., 1996. A non-linear mixed-effects
model to predict cumulative bole volume of standing trees. Journal of
Applied Statistics 23, 257–271.

Leites, L.P., Robinson, A.P., 2004. Improving taper equations of
loblolly pine with crown dimensions in a mixed-effects modeling
framework. Forest Science 50, 204–212.

Sharma, M., Parton, J., 2007. Height-diameter equations for boreal tree species in Ontario using a
mixed-effects modeling approach. Forest Ecology and Management 249,
187–198.

Wang, Y., LeMay, V.M., Baker, T.G., 2007b. Modelling and prediction of dominant height and site
index of Eucalyptus globulus plantations using a nonlinear mixed-effects model approach.
Canadian Journal of Forest Research 37, 1390–1403.

Calama, Rafael, and Gregorio Montero. "Interregional nonlinear height
diameter model with random coefficients for stone pine in Spain."
Canadian Journal of Forest Research 34.1 (2004): 150-163.


Urban Tree Growth Modeling
https://www.fs.fed.us/psw/publications/mcpherson/psw_2012_mcpherson001.pdf



Urban Tree Database and Allometric Equations
E. Gregory McPherson, Natalie S. van Doorn, and Paula J. Peper

The economic, social, and ecological benefits of trees are directly
related to their size, as indicated by leaf area, crown volume, and
bio- mass (Scott et al. 1998, Stoffberg et al. 2010, Xiao et
al. 2000a). Growth equa- tions underpin the calculations produced by
many computer models used in urban forestry, such as i-Tree, National
Tree Benefit Calculator, OpenTreeMap, and ecoSmart Landscapes
(fig. 1).

Quotes from the utd publication:
#+BEGIN_QUOTE
The development of allometric equations for urban open-grown trees has
been sporadic. Fleming (1988) measured trees in New Jersey having full
healthy crowns to develop linear relationships between d.b.h., height,
crown spread, and age. Frelich (1992) measured only healthy trees (12 species, 221
trees total) growing in Minneapolis and St. Paul, Minnesota, to
predict linear size relation- ships. Nowak (1994b) developed an
allometric equation for leaf area based on data from park trees in
Chicago. Tree dimensions and leaf area were predicted for the most
abundant street tree species in Modesto and Santa Monica, Califor- nia
(Peper et al. 2001a, 2001b). In New Haven, Connecticut, Troxel et
al. (2013) developed allometric equations for predicting d.b.h. from
age and height, crown diameter, and crown volume from d.b.h. for early
growth (15 years) of 10 street tree species. Outside of North America,
growth equations have been developed for street-side Tilia species in
Copenhagen, Denmark (Larsen and Kristoffersen 2002), and T. cordata
Mill., Fraxinus excelsior L. and Aesculus hippocastanum L. in Warsaw,
Poland (Lukaszkiewicz and Kosmala 2008, Lukaszkiewicz et
al. 2005). Predictive models were developed from allometric data for
five street tree species in northeastern Italy by Semenzato et
al. (2011). Stoffberg et al. (2008) used allometric relationships
between age and d.b.h., height, and crown diameter to estimate
dimensions at 10, 15, and 30 years after planting for three street
tree species in Tshwane, South Africa. The allometric equations from
all these studies reflect the effects of local site conditions,
management practices, and growing season on growth, limiting
application outside their region of origin (fig. 5).



#+END_QUOTE

** COMMENT urban trees equations

"Growth equa- tions for forest trees may not be directly transferable
to open-grown urban trees because they grow and partition bole,
branch, twig, and leaf biomass differently (Anderegg et al. 2015,
Nowak 1994a, Peper and McPherson 1998) (fig. 4). For example, in
forests, tree crowns compete for limited space and may not reach their
maximum expansion potential (Martin et al. 2012)." from the

** COMMENT past modelling
#+BEGIN_QUOTE
This report presents the third, most recent and most complete sets of
growth equations. The equations presented in this report were
developed using more sophisticated statistical methods than
before. For example, in the first studies, logarithmic regression and
exponential models predominantly provided the best fits to measured
data (Peper et al. 2001a, 2001b). In these equations, the best model
fits ranged from polynomials (from simple linear to quartic) to
logarithmic and exponential models (Peper et al. 2014). The newest
equations have been integrated with numerical models of tree benefits
in the ecoSmart Landscapes software (McPherson et al. 2014).

#+END_QUOTE

* Methods
** Data
The urban tree database (UTD, cite:utd_2016) consists of measurements on 14487 trees of 170
species in 17 cities.  However, largely because of the difficulty is measuring
tree age, there are only 12687 trees with complete age and diameter
data (161 species, 17 cities, 309 species by city combinations [[fig:City_Species_Ntrees]]).

Some species were measured in multiple cities, but not most.  The number of
trees of each city by species combination sampled ranged from 1
(both /Liquidambar styraciflua/ and /Prunus serrulata/ in Queens, NY) to 79
(/Quercus laurifolia/ in Charleston, SC).  The median number of trees in
each species-city combination was 37.

Age is defined in this dataset as time since planting, since this is
the record kept by cities.  Actual age of the trees may be several
years more.  Diameter (cm) of the trees is measured at breast height (1.37m
above ground).

In the UTD, trees are classified taxonomically down to cultivar for some
individuals, but here we aggregate cultivars up to the species level.
Species are then nested within Genera.

The 17 cities in the UTD cover much of the US geographically, [[fig:utd_climate]], and
much of the variation in climate, [[fig:utd_gdd_precip_space_map]].
However, New York City only has a few observations and the data for
Indianapolis is missing too.

Rather than using the aggregated sunset zones as done in UTD, we used
growing degree days (GDD) and precipitation data from climate NOAA's
climate normals to continuously vary equation parameters across
climate.  Figure [[fig:utd_gdd_precip_space_map]] shows each
census tract centroid in the conterminous US plotted in GDD and precipitation
space.  We appoximated the GDD and precipitation for each tract by
assigning the values of the weather station closest to the centroid.
This allows us to vary our model continouously across geographic space
in a way that better captures the natural gradients of climate.

*** COMMENT Tidy data for this analysis
**** load libraries
#+begin_src R :exports none
  library(plyr)
  library(dplyr)
  library(ggplot2)
  library(readr)
  library(ascii)
  library(tidyr)
#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Warning message:
package ‘dplyr’ was built under R version 3.4.4

Attaching package: ‘tidyr’

The following object is masked from ‘package:ascii’:

    expand
#+end_example
**** functions
#+begin_src R
  options(asciiType = "org")
  ascii.nowarn.print <- function(x,...) {
                                          #op <- options(warn = -1)
                                          #      on.exit(options(op))

      suppressWarnings(print(ascii(x,...)))

  }
#+end_src

#+RESULTS:

**** read in data
data pdf:
https://www.fs.fed.us/psw/publications/documents/psw_gtr253/psw_gtr_253.pdf
data webpage: https://www.fs.usda.gov/rds/archive/Product/RDS-2016-0005
#+begin_src R :exports code
  d <- read_csv("../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv")
#+end_src

#+RESULTS:
#+begin_example
Parsed with column specification:
cols(
  .default = col_integer(),
  Region = col_character(),
  City = col_character(),
  Source = col_character(),
  Zone = col_character(),
  `Park/Street` = col_character(),
  SpCode = col_character(),
  ScientificName = col_character(),
  CommonName = col_character(),
  TreeType = col_character(),
  street = col_character(),
  `DBH (cm)` = col_double(),
  `TreeHt (m)` = col_double(),
  CrnBase = col_double(),
  `CrnHt (m)` = col_double(),
  `CdiaPar (m)` = col_double(),
  `CDiaPerp (m)` = col_double(),
  `AvgCdia (m)` = col_double(),
  `Leaf (m2)` = col_double(),
  dbh1 = col_double()
)
See spec(...) for full column specifications.
Warning: 24255 parsing failures.
row [90m# A tibble: 5 x 5[39m col     row col   expected   actual file                                            expected   [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m      [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m                                           actual [90m1[39m  126[90m2[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… file [90m2[39m  126[90m3[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… row [90m3[39m  126[90m4[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… col [90m4[39m  126[90m5[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… expected [90m5[39m  126[90m6[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.…
... ........................... ... ............................................................................... ........ ............ [... truncated]
Warning message:
In rbind(names(probs), probs_f) :
  number of columns of result is not a multiple of vector length (arg 1)
#+end_example


#+begin_src R
                                          str(d)
#+end_src

#+RESULTS:
#+begin_example
Classes ‘tbl_df’, ‘tbl’ and 'data.frame':	14487 obs. of  41 variables:
 $ DbaseID       : int  1 2 3 4 5 6 7 8 9 10 ...
 $ Region        : chr  "InlVal" "InlVal" "InlVal" "InlVal" ...
 $ City          : chr  "Modesto, CA" "Modesto, CA" "Modesto, CA" "Modesto, CA" ...
 $ Source        : chr  "Motown2.xls: Completed Data" "Motown2.xls: Completed Data" "Motown2.xls: Completed Data" "Motown2.xls: Completed Data" ...
 $ TreeID        : int  1 2 3 4 5 6 7 8 9 10 ...
 $ Zone          : chr  "Nursery" "Nursery" "Nursery" "Nursery" ...
 $ Park/Street   : chr  "Nursery" "Nursery" "Nursery" "Nursery" ...
 $ SpCode        : chr  "ACSA1" "BEPE" "CESI4" "CICA" ...
 $ ScientificName: chr  "Acer saccharinum" "Betula pendula" "Celtis sinensis" "Cinnamomum camphora" ...
 $ CommonName    : chr  "Silver maple" "European white birch" "Chinese hackberry" "Camphor tree" ...
 $ TreeType      : chr  "BDL" "BDM" "BDL" "BEM" ...
 $ address       : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ street        : chr  "Nursery" "Nursery" "Nursery" "Nursery" ...
 $ side          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ cell          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ OnStreet      : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ FromStreet    : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ ToStreet      : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ Age           : int  0 0 0 0 0 0 0 0 0 0 ...
 $ DBH (cm)      : num  2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 ...
 $ TreeHt (m)    : num  2 1.5 1.8 2 2 2 2 2 2 1.6 ...
 $ CrnBase       : num  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ CrnHt (m)     : num  0.5 0.8 0.6 0.9 0.9 0.8 0.8 0.8 0.8 0.8 ...
 $ CdiaPar (m)   : num  1 0.6 0.7 1 1 0.8 0.8 0.8 1 0.7 ...
 $ CDiaPerp (m)  : num  1 0.6 0.7 1 1 0.8 0.8 0.8 1 0.7 ...
 $ AvgCdia (m)   : num  1 0.6 0.7 1 1 0.8 0.8 0.8 1 0.7 ...
 $ Leaf (m2)     : num  2.5 1.9 2.2 2 2.2 2.2 2.2 2.2 2.1 1.3 ...
 $ Setback       : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ TreeOr        : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ CarShade      : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ LandUse       : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ Shape         : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ WireConf      : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ dbh1          : num  2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 ...
 $ dbh2          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ dbh3          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ dbh4          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ dbh5          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ dbh6          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ dbh7          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 $ dbh8          : int  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 ...
 - attr(*, "problems")=Classes ‘tbl_df’, ‘tbl’ and 'data.frame':	24255 obs. of  5 variables:
  ..$ row     : int  1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 ...
  ..$ col     : chr  "side" "side" "side" "side" ...
  ..$ expected: chr  "an integer" "an integer" "an integer" "an integer" ...
  ..$ actual  : chr  "C" "C" "C" "C" ...
  ..$ file    : chr  "'../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'" "'../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'" "'../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'" "'../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'" ...
 - attr(*, "spec")=List of 2
  ..$ cols   :List of 41
  .. ..$ DbaseID       : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ Region        : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ City          : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ Source        : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ TreeID        : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ Zone          : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ Park/Street   : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ SpCode        : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ ScientificName: list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ CommonName    : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ TreeType      : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ address       : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ street        : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ side          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ cell          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ OnStreet      : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ FromStreet    : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ ToStreet      : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ Age           : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ DBH (cm)      : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ TreeHt (m)    : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ CrnBase       : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ CrnHt (m)     : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ CdiaPar (m)   : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ CDiaPerp (m)  : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ AvgCdia (m)   : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ Leaf (m2)     : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ Setback       : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ TreeOr        : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ CarShade      : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ LandUse       : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ Shape         : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ WireConf      : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh1          : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ dbh2          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh3          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh4          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh5          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh6          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh7          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh8          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  ..$ default: list()
  .. ..- attr(*, "class")= chr  "collector_guess" "collector"
  ..- attr(*, "class")= chr "col_spec"
#+end_example

**** explanation of variables from [[https://www.fs.usda.gov/rds/archive/products/RDS-2016-0005/_metadata_RDS-2016-0005.html][metadata]]

DbaseID = Unique id number for each tree.

Region = 16 U.S. climate regions, abbreviations are used (see \Data\TS1_Regional_information.csv).

City = City/state names where data collected.

Source = Original *.xls filename (not available in this data publication).

TreeID = Number assigned to each tree in inventory by city.

Zone = Number/ID/name of the management area or zone that the tree is located in within a city; or nursery if young tree data collected there.

Park/Street = Data listed as Park, Street, Regional Big Tree, or Nursery (for young tree measurements).

SpCode = 4 to 6 letter code consisting of the first two letters of the genus name and the first two letters of the species name followed by two optional letters to distinguish two species with the same four-letter code (See \Data\TS2_Regional_species_and_counts.csv for a list of the SpCodes and corresponding scientific names.)

ScientificName = Botanical name of species.

CommonName = Common name of species.

Tree Type = 3 letter code where first two letters refer to life form (BD=broadleaf deciduous, BE=broadleaf evergreen, CE=coniferous evergreen, PE=palm evergreen) and the third letter is mature height (S=small which is < 8 meters, M=medium which is 8-15 meters, and L=large which is > 15 meters).

Address = From inventory, street number of building where tree is located.

Street = From inventory, the name of the street the tree is located on. (NOTE: zero values denote data were not recorded in that city. These values were left unchanged because they originated from city inventories.)

Side = From inventory, side of building or lot tree is located on (F=front, M=median, S=side, P=park). (NOTE: zero values denote data were not recorded in that city. These values were left unchanged because they originated from city inventories.)

Cell = From inventory, the cell number (i.e., 1, 2, 3, …), where protocol determines the order trees at same address are numbered (e.g., driving direction or as street number increases).

OnStreet = From inventory (omitted if not a field in city’s inventory), for trees at corner addresses when tree is on cross street rather than addressed street.

FromStreet = From inventory, the name of the first cross street that forms a boundary for trees lining un-addressed boulevards. Trees are typically numbered in order (1, 2, 3 …) on boulevards that have no development adjacent to them, no obvious parcel addresses.

ToStreet = From inventory, the name of the last cross street that forms a boundary for trees lining un-addressed boulevards.

Age = Number of years since planted. (NOTE: zero values represent newly planted trees, < 1 year old.)

DBH (cm) = Diameter at breast height (1.37 meters [m]) measured to nearest 0.1 centimeters (tape). For multi-stemmed trees forking below 1.37 m measured above the butt flare and below the point where the stem begins forking, as per protocol.

TreeHt (m) = From ground level to tree top to nearest 0.5 m (omitting erratic leader).

CrnBase (m) = Average distance between ground and lowest foliage layer to nearest 0.5 m (omitting erratic branch).

CrnHt (m) = Calculated as TreeHT minus Crnbase to nearest 0.5 m. (NOTE: zero values indicate no live crown was present, hence no other tree dimension data were available.)

CdiaPar (m) = Crown diameter measurement taken to the nearest 0.5 m parallel to the street (omitting erratic branch).

CDiaPerp (m) = Crown diameter measurement taken to the nearest 0.5 m perpendicular to the street (omitting erratic branch).

AvgCdia (m) = The average of crown diameter measured parallel and perpendicular to the street.

Leaf (m2) = Estimated using digital imaging method to nearest 0.1 squared meter (m2).

Setback = Distance from tree to nearest air-conditioned/heated space (may not be same address as tree location): 1=0-8 m, 2=8.1-12 m, 3=12.1-18 m, 4=> 18 m.

TreeOr = Taken with compass, the coordinate of tree taken from imaginary lines extending from walls of the nearest conditioned space (may not be same address as tree location).

CarShade = Number of parked automotive vehicles with some part under the tree's drip line. Car must be present (0=no autos, 1=1 auto, etc.).

LandUse = Predominant land use type where tree is growing (1=single family residential, 2=multi-family residential [duplex, apartments, condos], 3=industrial/institutional/large commercial [schools, gov't, hospitals], 4=park/vacant/other [agric., unmanaged riparian areas of greenbelts], 5=small commercial [minimart, retail boutiques, etc.], 6=transportation corridor).

Shape = Visual estimate of crown shape verified from each side with actual measured dimensions of crown height and average crown diameter (1=cylinder [maintains same crown diameter in top and bottom thirds of tree], 2=ellipsoid, the tree's center [whether vertical or horizontal is the widest, includes spherical], 3=paraboloid [widest in bottom third of crown], 4=upside down paraboloid [widest in top third of crown]).

WireConf = Utility lines that interfere with or appear above tree (0=no lines, 1=present and no potential conflict, 2=present and conflicting, 3=present and potential for conflicting). (NOTE: -1 denotes data were not collected.)

dbh1 = Dbh (centimeters [cm]) for multi-stemmed trees; for non-multi-stemmed trees, dbh1 is same as Dbh (cm).

dbh2 = Dbh (cm) for second stem of multi-stemmed trees.

dbh3 = Dbh (cm) for third stem of multi-stemmed trees.

dbh4 = Dbh (cm) for fourth stem of multi-stemmed trees.

dbh5 = Dbh (cm) for fifth stem of multi-stemmed trees.

dbh6 = Dbh (cm) for sixth stem of multi-stemmed trees.

dbh7 = Dbh (cm) for seventh stem of multi-stemmed trees.

dbh8 = Dbh (cm) for eight stem of multi-stemmed trees.

**** fix some species things
***** change lower case species codes
#+begin_src R
  d$SpCode <- toupper(d$SpCode)
#+end_src

#+RESULTS:
***** change QUAG1 to be QUAG
#+begin_src R
  d$SpCode[d$SpCode == "QUAG1"] <- "QUAG"
#+end_src

#+RESULTS:
***** fix common names

There may be other common names I need to fix.

#+begin_src R
  d$CommonName[d$CommonName == "Kurrajong"] <- "Kurrajong/Bottle tree"
  d$CommonName[d$CommonName == "Bottle tree"] <- "Kurrajong/Bottle tree"

  d$CommonName[d$CommonName == "Apple"] <- "Apple/Crabapple"
  d$CommonName[d$CommonName == "Crabapple"] <- "Apple/Crabapple"


  d$CommonName[d$CommonName == "silver maple"] <- "Silver maple"
  d$CommonName[d$CommonName == "camphor tree"] <- "Camphor tree"
  d$CommonName[d$CommonName == "ginkgo"] <- "Ginkgo"
  d$CommonName[d$CommonName == "honeylocust"] <- "Honeylocust"
  d$CommonName[d$CommonName == "ginkgo"] <- "Ginkgo"
  d$CommonName[d$CommonName == "common crapemyrtle"] <- "Common crapemyrtle"
  d$CommonName[d$CommonName == "sweetgum"] <- "Sweetgum"
  d$CommonName[d$CommonName == "southern magnolia"] <- "Southern magnolia"



#+end_src

#+RESULTS:
***** change scientific names (remove cultivated variety)
#+begin_src R
  d$ScientificName[d$ScientificName == "Prunus cerasifera cvs."] <- "Prunus cerasifera"
  d$ScientificName[d$ScientificName == "Pyrus calleryana cvs."] <- "Pyrus calleryana"

#+end_src

#+RESULTS:
**** identify species with multi stems
#+begin_src R
multistems <-
#+end_src
**** tidy a few names and select variables of interest here
#+begin_src R
      d <- d %>%
          rename(DBH = `DBH (cm)`, Leaf = `Leaf (m2)`, Species = SpCode) %>%
          select(Region, City, TreeID, Species, DBH, Leaf, DBH, Age, ScientificName)
#+end_src

#+RESULTS:

**** Remove missing data (either DBH or Age)
#+begin_src R
  d <- filter(d, DBH != -1, Age != -1) %>%
      rename(AGE = Age)
#+end_src

#+RESULTS:
**** save data
#+begin_src R
  saveRDS(d, "../data/tidy_age_dbh.rds")
#+end_src

#+RESULTS:
**** str of data now
#+begin_src R
d <- readRDS("../data/tidy_age_dbh.rds")
str(d)
#+end_src

#+RESULTS:
#+begin_example
Classes ‘tbl_df’, ‘tbl’ and 'data.frame':	12687 obs. of  8 variables:
 $ Region        : chr  "InlVal" "InlVal" "InlVal" "InlVal" ...
 $ City          : chr  "Modesto, CA" "Modesto, CA" "Modesto, CA" "Modesto, CA" ...
 $ TreeID        : int  1 2 3 4 5 6 7 8 9 10 ...
 $ Species       : chr  "ACSA1" "BEPE" "CESI4" "CICA" ...
 $ DBH           : num  2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 ...
 $ Leaf          : num  2.5 1.9 2.2 2 2.2 2.2 2.2 2.2 2.1 1.3 ...
 $ AGE           : int  0 0 0 0 0 0 0 0 0 0 ...
 $ ScientificName: chr  "Acer saccharinum" "Betula pendula" "Celtis sinensis" "Cinnamomum camphora" ...
 - attr(*, "problems")=Classes ‘tbl_df’, ‘tbl’ and 'data.frame':	24255 obs. of  5 variables:
  ..$ row     : int  1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 ...
  ..$ col     : chr  "side" "side" "side" "side" ...
  ..$ expected: chr  "an integer" "an integer" "an integer" "an integer" ...
  ..$ actual  : chr  "C" "C" "C" "C" ...
  ..$ file    : chr  "'../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'" "'../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'" "'../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'" "'../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'" ...
 - attr(*, "spec")=List of 2
  ..$ cols   :List of 41
  .. ..$ DbaseID       : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ Region        : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ City          : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ Source        : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ TreeID        : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ Zone          : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ Park/Street   : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ SpCode        : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ ScientificName: list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ CommonName    : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ TreeType      : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ address       : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ street        : list()
  .. .. ..- attr(*, "class")= chr  "collector_character" "collector"
  .. ..$ side          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ cell          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ OnStreet      : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ FromStreet    : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ ToStreet      : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ Age           : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ DBH (cm)      : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ TreeHt (m)    : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ CrnBase       : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ CrnHt (m)     : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ CdiaPar (m)   : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ CDiaPerp (m)  : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ AvgCdia (m)   : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ Leaf (m2)     : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ Setback       : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ TreeOr        : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ CarShade      : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ LandUse       : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ Shape         : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ WireConf      : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh1          : list()
  .. .. ..- attr(*, "class")= chr  "collector_double" "collector"
  .. ..$ dbh2          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh3          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh4          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh5          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh6          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh7          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  .. ..$ dbh8          : list()
  .. .. ..- attr(*, "class")= chr  "collector_integer" "collector"
  ..$ default: list()
  .. ..- attr(*, "class")= chr  "collector_guess" "collector"
  ..- attr(*, "class")= chr "col_spec"
#+end_example

**** save subset of data for testing
#+begin_src R
      d <- readRDS("../data/tidy_age_dbh.rds")
      clim <- read.csv("../data/cities_gdd_precip.csv", stringsAsFactors = F) %>%
          select(-X)

        species.to.filter <- c("LIST", "MAGR", "PYCA", "CICA", "GLTR", "PICH", "PLAC", "ACPL", "ACRU", "ACSA1", "ACSA2", "GIBI", "LAIN", "MA2", "PRCE", "QURU", "FRAM", "FRPE", "TIAM", "ULAM", "ULPA", "ULPU", "WARO", "CEOC", "FRVE")

          d2 <- d %>%
              mutate(Genus = stringr::str_extract(ScientificName, '\\w*')) %>%
              select(-Leaf,-TreeID) %>%
              left_join(.,clim) %>%
               mutate(precip = round(precip / 1000, 4),
                      gdd = round(gdd / 1000, 4))

    # For some reason, not clear to me, the predictors cannot be centered.  I think something is happening in the backend of stan or brms
    # the chains won't be able to start initialization
    # error is about a negative inverse scale parameter which is constrained to be positive.
    #           mutate(precip = round((precip - mean(precip))/ 1000, 4),
     #                 gdd = round((gdd - mean(gdd))/ 1000, 4))


          saveRDS(d2, "../data/age_dbh_full.rds")

palms <- palms <- c("BUCA", "CONU", "PHCA","PHDA4","SAPA", "SYRO", "VEME", "WAFI", "WARO")
  d.noPalm <- d2 %>%
    filter(!Species %in% palms)

          saveRDS(d.noPalm, "../data/age_dbh_full_noPalms.rds")

    d3 <- d2 %>%
              filter(Species %in% species.to.filter)

          saveRDS(d3, "../data/age_dbh_testing.rds")


    d3.noWARO <- filter(d3, Species != "WARO")

    saveRDS(d3.noWARO, "../data/age_dbh_testing_noWARO.rds")

#+end_src

#+RESULTS:
: Joining, by = "City"

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
rsync -avz ../data/age_dbh_full.rds erker@krusty:~/allo/data/
rsync -avz ../data/age_dbh_full_noPalms.rds erker@krusty:~/allo/data/
rsync -avz ../data/age_dbh_testing.rds erker@krusty:~/allo/data/
rsync -avz ../data/age_dbh_testing_noWARO.rds erker@krusty:~/allo/data/
#+END_SRC

*** COMMENT The Species for which we have age and dbh:
#+begin_src R
    sampled_species <- readRDS("../data/tidy_age_dbh.rds") %>%
      pull(ScientificName) %>%
      unique %>%
      as.character() %>%
      sort %>%
      data.frame()
nrow(sampled_species)
sampled_species %>% ascii.nowarn.print
#+end_src

#+RESULTS:
#+begin_example
[1] 161
|     | .                                      |
|-----+----------------------------------------|
| 1   | Acacia farnesiana                      |
| 2   | Acacia melanoxylon                     |
| 3   | Acacia salicina                        |
| 4   | Acer macrophyllum                      |
| 5   | Acer negundo                           |
| 6   | Acer palmatum                          |
| 7   | Acer platanoides                       |
| 8   | Acer rubrum                            |
| 9   | Acer saccharinum                       |
| 10  | Acer saccharum                         |
| 11  | Bauhinia x blakeana                    |
| 12  | Betula nigra                           |
| 13  | Betula pendula                         |
| 14  | Brachychiton populneum                 |
| 15  | Butia capitata                         |
| 16  | Callistemon citrinus                   |
| 17  | Calocedrus decurrens                   |
| 18  | Calophyllum inophyllum                 |
| 19  | Carpinus betulus 'Fastigiata'          |
| 20  | Carya illinoinensis                    |
| 21  | Cassia x nealiae                       |
| 22  | Casuarina equisetifolia                |
| 23  | Catalpa speciosa                       |
| 24  | Cedrus deodara                         |
| 25  | Celtis laevigata                       |
| 26  | Celtis occidentalis                    |
| 27  | Celtis sinensis                        |
| 28  | Ceratonia siliqua                      |
| 29  | Chilopsis linearis                     |
| 30  | Cinnamomum camphora                    |
| 31  | Citharexylum spinosum                  |
| 32  | Cocos nucifera                         |
| 33  | Conocarpus erectus var. argenteus      |
| 34  | Cordia subcordata                      |
| 35  | Cornus florida                         |
| 36  | Crataegus sp.                          |
| 37  | Crataegus x lavallei                   |
| 38  | Cupaniopsis anacardioides              |
| 39  | Delonix regia                          |
| 40  | Elaeagnus angustifolia                 |
| 41  | Elaeodendron orientale                 |
| 42  | Eriobotrya japonica                    |
| 43  | Eucalyptus ficifolia                   |
| 44  | Eucalyptus globulus                    |
| 45  | Eucalyptus microtheca                  |
| 46  | Eucalyptus sideroxylon                 |
| 47  | Fagus sylvatica                        |
| 48  | Ficus benjamina                        |
| 49  | Ficus thonningii                       |
| 50  | Filicium decipiens                     |
| 51  | Fraxinus americana                     |
| 52  | Fraxinus angustifolia                  |
| 53  | Fraxinus angustifolia 'Raywood'        |
| 54  | Fraxinus excelsior 'Hessei'            |
| 55  | Fraxinus holotricha                    |
| 56  | Fraxinus latifolia                     |
| 57  | Fraxinus pennsylvanica                 |
| 58  | Fraxinus pennsylvanica 'Marshall'      |
| 59  | Fraxinus uhdei                         |
| 60  | Fraxinus velutina                      |
| 61  | Fraxinus velutina 'Modesto'            |
| 62  | Ginkgo biloba                          |
| 63  | Gleditsia triacanthos                  |
| 64  | Gymnocladus dioicus                    |
| 65  | Ilex opaca                             |
| 66  | Ilex paraguariensis                    |
| 67  | Jacaranda mimosifolia                  |
| 68  | Juglans nigra                          |
| 69  | Juniperus virginiana                   |
| 70  | Juniperus virginiana var. silicicola   |
| 71  | Koelreuteria elegans                   |
| 72  | Koelreuteria paniculata                |
| 73  | Lagerstroemia indica                   |
| 74  | Lagerstroemia sp.                      |
| 75  | Lagerstroemia speciosa                 |
| 76  | Liquidambar styraciflua                |
| 77  | Liriodendron tulipifera                |
| 78  | Magnolia grandiflora                   |
| 79  | Malus angustifolia                     |
| 80  | Malus sp.                              |
| 81  | Melaleuca quinquenervia                |
| 82  | Metrosideros excelsa                   |
| 83  | Morus alba                             |
| 84  | Olea europaea                          |
| 85  | Parkinsonia aculeata                   |
| 86  | Parkinsonia florida                    |
| 87  | Phoenix canariensis                    |
| 88  | Phoenix dactylifera                    |
| 89  | Picea pungens                          |
| 90  | Pinus brutia                           |
| 91  | Pinus canariensis                      |
| 92  | Pinus contorta                         |
| 93  | Pinus echinata                         |
| 94  | Pinus edulis                           |
| 95  | Pinus eldarica                         |
| 96  | Pinus elliottii                        |
| 97  | Pinus halepensis                       |
| 98  | Pinus nigra                            |
| 99  | Pinus ponderosa                        |
| 100 | Pinus radiata                          |
| 101 | Pinus sylvestris                       |
| 102 | Pinus taeda                            |
| 103 | Pinus thunbergiana                     |
| 104 | Pistacia chinensis                     |
| 105 | Pittosporum undulatum                  |
| 106 | Platanus occidentalis                  |
| 107 | Platanus racemosa                      |
| 108 | Platanus x acerifolia                  |
| 109 | Platycladus orientalis                 |
| 110 | Podocarpus macrophyllus                |
| 111 | Populus angustifolia                   |
| 112 | Populus balsamifera subsp. trichocarpa |
| 113 | Populus fremontii                      |
| 114 | Populus sargentii                      |
| 115 | Prosopis chilensis                     |
| 116 | Prunus caroliniana                     |
| 117 | Prunus cerasifera                      |
| 118 | Prunus serrulata                       |
| 119 | Prunus sp.                             |
| 120 | Prunus yedoensis                       |
| 121 | Pseudotsuga menziesii                  |
| 122 | Pyrus calleryana                       |
| 123 | Pyrus calleryana 'Bradford'            |
| 124 | Pyrus kawakamii                        |
| 125 | Pyrus sp.                              |
| 126 | Quercus agrifolia                      |
| 127 | Quercus alba                           |
| 128 | Quercus ilex                           |
| 129 | Quercus laurifolia                     |
| 130 | Quercus lobata                         |
| 131 | Quercus macrocarpa                     |
| 132 | Quercus nigra                          |
| 133 | Quercus palustris                      |
| 134 | Quercus phellos                        |
| 135 | Quercus rubra                          |
| 136 | Quercus shumardii                      |
| 137 | Quercus virginiana                     |
| 138 | Rhus lancea                            |
| 139 | Robinia pseudoacacia                   |
| 140 | Sabal palmetto                         |
| 141 | Samanea saman                          |
| 142 | Schinus molle                          |
| 143 | Schinus terebinthifolius               |
| 144 | Sequoia sempervirens                   |
| 145 | Swietenia mahagoni                     |
| 146 | Syagrus romanzoffiana                  |
| 147 | Tabebuia aurea                         |
| 148 | Tabebuia heterophylla                  |
| 149 | Tabebuia ochracea subsp. neochrysantha |
| 150 | Tilia americana                        |
| 151 | Tilia cordata                          |
| 152 | Triadica sebifera                      |
| 153 | Tristaniopsis conferta                 |
| 154 | Ulmus alata                            |
| 155 | Ulmus americana                        |
| 156 | Ulmus parvifolia                       |
| 157 | Ulmus pumila                           |
| 158 | Veitchia merrillii                     |
| 159 | Washingtonia filifera                  |
| 160 | Washingtonia robusta                   |
| 161 | Zelkova serrata                        |
#+end_example

161 Species

*** COMMENT Cities and Climate

#+name: city_climate
| Region | City             |  CDD |  HDD | Precip |  Longitude | Latitude |
|--------+------------------+------+------+--------+------------+----------|
| CenFla | Orlando, FL      | 1806 |  289 |   1367 |  -81.37924 | 28.53834 |
| GulfCo | Charleston, SC   | 1124 | 1221 |   1555 |   -79.9311 |  32.7765 |
| InlEmp | Claremont, CA    |  134 |  872 |    523 |  -117.7198 |  34.0967 |
| InlVal | Modesto, CA      | 1052 | 1439 |    315 | -120.99688 | 37.63910 |
| SacVal | Sacramento, CA   |  773 | 1718 |    470 | -121.49440 | 38.58157 |
| InterW | Albuquerque, NM  |  677 | 2416 |    250 | -106.60555 | 35.08533 |
| LoMidW | Indianapolis, IN |  510 | 3153 |    392 |  -86.15807 | 39.76840 |
| MidWst | Minneapolis, MN  |  355 | 4436 |    622 |  -93.26501 | 44.97775 |
| NMtnPr | Fort Collins, CO |  349 | 3332 |    452 | -105.08442 | 40.58526 |
| NoCalC | Berkeley, CA     |   39 | 1786 |    564 | -122.27275 | 37.87159 |
| NoEast | Queens, NY       |  560 | 2819 |   1041 |   -73.7949 |  40.7282 |
| PacfNW | Longview, WA     |  157 | 2468 |   1059 |  -122.9382 |  46.1382 |
| Piedmt | Charlotte, NC    |  847 | 1891 |   1426 |  -80.84313 | 35.22709 |
| SoCalC | Santa Monica, CA |  266 |  710 |    570 | -118.49119 | 34.01945 |
| SWDsrt | Glendale, AZ     | 2128 |  637 |    174 |  -112.1860 |  33.5387 |
| TpIntW | Boise, ID        |  387 | 3325 |    417 |  -116.2023 |  43.6150 |
| Tropic | Honolulu, HI     | 2416 |    0 |   2206 | -157.85833 | 21.30694 |


[[file:../../../org/attachments/Methods/p_2018-09-10_16-28-08.png]]

The ironic thing about this figure is that Fort Collins is the
"North".  This includes a great variety of areas including Cheyenne,
WY, which according to figure 5 (McPherson and Peper 2012) in the same
document have greeen ash trees that have 55% of the leaf area of Fort
Collins green ash at age 60.  This incredible variability within
regions, hence the need for more continuous approach.  Fort Collins
equations are meant to apply to the northern parts of
maine...definitley space for improvement here (though very few live
there so maybe doesn't matter so much).  Notice how
often the reference city is on the border of the climate zone.

Get a figure showing the climate of census tracts.  Basically remake
the above figure to be more continuous

Make a figure showing the reference cities in GDD and Precip space to
reveal where there are significant holes that could be filled.  What
future cities to sample.

When I make the marginal effects plot of GDD versus Precip, I should
make the plot cover the values seen in the US.

We also have unequal observations across cities.  NY has very few.

*** COMMENT Get new climate data.  Growing degree days and Precip. Make plots

Plot, census tracts in GDD and Precip Space.  An inset of the US
continental with the color scheme.

overlay the reference cities on this plot

units of precip are 100ths of inches

#+BEGIN_SRC sh
wget -O ../data/gdd.txt https://www1.ncdc.noaa.gov/pub/data/normals/1981-2010/supplemental/products/agricultural/ann-grdd-tb4886.txt
wget -O ../data/precip.txt https://www1.ncdc.noaa.gov/pub/data/normals/1981-2010/products/precipitation/ann-prcp-normal.txt
wget -O ../data/temp-station-info.txt https://www1.ncdc.noaa.gov/pub/data/normals/1981-2010/station-inventories/temp-inventory.txt
#+END_SRC

#+RESULTS:

#+begin_src R
    library(ggplot2)
    library(plyr)
    library(dplyr)
    library(tidyr)
    library(stringr)

  d <- read.table("../data/gdd.txt", stringsAsFactors = F)

    colnames(d) <- c("station", "grdd")

    d <- d %>%
        mutate(gdd = as.numeric(str_match(grdd, "-*[0-9]+")[,1]),
               qual = str_match(grdd, "[A-Z]")[,1])
    head(d)
    dim(d)

    d <- d %>%
        filter(qual %in% c("C","S","R"),
               gdd >= 0)
    dim(d)

    ll <- read.table("../data/temp-station-info.txt", fill = T, stringsAsFactors = F)
    ll <- ll[,1:3] # get station, lat, and long
    colnames(ll) <- c("station","lat","long")

    ll <-  ll %>%
        mutate(station = as.character(station),
               lat = as.numeric(lat)) %>%
        filter(complete.cases(.))

    dl <- left_join(d, ll)

    write.csv(dl, "../data/gdd_qt_ll.csv")


  p <- read.table("../data/precip.txt", stringsAsFactors = F)
  colnames(p) <- c("station", "precip_qual")

    p <- p %>%
        mutate(precip = as.numeric(str_match(precip_qual, "[0-9]+")[,1]),
               qual = str_match(precip_qual, "[A-Z]")[,1])
    head(p)
    dim(p)

    p <- p %>%
        filter(qual %in% c("C","S","R"),
               precip >= 0)
    dim(p)

  pl <- left_join(p, ll) %>%
      filter(complete.cases(.))

    write.csv(pl, "../data/precip_qt_ll.csv")
#+end_src

#+RESULTS:
#+begin_example

     station   grdd   gdd qual
1 AQW00061705 12073C 12073    C
2 CAW00064757  2636Q  2636    Q
3 CQC00914080 11168P 11168    P
4 CQC00914801 11656R 11656    R
5 FMC00914395 11423P 11423    P
6 FMC00914419 11860P 11860    P
[1] 7501    4
[1] 6340    4
Warning message:
In evalq(as.numeric(lat), <environment>) : NAs introduced by coercion
Joining, by = "station"
      station precip_qual precip qual
1 AQC00914000      21392R  21392    R
2 AQW00061705      12263C  12263    C
3 CAW00064757       3172Q   3172    Q
4 CQC00914080       8339P   8339    P
5 CQC00914801       9124R   9124    R
6 CQC00914855       6976P   6976    P
[1] 9307    4
[1] 7440    4
Joining, by = "station"
#+end_example

:var city_climate=city_climate
#+begin_src R

        library(sp)
          library(jsonlite)
        library(dplyr)

  city_climate <- read.csv("../data/city_climate.csv")

    cities <- city_climate %>%
            dplyr::select(City, Latitude, Longitude)

        coordinates(cities) <- ~ Longitude + Latitude
        proj4string(cities) <- CRS("+init=epsg:4326")

        gdd <- read.csv("../data/gdd_qt_ll.csv", stringsAsFactors =F)
        coordinates(gdd) <- ~long + lat
        proj4string(gdd) <- CRS("+init=epsg:4326")

        gdd.dists <- spDists(cities, gdd, longlat = T)
        gdd.dists.min <- apply(gdd.dists, 1, function(x) which(x == min(x))[1])
        gdd <- gdd[gdd.dists.min,]

        precip <- read.csv("../data/precip_qt_ll.csv", stringsAsFactors =F)
        coordinates(precip) <- ~long + lat
        proj4string(precip) <- CRS("+init=epsg:4326")

        precip.dists <- spDists(cities, precip, longlat = T)
        precip.dists.min <- apply(precip.dists, 1, function(x) which(x == min(x))[1])
        precip <- precip[precip.dists.min,]

      d <- bind_cols(precip@data, gdd@data,cities@data, data.frame(coordinates(cities))) %>%
          dplyr::select(gdd, precip, City, Longitude, Latitude)


      write.csv(d, "../data/cities_gdd_precip.csv")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/GDD_Precip_Cities.png
  ggplot(d, aes(x = gdd, y = precip, label = City)) + geom_text()
#+end_src

#+RESULTS:
[[file:../figs/GDD_Precip_Cities.png]]



#+begin_src R :exports results :results graphics :file ../figs/precip.png
  ggplot(pl, aes(x = long, y = lat, color = precip)) +
      geom_point() +
    scale_color_distiller(palette = "Blues", direction = 1)
#+end_src

#+RESULTS:
[[file:../figs/precip.png]]

#+begin_src R :exports results :results graphics :file ../figs/precip_cont.png
    ggplot(dplyr::filter(pl, lat < 50, lat > 25, long < 0), aes(x = long, y = lat, color = precip)) +
        geom_point() +
      coord_map(projection = "albers", parameters = c(29,45)) +
      scale_color_distiller("Precip",palette = "Blues", direction = 1) +
      theme_bw() +
      theme(legend.position = c(.9,.23),
            text = element_text(size = 18),
            legend.direction = "vertical") +
      labs(x = "longitude", y = "latitude")
#+end_src

#+RESULTS:
[[file:../figs/precip_cont.png]]

#+begin_src R :exports results :results graphics :file ../figs/gdd_map.png
  ggplot(dl, aes(x = long, y = lat, color = gdd)) +
      geom_point() +
    scale_color_distiller(palette = "Greens", direction = 1)
#+end_src

#+RESULTS:
[[file:../figs/gdd_map.png]]

#+begin_src R :exports results :results graphics :file ../figs/gdd_cont.png
    ggplot(dplyr::filter(dl, lat < 50, lat > 25, long < 0), aes(x = long, y = lat, color = gdd)) +
        geom_point() +
      coord_map(projection = "albers", parameters = c(29,45)) +
      scale_color_distiller("Growing\nDegree\nDays",palette = "Greens", direction = 1) +
      theme_bw() +
      theme(legend.position = c(.9,.23),
            text = element_text(size = 18),
            legend.direction = "vertical") +
      labs(x = "longitude", y = "latitude")
#+end_src

#+RESULTS:
[[file:../figs/gdd_cont.png]]



Get census tract centroids and join

#+BEGIN_SRC sh
mkdir ../data/census_centroid_pop
wget -O census_centroid_pop.zip http://faculty.baruch.cuny.edu/geoportal/data/us_popctr/popctr_tracts2010.zip
unzip census_centroid_pop.zip -d ../data/census_centroid_pop/
wget -O ../data/census_centroid_pop/metadata.xml http://faculty.baruch.cuny.edu/geoportal/metadata/us_popctr/popctr_blkgrp2010_ISO.xml
rm census_centroid_pop.zip
#+END_SRC

#+RESULTS:
| Archive:   | census_centroid_pop.zip                               |
| inflating: | ../data/census_centroid_pop/popctr_tracts2010.shp     |
| inflating: | ../data/census_centroid_pop/popctr_tracts2010.shx     |
| inflating: | ../data/census_centroid_pop/popctr_tracts2010_ISO.xml |
| inflating: | ../data/census_centroid_pop/popctr_tracts2010.dbf     |
| inflating: | ../data/census_centroid_pop/popctr_tracts2010.prj     |

#+begin_src R
    library(sp)
    library(raster)
    library(dplyr)
    library(tidyr)
    library(ggplot2)
      library(reshape2)

      trks <- shapefile("../data/census_centroid_pop/popctr_tracts2010.shp")

      trks <- trks[trks@data$POPULATION != 0,]

    trks <- spTransform(trks, CRS("+init=epsg:4326"))


    d <- left_join(dl, pl) %>%
        dplyr::select(station, gdd, lat, long, precip)

  dsp <- d
    coordinates(dsp) <- ~long + lat
    proj4string(dsp) <- CRS("+init=epsg:4326")

    # find closest gdd and precip

      out <- lapply(1:length(trks), function(i) {
          dists <- spDists(trks[i,], dsp, longlat = T)
          dists.min <- apply(dists, 1, function(x) which(x == min(x))[1])
          out <- dsp[dists.min,]
    })

    dsp.trks <- do.call("rbind", out)

#+end_src

#+RESULTS:
: Joining, by = c("station", "qual", "lat", "long")



#+begin_src R
    d <- bind_cols(dsp.trks@data, trks@data) %>%
       dplyr::select(LATITUDE, LONGITUDE, POPULATION, gdd, precip, TRACT)

write.csv(d, "../data/censustractcentroids_gdd_precip_lat_long.csv")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/hue_pal_simpler.png
library(ggthemes)
    library(sp)
    library(raster)
    library(dplyr)
    library(tidyr)
    library(ggplot2)
      library(reshape2)


  r <- "#dc322f"
  yellow <- "#b58900"
  blue <- "#268bd2"
  green <- "#859900"
  cyan <- "#2aa198"
  orange <- "#cb4b16"
 violet <- "#6c71c4"
 magenta <- "#d33682"

         x1 <- colorRampPalette(c(orange,orange, r, magenta, magenta), space = "rgb", interpolate = "spline")(50)
         x2 <- colorRampPalette(c(orange,  magenta), space = "rgb", interpolate = "spline")(50)
         x3 <- colorRampPalette(c(blue,  yellow), space = "rgb", interpolate = "spline")(50)
         x4 <- colorRampPalette(c(blue, green), space = "rgb", interpolate = "spline")(50)
         x5 <- colorRampPalette(c(violet, violet, cyan, green, green), space = "rgb", interpolate = "spline")(50)

         cols <- sapply(1:length(x1), function(i) {colorRampPalette(c(x1[i], x2[i], x3[i], x4[i], x5[i]), space = "rgb",interpolate = "spline")(50) })

         colspace <- expand.grid(precip_col = seq(300,6700, length.out = 50), gdd_col = seq(2000,9000, length.out = 50))

         m <- melt(cols) %>%
             mutate(value = as.character(value))

         cols <- cbind(colspace, m)

       cols_p <- rename(cols, gdd = gdd_col, precip = precip_col)

         ggplot(data = cols_p, aes(x = gdd, y = precip)) +
           geom_raster(aes(fill = value)) +
           scale_fill_identity() +
#           geom_point(data = d, shape = 21, stroke = .3, alpha = .3) +
             theme_solarized(light = F)
#+end_src

#+RESULTS:
[[file:../figs/hue_pal_simpler.png]]


#+begin_src R
    library(sp)
      library(reshape2)
    library(dplyr)
    library(tidyr)
    library(ggplot2)


d <- read.csv("../data/censustractcentroids_gdd_precip_lat_long.csv")
  dn <- d %>%
      rename(lat = LATITUDE, long = LONGITUDE, pop = POPULATION) %>%
      filter(complete.cases(.)) %>%
      filter( lat < 50, lat > 25, long < 0)

  m <- as.matrix(dplyr::select(dn, gdd, precip))
  cm <- as.matrix(dplyr::select(cols, gdd_col, precip_col))

  whichmin <- apply(m, 1, function(mm) {
      cm[which.min(colSums((t(cm) - mm)^2)),]
  })

  precip_gdd_closest <- t(whichmin) %>%
      data.frame()

  precip_gdd_closest_value <- left_join(precip_gdd_closest, cols) %>%
      rename(gdd = gdd_col, precip = precip_col) %>%
      dplyr::select(value)

  dim(dn)
  dim(precip_gdd_closest)

  ddn <- cbind(dn, precip_gdd_closest_value)



#+end_src

#+RESULTS:
: Joining, by = c("gdd_col", "precip_col")
: [1] 38487     7
: [1] 38487     2


#+begin_src R :exports results :results graphics :file ../figs/gdd_precip_points_colored.png :bg transparent :height 600 :width 600
city <-      read.csv("../data/cities_gdd_precip.csv")

  p <-       ggplot(data = ddn) +
          scale_color_identity() +
          geom_point(alpha = .9, size = .8, aes(color = value, x = gdd, y = precip / 100))+
            theme_solarized(light = F, base_size = 18) +
      scale_y_continuous(name = "Precipitation (in)") +
      scale_x_continuous(name = "Growing Degree Days") +
      theme(axis.text = element_text(size = 18, color = "#839496"),
            rect = element_rect(fill = "transparent"),
            panel.background = element_rect(fill = "transparent"),
            panel.grid = element_blank())
p
#+end_src

#+RESULTS:
[[file:../figs/gdd_precip_points_colored.png]]

#+begin_src R :exports results :results graphics :file ../figs/gdd_precip_points_colored_cities.png :bg transparent :height 600 :width 600
city.filtered <- city %>% filter(!City %in% c("Santa Monica, CA", "Queens, NY", "Modesto, CA"))
city.filtered$precip[city.filtered$City == "Albuquerque, NM"] <- 800 # slightly shift albuquerque down for plotting
city.filtered$gdd[city.filtered$City == "Indianapolis, IN"] <- 3870 # slightly shift indianapolis over for plotting
city.filtered$gdd[city.filtered$City == "Honolulu, HI"] <- 10310 # slightly shift honolulu over for plotting

pc <- p + geom_label(data = city.filtered, aes(label = City, x = gdd, y = precip / 100))
pc
#+end_src

#+RESULTS:
[[file:../figs/gdd_precip_points_colored_cities.png]]

#+begin_src R :exports results :results graphics :file ../figs/gdd_precip_points_colored_cities_translabel.png :bg transparent :height 600 :width 600
  city.filtered <- city %>% filter(!City %in% c("Santa Monica, CA", "Queens, NY", "Modesto, CA"))
  city.filtered$precip[city.filtered$City == "Albuquerque, NM"] <- 800 # slightly shift albuquerque down for plotting
  city.filtered$gdd[city.filtered$City == "Indianapolis, IN"] <- 3870 # slightly shift indianapolis over for plotting
  city.filtered$gdd[city.filtered$City == "Honolulu, HI"] <- 10310 # slightly shift honolulu over for plotting

  pc <- p + geom_label(data = city.filtered, aes(label = City, x = gdd, y = precip / 100),
                       alpha = .7, fontface = "bold", size = 4)
  pc
#+end_src

#+RESULTS:
[[file:../figs/gdd_precip_points_colored_cities_translabel.png]]

#+begin_src R
  ## ddn <- ddn %>%
  ##   mutate(value = ifelse(gdd > 9000, "gray", value),
  ##          value = ifelse(gdd < 2000, "gray", value),
  ##          value = ifelse(precip > 6700, "gray", value),
  ##          value = ifelse(precip < 300, "gray", value))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/gdd_precip_cont_simple.png :width 600 :height 400 :bg transparent
mp <-     ggplot(dplyr::filter(ddn, lat < 50, lat > 25, long < 0), aes(x = long, y = lat)) +
        geom_point(alpha = .9, size = .8, aes(color = value)) +
      coord_map(projection = "albers", parameters = c(29,45)) +
      scale_color_identity() +
      theme_bw() +
      theme(legend.position = c(.9,.23),
            text = element_text(size = 18),
            legend.direction = "vertical") +
      labs(x = "longitude", y = "latitude") +
      theme_map() +
  theme(rect = element_rect(fill = "transparent"),
        panel.background = element_rect(color = "#839496", size = 2))
mp
#+end_src

#+RESULTS:
[[file:../figs/gdd_precip_cont_simple.png]]
#+begin_src R :exports results :results graphics :file ../figs/mp_label.png :width 800 :bg transparent
  city.filtered.mp  <-      read.csv("../data/cities_gdd_precip.csv") %>%
      filter(!City %in% c("Santa Monica, CA", "Modesto, CA", "Honolulu, HI")) %>%
      rename(lat = Latitude, long = Longitude)


    mpc <- mp + geom_label(data = city.filtered.mp, aes(label = City, x = long, y = lat))
    mpc
#+end_src

#+RESULTS:
[[file:../figs/mp_label.png]]

#+begin_src R
  library(grid)
  vp1 <- viewport(width = 0.5, height = 0.35, x = 0.743, y = 0.824)

  #Just draw the plot twice
  png("../figs/climate_space_wMap.png", bg = "transparent", width = 600)
  print(p)
  print(mp, vp = vp1)
  dev.off()

#+end_src

#+RESULTS:
: null device
:           1

[[../figs/climate_space_wMap.png]]


#+begin_src R
  library(grid)
  vp1 <- viewport(width = 0.5, height = 0.35, x = 0.743, y = 0.824)

  #Just draw the plot twice
  png("../figs/climate_space_wMap_labels.png", bg = "transparent", width = 600)
  print(pc)
  print(mp, vp = vp1)
  dev.off()

#+end_src

#+RESULTS:
: null device
:           1

[[file:../figs/climate_space_wMap_labels.png]]
#+begin_src R :exports results :results graphics :file ../figs/hue_pal.png
    teal <- "#00ffff"
    blue <- "#1500ff"
    purple <- "#aa00ff"
    purplered <- "#ff00ff"
  red <- "#ff0000"
    yellow <- "#ffff00"
    yellowgreen <- "#80ff00"
    orange <- "#ff8000"
    bluepurple <- "#5500ff"
    bluepurplepurple <- "#7f00ff"
    blueteal <- "#007fff"
    green <- "#00ff00"
    greenteal <- "#00ff80"
    darkergreen <- "#04e600"

      x1 <- colorRampPalette(c(purple,purplered,red), space = "rgb", interpolate = "spline")(50)
      x2 <- colorRampPalette(c(bluepurplepurple,orange), space = "rgb", interpolate = "spline")(50)
      x3 <- colorRampPalette(c(bluepurple,yellow), space = "rgb", interpolate = "spline")(50)
      x4 <- colorRampPalette(c(blue,blueteal,teal,greenteal,yellowgreen),space = "rgb", interpolate = "spline")(50)
      x5 <- colorRampPalette(c(blue,blueteal,teal,greenteal,green,green),space = "rgb", interpolate = "spline")(50)

      cols <- sapply(1:length(x1), function(i) {colorRampPalette(c(x1[i], x2[i],x3[i],x4[i],x5[i]), space = "rgb",interpolate = "spline")(50) })

      colspace <- expand.grid(precip_col = seq(300,6700, length.out = 50), gdd_col = seq(2000,9000, length.out = 50))

      m <- melt(cols) %>%
          mutate(value = as.character(value))

      cols <- cbind(colspace, m)

    cols_p <- rename(cols, gdd = gdd_col, precip = precip_col)

      ggplot(data = cols_p, aes(x = gdd, y = precip)) +
        geom_raster(aes(fill = value)) +
        scale_fill_identity() +
        geom_point(data = d, shape = 21, stroke = .3, alpha = .3)
#+end_src

#+RESULTS:
[[file:../figs/hue_pal.png]]

TODO: overlay the reference cities.


#+begin_src R
            dn <- d %>%
              rename(lat = LATITUDE, long = LONGITUDE, pop = POPULATION) %>%
                filter(complete.cases(.)) %>%
                filter( lat < 50, lat > 25, long < 0)

    col_gdd <- sapply(dn$gdd, function(x) cols$gdd_col[which.min(abs(x - cols$gdd_col))])
    col_precip <- sapply(dn$precip, function(x) cols$precip_col[which.min(abs(x - cols$precip_col))])

    dn <- dn %>%
        mutate(gdd_col = col_gdd,
               precip_col = col_precip)

    ddn <- left_join(dn, cols)

  ddn <- ddn %>%
    mutate(value = ifelse(gdd > 9000, "gray", value),
           value = ifelse(gdd < 2000, "gray", value),
           value = ifelse(precip > 6700, "gray", value),
           value = ifelse(precip < 300, "gray", value))

#+end_src

#+RESULTS:
: Joining, by = c("gdd_col", "precip_col")

#+begin_src R :exports results :results graphics :file ../figs/gdd_precip_cont_new.png :width 600 :height 400
  ggplot(dplyr::filter(ddn, lat < 50, lat > 25, long < 0), aes(x = long, y = lat, color = value)) +
      geom_point() +
    coord_map(projection = "albers", parameters = c(29,45)) +
    scale_color_identity() +
    theme_bw() +
    theme(legend.position = c(.9,.23),
          text = element_text(size = 18),
          legend.direction = "vertical") +
    labs(x = "longitude", y = "latitude")
#+end_src

#+RESULTS:
[[file:../figs/gdd_precip_cont_new.png]]

#+begin_src R
      d <- d %>%
        rename(lat = LATITUDE, long = LONGITUDE, pop = POPULATION) %>%
          filter(complete.cases(.)) %>%
          filter( lat < 50, lat > 25, long < 0) %>%
          mutate(gdd_col = ifelse(gdd > 10000, NA, gdd),
                 gdd_col = ifelse(gdd < 2000, NA, gdd_col),
                 precip_col = ifelse(precip > 7000, NA, precip),
                 precip_col = ifelse(precip < 100, NA, precip_col),
                 red = f(gdd_col, m = 80) + 50,
                 green = f(precip_col,100) + f(gdd_col,150),
                 blue = f(precip_col, m = 180) + 30) %>%
          rowwise() %>%
          mutate(col = ifelse(!is.na(red) & !is.na(blue) & !is.na(green), rgb(red, green, blue, maxColorValue = 255), "gray"))

#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/space_unweight_nocontour.png
  ggplot2::ggplot(d, aes(x = gdd, y = precip)) +
#        geom_raster(data = pal, aes(x = gdd, y = precip, fill = col)) +
#      geom_point(alpha = 1, size = 2, aes(fill = col), shape = 21, color = "white", stroke = .2) +
     geom_point(alpha = 1, size = 2, aes(color = col)) +
        scale_fill_identity() +
        scale_color_identity() +
          theme_bw() +
    annotate("text", x = 2500, y = 11000, label = "Pacific Northwest Coast") +
    annotate("text", x = 10800, y = 5500, label = "South\nFlorida") +
    annotate("text", x = 1250, y = 2000, label = "Rocky\nMountains")

#+end_src

#+RESULTS:
[[file:../figs/space_unweight_nocontour.png]]

#+begin_src R :exports results :results graphics :file ../figs/space_unweight_nocontour_anotherway.png
  ggplot2::ggplot(d, aes(x = gdd, y = precip)) +
        geom_raster(data = pal, aes(x = gdd, y = precip, fill = col)) +
      geom_point(alpha = 1, size = 2, aes(fill = col), shape = 21, color = "white", stroke = .2) +
        scale_fill_identity() +
        scale_color_identity() +
          theme_bw() +
    annotate("text", x = 2500, y = 11000, label = "Pacific Northwest Coast") +
    annotate("text", x = 10800, y = 5500, label = "South\nFlorida") +
    annotate("text", x = 1250, y = 2000, label = "Rocky\nMountains")

#+end_src

#+RESULTS:
[[file:../figs/space_unweight_nocontour_anotherway.png]]


The dots should instead be a contour plot of the US population.
#+begin_src R
    library(hdrcde)

    pal <- expand.grid(gdd = seq(2000,10000,100), precip = seq(100,7000,100)) %>%
          mutate(red = f(gdd, m = 80) + 50,
                 green = f(precip,100) + f(gdd,150),
                 blue = f(precip, m = 180) + 30,
              col = rgb(red, green, blue, maxColorValue = 255))

  #  con <-  ggtern::kde2d.weighted(x = d$gdd, y = d$precip, n = 1000, lims = c(range(d$gdd), range(d$precip)), w = d$pop)

   con <-  MASS::kde2d(x = d$gdd, y = d$precip, n = 100, lims = c(range(d$gdd), range(d$precip)))
#    con2 <- hdr.2d(x = con$x, y = con$y, den = con, prob = c(50,90))
  #  con2 <- hdr.2d(x = d$gdd, y = d$precip, prob = c(20,40,60,80))

    con3 <- expand.grid(gdd = con2$den$x, precip = con2$den$y)
   con3 <- expand.grid(gdd = con$x, precip = con$y)

      con3$z <- as.vector(con$z)

#+end_src

#+RESULTS:
: Error in expand.grid(gdd = con2$den$x, precip = con2$den$y) :
:   object 'con2' not found

#+begin_src R :exports results :results graphics :file ../figs/space_unweight.png :width 300 :height 300
  ggplot2::ggplot(d, aes(x = gdd, y = precip)) +
        geom_raster(data = pal, aes(x = gdd, y = precip, fill = col)) +
      geom_point(alpha = .01, size = .5) +
      geom_contour(data = con3, aes(z = z), color = "light gray") + #, breaks = con2$falpha) +
        scale_fill_identity() +
          theme_bw() +
  ylim(c(0,7500))
#+end_src

#+RESULTS:
[[file:../figs/space_unweight.png]]

#+begin_src R :exports results :results graphics :file ../figs/space_unweight.png :width 300 :height 300
  ggplot2::ggplot(d, aes(x = gdd, y = precip)) +
        geom_raster(data = pal, aes(x = gdd, y = precip, fill = col)) +
      geom_point(alpha = .01, size = .5) +
      geom_contour(data = con3, aes(z = z), color = "light gray") + #, breaks = con2$falpha) +
        scale_fill_identity() +
          theme_bw() +
  ylim(c(0,7500))
#+end_src

#+RESULTS:
[[file:../figs/space_unweight.png]]


#+begin_src R :exports results :results graphics :file ../figs/gdd_precip_cont.png :width 600 :height 400
    ggplot(dplyr::filter(d, lat < 50, lat > 25, long < 0), aes(x = long, y = lat, color = col)) +
        geom_point() +
      coord_map(projection = "albers", parameters = c(29,45)) +
      scale_color_identity() +
      theme_bw() +
      theme(legend.position = c(.9,.23),
            text = element_text(size = 18),
            legend.direction = "vertical") +
      labs(x = "longitude", y = "latitude")
#+end_src

#+RESULTS:
[[file:../figs/gdd_precip_cont.png]]

Trying to do log scale
#+begin_src R
  d <- bind_cols(dsp.trks@data, trks@data) %>%
     dplyr::select(LATITUDE, LONGITUDE, POPULATION, gdd, precip, TRACT)

  f <- function(x,m = 255) {round(m * (x - min(x, na.rm = T)) / max(x, na.rm = T), 0) }

    d <- d %>%
      rename(lat = LATITUDE, long = LONGITUDE, pop = POPULATION) %>%
        filter(complete.cases(.)) %>%
        filter( lat < 50, lat > 25, long < 0) %>%
        mutate(gdd_col = log(gdd),
               precip_col = log(precip),
               red = f(gdd_col, m = 80) + 50,
               green = f(precip_col,100) + f(gdd_col,150),
               blue = f(precip_col, m = 180) + 30) %>%
        rowwise() %>%
        mutate(col = ifelse(!is.na(red) & !is.na(blue) & !is.na(green), rgb(red, green, blue, maxColorValue = 255), "gray"))

#+end_src

#+RESULTS:


The dots should instead be a contour plot of the US population.
#+begin_src R :exports results :results graphics :file ../figs/space_log.png :width 300 :height 300
    pal <- expand.grid(gdd = seq(2000,10000,100), precip = seq(500,7000,100)) %>%
      mutate(red = f(gdd, m = 80) + 50,
             green = f(precip,100) + f(gdd,150),
             blue = f(precip, m = 180) + 30,
          col = rgb(red, green, blue, maxColorValue = 255))

    con <-  ggtern::kde2d.weighted(x = d$gdd, y = d$precip, n = 100, lims = c(range(d$gdd), range(d$precip)), w = d$pop)
    con2 <- expand.grid(gdd = con$x, precip = con$y)
    con2$z <- as.vector(con$z)

    ggplot2::ggplot(d, aes(x = gdd, y = precip)) +
          geom_tile(data = pal, aes(x = gdd, y = precip, fill = col)) +
        geom_point(alpha = .01, size = .5) +
  #          geom_contour(data = con2, aes(z = z), color = "white") +
          scale_fill_identity() +
            theme_bw() +
      coord_trans("log", "log", limx = c(2000,10000), limy = c(500,7000))


#+end_src

#+RESULTS:
[[file:../figs/space_log.png]]

#+begin_src R :exports results :results graphics :file ../figs/gdd_precip_cont.png :width 600 :height 400
    ggplot(dplyr::filter(d, lat < 50, lat > 25, long < 0), aes(x = long, y = lat, color = col)) +
        geom_point() +
      coord_map(projection = "albers", parameters = c(29,45)) +
      scale_color_identity() +
      theme_bw() +
      theme(legend.position = c(.9,.23),
            text = element_text(size = 18),
            legend.direction = "vertical") +
      labs(x = "longitude", y = "latitude")
#+end_src

#+RESULTS:
[[file:../figs/gdd_precip_cont.png]]

*** COMMENT Making figures for this data section
**** species by city raster, black if the combination exists
#+begin_src R
  library(dplyr)
  library(ggplot2)

  d <- readRDS("../data/tidy_age_dbh.rds")

  cs <- expand.grid(City = unique(d$City), Species = unique(d$Species)) %>%
      mutate(join = paste0(City, Species))

  dj <- d %>% mutate(join = paste0(City, Species)) %>% pull(join)

  cs <- cs %>% mutate(Observed = join %in% dj)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/CitySpeciesData_CityCentric.png :height 200 :width 1400
  ggplot(cs, aes(x = Species, y = City, fill = Observed)) +
      geom_raster() +
      coord_equal() +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
      scale_fill_manual(values = c("white","black"))
#+
 #     theme(legend.position = c(.95,.3))
#+end_src

#+RESULTS:
[[file:../figs/CitySpeciesData_CityCentric.png]]

#+begin_src R :exports results :results graphics :file ../figs/CityScientificNameData_CityCentric.png :height 300 :width 1400
    d <- readRDS("../data/tidy_age_dbh.rds")

    cs2 <- expand.grid(City = unique(d$City), ScientificName = unique(d$ScientificName)) %>%
        mutate(join = paste0(City, ScientificName))

    dj <- d %>% mutate(join = paste0(City, ScientificName)) %>% pull(join)

    cs2 <- cs2 %>% mutate(Observed = join %in% dj)


    ggplot(cs2, aes(x = ScientificName, y = City, fill = Observed)) +
        geom_raster() +
        coord_equal() +
        theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
        scale_fill_manual(values = c("white","black"))
  # +
   #     theme(legend.position = c(.95,.3))
#+end_src

#+RESULTS:
[[file:../figs/CityScientificNameData_CityCentric.png]]


#+begin_src R :exports results :results graphics :file ../figs/CitySpeciesData_CommonSpeciesCentric.png :height 400 :width 1400
  cs_sp_cmn <- cs_sp %>%
      group_by(Species, ScientificName) %>%
      summarize(n = sum(Observed)) %>%
      ungroup() %>%
      arrange(-n) %>%
      mutate(Species = as.factor(Species))

  cs_sp_cmn <- cs_sp %>%
      mutate(Species = as.character(Species),
             Species = factor(Species, levels(cs_sp_cmn$Species)[as.numeric(cs_sp_cmn$Species)]))

  ggplot(cs_sp_cmn, aes(x = Species, y = City, fill = Observed)) +
      geom_raster() +
      coord_equal() +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
      scale_fill_manual(values = c("white","black"))
#+end_src

#+RESULTS:
[[file:../figs/CitySpeciesData_CommonSpeciesCentric.png]]

****  trees as fill.  That is richer information.

Also along the top I could have a N cities row, and along the right I
could have a N species column.  But that's a lot of work for what is
readily apparent when looking.

I should order left to right by n cities that a species is observed in
and then by city (alphabetic)

#+begin_src R :exports results :results graphics :file ../figs/CityScientificNameData_CityCentric_n_commonSpecies.png :res 180 :width 1000 :height 800
    library(dplyr)
    library(ggplot2)

               d <- readRDS("../data/tidy_age_dbh.rds")

               d2 <- d %>%
                     group_by(ScientificName, City) %>%
                     summarize(n = n()) %>%
                     ungroup()

           d3 <- d2 %>%
             group_by(ScientificName) %>%
             summarize(n_cities = n()) %>%
             filter(n_cities > 4) %>%
             arrange(n_cities)

      d4 <- left_join(d2, d3)

      d5 <- d4 %>%
          group_by(City) %>%
          summarize(meann = sum(n_cities)) %>%
          arrange(-meann)

        d2 <- d4 %>%
            mutate(City = factor(City, levels = unique(d5$City), ordered = T),
                   ScientificName = factor(ScientificName, levels = unique(d3$ScientificName), ordered = T))

  d3 <- filter(d2, !is.na(ScientificName))

               ggplot(d3, aes(y = ScientificName, x = City, fill = n)) +
                         geom_raster() +
                         coord_equal() +
                         scale_fill_continuous(name = "Number\n of trees\n sampled", breaks = round(seq(min(d3$n), max(d3$n), length.out = 4)), type = "viridis") +
                         theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
                   scale_x_discrete("Reference City", position = "top") +
                   scale_y_discrete("Scientific Name")


#+end_src

#+RESULTS:
[[file:../figs/CityScientificNameData_CityCentric_n_commonSpecies.png]]


#+begin_src R :exports results :results graphics :file ../figs/CityScientificNameData_CityCentric_n.png :height 1300
             d <- readRDS("../data/tidy_age_dbh.rds")

             d2 <- d %>%
                   group_by(ScientificName, City) %>%
                   summarize(n = n()) %>%
                   ungroup()

         d3 <- d2 %>%
           group_by(ScientificName) %>%
           summarize(n_cities = n()) %>%
           arrange(n_cities)

    d4 <- left_join(d2, d3)

    d5 <- d4 %>%
        group_by(City) %>%
        summarize(meann = sum(n_cities)) %>%
        arrange(-meann)

      d2 <- d4 %>%
          mutate(City = factor(City, levels = unique(d5$City), ordered = T),
                 ScientificName = factor(ScientificName, levels = unique(d3$ScientificName), ordered = T))

             ggplot(d2, aes(y = ScientificName, x = City, fill = n)) +
                       geom_raster() +
                       coord_equal() +
                       scale_fill_continuous(breaks = seq(min(d2$n), max(d2$n), length.out = 3), type = "viridis") +
                       theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
                   scale_x_discrete("Reference City", position = "top") +
                   scale_y_discrete("Scientific Name")



#+end_src

#+RESULTS:
[[file:../figs/CityScientificNameData_CityCentric_n.png]]


#+begin_src R :exports results :results graphics :file ../figs/CityScientificNameData_CityCentric_n_split_1.png :height 1000 :res 80
    d2_s1 <- d2 %>% filter(as.numeric(ScientificName) > 80)

    p_s1 <-              ggplot(d2_s1, aes(y = ScientificName, x = City, fill = n)) +
                           geom_raster() +
                           coord_equal() +
                           scale_fill_continuous(breaks = seq(min(d2$n), max(d2$n), length.out = 3), type = "viridis") +
                           theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
                                 legend.position = "none",
                                 text = element_text(size = 14)) +
                   scale_x_discrete("Reference City", position = "top") +
                   scale_y_discrete("Scientific Name")


    p_s1
#+end_src

#+RESULTS:
[[file:../figs/CityScientificNameData_CityCentric_n_split_1.png]]


#+begin_src R :exports results :results graphics :file ../figs/CityScientificNameData_CityCentric_n_split_2.png :height 1000 :res 80
  d2_s2 <- d2 %>% filter(as.numeric(ScientificName) <= 80)

  p_s2 <-              ggplot(d2_s2, aes(y = ScientificName, x = City, fill = n)) +
                         geom_raster() +
                         coord_equal() +
                         scale_fill_continuous(name = "Number\n of trees\n sampled", breaks = seq(min(d2$n), max(d2$n),  length.out = 3), limits = c(min(d2$n), max(d2$n)), type = "viridis") +
                         theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
                               legend.position = c(-1.3,.75),
                                 text = element_text(size = 14)) +
                   scale_x_discrete("Reference City", position = "top") +
                   scale_y_discrete("Scientific Name")

  p_s2
#+end_src

#+RESULTS:
[[file:../figs/CityScientificNameData_CityCentric_n_split_2.png]]



#+begin_src R :exports results :results graphics :file ../figs/CityScientificNameData_CityCentric_n_splits.png :width 900 :height 1000 :res 80
library(gridExtra)
grid.arrange(p_s1, p_s2, ncol = 2)
#+end_src

#+RESULTS:
[[file:../figs/CityScientificNameData_CityCentric_n_splits.png]]


#+begin_src R :exports results :results graphics :file ../figs/CitySpeciesData_SciNameCentric.png :height 300 :width 1400

  cs_sci_cmn <- cs_sp %>%
      group_by(ScientificName) %>%
      summarize(n = sum(Observed)) %>%
      ungroup() %>%
      arrange(-n) %>%
      mutate(ScientificName = as.factor(ScientificName))

  cs_sci_cmn <- cs_sp %>%
      mutate(ScientificName = as.character(ScientificName),
             ScientificName = factor(ScientificName, levels(cs_sci_cmn$ScientificName)[as.numeric(cs_sci_cmn$ScientificName)]))


  ggplot(cs_sci_cmn, aes(x = ScientificName, y = City, fill = Observed)) +
      geom_raster() +
      coord_equal() +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
      scale_fill_manual(values = c("white","black"))
#+end_src

#+RESULTS:
[[file:../figs/CitySpeciesData_SciNameCentric.png]]
**** look at climate variables
#+begin_src R
d <-   readRDS("../data/age_dbh_testing.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/d_testing_clim.png
ggplot(d, aes(x = AGE, y = DBH, color = HDD)) + geom_point() + facet_wrap(~Precip)
#+end_src

#+RESULTS:
[[file:../figs/d_testing_clim.png]]

#+begin_src R :exports results :results graphics :file ../figs/d_testing_clim_list.png
ggplot(filter(d, Species == "LIST"), aes(x = AGE, y = DBH, color = HDD)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/d_testing_clim.png]]


Is minneapolis an influential point?
**** density of dbh by species
#+begin_src R
dd <- readRDS("../data/age_dbh_full_noPalms.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/species_density.png
ggplot(dd, aes(x = DBH)) + geom_density()
#+end_src

#+RESULTS:
[[file:../figs/species_density.png]]


#+begin_src R :exports results :results graphics :file ../figs/species_density_species.png
ggplot(dd, aes(x = DBH, color = Species)) + geom_density() +
theme(legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/species_density_species.png]]

#+begin_src R :exports results :results graphics :file ../figs/species_area_species.png :width 1000
ggplot(dd, aes(x = DBH, color = Species)) + geom_density(position = "stack")


#+end_src

#+RESULTS:
[[file:../figs/species_area_species.png]]

#+begin_src R :exports results :results graphics :file ../figs/species_density_species_facet.png :width 600 :height 700
  ggplot(dd, aes(x = DBH, color = Species)) + geom_density() +
    facet_wrap(~Species) +
    theme(legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/species_density_species_facet.png]]

#+begin_src R :exports results :results graphics :file ../figs/species_density_species_facet_excluded.png
exclude <- c("WARO", "PICH")
exclude <- c("WARO")

  ggplot(filter(dd, !Species %in% exclude), aes(x = DBH)) + geom_density()

#+end_src

#+RESULTS:
[[file:../figs/species_density_species_facet_excluded.png]]

** Modelling
*** Model requirements
We sought a model of tree growth that would adequately represent the
known biological dynamics of tree growth, namely that diameter growth
rate starts slow, reaches a maximum at a young age, and then gradually
declines to nearly zero.  Unlike tree height, which often reaches a
true asymptote, diameter of trees must always increase, however
slightly, because the growth of new wood is essential for proper
function.  While there is no true asymptote for tree diameter, they
often reach a practical one.  An additional feature to the data is
that age is time since transplanting.  This means trees can have
substantial diameter at age 0.

The type of curve that meets these criteria would be an asymmetric
sigmoidal curve with an intercept.  A modified weibull is such a curve
that has worked well in forestry and is the one we use here
citep:weiskittel_e_2011.  However, there are many other curves such as
the Chapman-Richards that meet these criteria and could also be used.

Another characteristic of tree growth curves is heterosckedasticity,
namely that as the age of trees increases, so does the variability
around the mean.  Often past modelers controlled this using log - log
transformations citep:troxel_e_2013, but we wanted to keep units in
their original scale.  We tested fitting models where the variance was
a linear function or a smoothed spline function of age.  However, this
still could yield negative predictions at low ages.  Instead we
adopted the approach of modeling DBH from a gamma distribution, which yielded
more realistic posterior predictions.

We fit models of generally increasing complexity starting a single
weibull curve for all trees and then varying the curve parameters by
city, by genus and species, and by climate.  Using approximate
leave-one-out cross validation we selected the model with the highest
estimated log posterior density citep:vehtari_e_2017.  The following
section details this model.  The source code for this paper and
details for all other models tested is available on [[https://github.com/TedwardErker/allo][github]].

**** COMMENT comment
and, especially in the urban setting, they
often die before the get close
is a practical one

the asymptote in our function could be considered a pragmatic way to
constrain diameter growth, or a practical asymptote.  While trees
could theoretically continue to increase in diameter indefinitely,
they do not in reality.  The asymptote represents this practical
maximum diameter.
*** COMMENT Bayesian Mulitlevel Modeling
a bit of background?
*** Likelihood
\[
y_{igsc} \sim Gamma(\mu_{igsc}, \alpha_y)
\]

\[
\mu_{igsc} = \beta^{(0)}_{igsc} + \beta^{(1)}_{igsc} (1 - \exp(-\beta^{(2)}_{igsc} x_{igsc}^{\beta^{(3)}_{igsc}}))
\]

where:

/y_{igsc}/ is the diameter at breast height of tree /i/ of genus, /g/,
species, /s/, and city, /c/. /y_{igsc}/ has a gamma distribution with
mean, \mu_{igsc}, and shape, /\alpha_y/.

/i/ = 1, ...., /n_{sc}/; where /n_{sc}/ is the number of trees sampled for
species, /s/, and city, /c/.

/g/ = 1, ..., /G/; where /G/ is the number of genera (G)

/s/ = 1, ..., /S_g/; where /S_g/ is the number of species in genus
/g/.

/x_{igsc}/ is the transplant age in years of tree /igsc/ (i.e. years
since transplanting).

$\beta^{(0)}_{igsc}$ is the intercept, or the diameter of a tree at time
of transplanting.

$\beta^{(1)}_{igsc}$ (plus $\beta^{(0)}_{igsc}$) is the asymptote of the
sigmoidal weibull curve.

$\beta^{(2)}_{igsc}$ and $\beta^{(3)}_{igsc}$ affect the rate of growth.  $\beta^{(2)}_{igsc}$ provides flexibility to have
slow or fast growth at young ages.

For each $\beta^{(j)}_{igsc}$, /j/ = 0,1,2:

\[
\beta^{(j)}_{igsc} = \beta^{(j)}_0 + \gamma^{(j)}_{gs}+\delta^{(j)}_{c}
\]

for $\beta^{(3)}_{igsc}$:
\[
\beta^{(3)}_{igsc} = \beta^{(3)}_0 + \tau_1 * \text{precip}_c + \tau_2 * \text{gdd}_c + \tau_3 *
(\text{precip}_c * \text{gdd}_c) + \gamma^{(3)}_{gs}+\delta^{(3)}_{c}
\]

where $\beta^{(j)}_0$ is the mean for $\beta^{(j)}_{igsc}$. $\gamma^{(j)}_{gs}$ is
genetic (genus and species) effect on $\beta^{(j)}$.  $\delta^{(j)}_{c}$ is the
city effect on $\beta^{(j)}$

The species effect is nested within the genus effect.  Both are
normally distributed, such that:
\[
\gamma^{(j)}_{gs} \sim N(\gamma^{(j)}_{g}, \sigma^{(j)}_{genus:species})
\]

\[
\gamma^{(j)}_{g} \sim N(0, \sigma^{(j)}_{genus})
\]

The effect of city is normally distributed:
\[
\delta^{(j)}_{c} \sim N(0, \sigma^{(j)}_{city})
\]

*** Priors

The priors were selected to make biologically unrealistic parameters
highly improbable, but they have a small effect on the posterior
estimates.  The \beta's and \alpha_y are gamma distributed, while the
variance parameters are half-normal.  More details on the selection of
priors are available in supplementary materials and code.  Many priors
that might appear to be narrow (e.g Half-Normal(0,.1)) are actually
fairly wide given the scale of the predictors and the reasonable range
of some parameters.

*** COMMENT Prior stuff for appendix
Priors were selected to be slightly informative and make very
biologically unreasonable parameters improbable.  The quanitity of
data overwhelms the priors, but the relatively narrow priors also
helps with sampling.

All \beta's must be positive and they are likely correlated with one
another, especially /\beta^{(1)}_{igsc}/ and /\beta^{(3)}_{igsc}/.  Without very old trees that are close
to their asympototic dbh, it is harder to separate these two parameters.

for gamma
\alpha = \mu^2/\sigma^2
\beta = \mu/\sigma^2
| parameter                             |   mu |  sd | alpha (of gamma) | beta (of gamma) |
|---------------------------------------+------+-----+------------------+-----------------|
| \beta_0                                    |    3 |   1 |                9 |               3 |
| \beta_1                                    | 1.75 |  .3 |        34.027778 |       19.444444 |
| \beta_2                                    | 1.25 | .15 |        69.444444 |       55.555556 |
| \beta_3  (no climate)                      |    1 | .15 |        44.444444 |       44.444444 |
| \beta_3  intercept (climate)               |   .6 | .15 |              16. |       26.666667 |
#+TBLFM: $4=vmean($2^2/$3^2)::$5=vmean($2/$3^2)

\[
\beta_0 \sim Gamma(4, 1.33)
\]

\[
\beta_1 \sim Gamma(34, 19.4)
\]

\[
\beta_2 \sim Gamma(69.4, 55.5)
\]

\[
\beta_3 \sim Gamma(16, 26)
\]

these priors selected because they create a wide range of possible
mean curves, but they are physically possible.

variability by cities and species, something realistic for each parameter

all sigmas: for beta_0, the intercept.  realistic values for this
range from 1 to maybe 10 (that would be a very large average size to
plant).  Therefore, the sd for \delta, \sigma_{0 c[i]}, is likely less
than 1.5.  I'll set the prior so that there's a 95% chance it's less
than 1.5.  Variation between genus/species, the sd for \gamma, is
probably similar.

((10 - 1) / 2) / 3 = 1.5.  (take the range of possible values, assume it is ~99.7%
range of normal, find the sd by cutting in half and dividing by 3).
This is the highest sd I would expect.  Set the prior so that I'm
saying I think there is a 99.7% chance I think the the sd is less than
this.  So I make the sd on the prior, 1/3 the highest sd I think is possible.

species is quarter of genus

\[
\sigma_{0_g[i]} \sim \text{Normal}(0, .4)
\]

\[
\sigma_{0_s[i]} \sim \text{Normal}(0, .1)
\]

\[
\sigma_{0_c[i]} \sim \text{Normal}(0, .3)
\]


When fit in stan, \beta_1 is multiplied by 100, so that it is on a
similar order of magnitude as the other parameters (around 1) and the
interpretation is the asymptotic diameter in meters (rather than centimeters).
Possible values for \beta_1 might range from .5 to 3 between different
genera.  Differences between species within genera will likely be less.
I expect there to be less difference between cities in the
average asymptote.

((3 - .5) / 2) / 3 = .4167 (I'll set genus to slightly less than this
because there is also species variation, which I'll set to .1 since I
expect most the time species within the same genus to be quite
similar, probably within about 1m of one another).  I'll set city
variation to the same as species.

.4 / 3 = .133
.2 / 3 = .067

for beta_1
\[
\sigma_{1_g[i]} \sim half-Normal(0.1, .4)
\]

\[
\sigma_{1_s[i]} \sim half-Normal(0, .1)
\]

for \beta_2 and \beta_3
I don't have as good of intuition for \beta_2 or \beta_3, but from
looking at curves created with different values, I expect their
variation to be smaller than for \beta_0 and \beta_1.  For a start
I'll set the variation to about half of what I set it for \beta_1.

\[
\sigma_{2_g[i]} \sim half-Normal(0, .1)
\]

\[
\sigma_{2_s[i]} \sim half-Normal(0, .05)
\]

\[
\sigma_{2_c[i]} \sim half-Normal(0, .1)
\]

\[
\sigma_{3_g[i]} \sim half-Normal(0, .1)
\]

\[
\sigma_{3_s[i]} \sim half-Normal(0, .05)
\]

\[
\sigma_{3_c[i]} \sim half-Normal(0, .1)
\]



The coefficients for climate variables on \beta_1
gdd are in thosands.  range in data is about 6000 gdd, or 6 thousands
gdd.  I expect the effects of gdd, precip, and their interaction to be
positive.  I expect the increase in asymptote across this range to be
not too big, maybe as little as .1m and as much as 1m.  So the
coeffcient might be 0.0167 to 0.167.  The interaction term will also
be positive, but smaller.

precip
\[
\tau_1 \sim Normal(.01, .01)
\]

gdd
\[
\tau_2 \sim Normal(.01, .015)
\]

gdd:precip
\[
\tau_3 \sim Normal(.005, .005)
\]

*** COMMENT Modeling Notes
**** COMMENT What should the structure of the equations be?

DBH ~ age

assymetrical

***** Height
from cite:Weiskittel_ForestGrowthAndYieldModeling:
For example, a cumulative growth curve of height over age shows three
primary stages: (1) juvenile period where growth is rapid and often
exponential; (2) a long period of maturation where the trend is nearly
linear; and (3) old age, where growth is nearly asymptotic

height ~ dbh - weibull? see pg 116 cite:Weiskittel_ForestGrowthAndYieldModeling

Constraining the model with very low dbh's
In addition to asymptotic behavior, most height-to-diameter equation
forms are also constrained to predict a height of 1.3 or 1.37
(i.e. breast height) when DBH is equal to zero, but this constraint
may cause poorer model performance across the full range of DBH
(Newton and Amponsah, 2007).

Hardwood heights tend to be harder to predict because of the lack of a
true leader and the difficulty of measuring hardwood heights
accurately (e.g. Kitahara et al., 2010).


Why Weibull is a decent option:  pg116 cite:Weiskittel_ForestGrowthAndYieldModeling
#+BEGIN_QUOTE
Significant differences between model forms can exist, however, when
limited data are available. For example, Temesgen and von Gadow (2004)
found that the percentage difference in root mean square error between
the best and worst equation for five commonly used model forms varied
from 5 to 33%. Huang et al. (1992) found in their analysis that the
Chapman–Richards, Weibull, and a modified logistic-type function were
consistently among the best performing models because they were
flexible, able to assume a variety of shapes, and extrapolated well.
#+END_QUOTE

***** DBH
cite:Weiskittel_ForestGrowthAndYieldModeling
A diameter growth curve would show much the same trend, except there
is a tendency toward more sustained growth rate as the tree matures
(Hann and Hanus, 2002b). While height increment may nearly cease in
maturity, diameter increment must continue in order to produce the
xylem and phloem needed for tree survival
***** sigmoidal forms, see the citations within:
cite:Weiskittel_ForestGrowthAndYieldModeling
Various theoretical sigmoid model forms are used to predict growth in
forestry (Zeide, 1993), but most of them can be generalized with a
single equation form (Garcıa, 2005c). The most common sigmoid model
forms include the Gompertz (1825), Bertalanffy (1949), and Richards
(1959) equations.

Although these theoretical models offer some biological
interpretability (e.g. Zeide, 2004), it is easily shown that
well-formulated empirical sigmoid equations can be just as accurate or
even more accurate for a wide range of data (e.g. Martin and Ek, 1984)



cite:garcia_2005

cite:zeide_2004

***** It would be nice to have repeat measures of trees to get diameter increments.  Individual variation can be large and noisy.
***** Could the response be multivariate?  For example: height, crown length, leaf area etc are covariate.  Modeling them together could make sense :ATTACH:
:PROPERTIES:
:Attachments: Screenshot%202018-04-26%2008.17.38.png
:ID:       4B81E555-8C81-4BD7-8DA9-0827A9F2FB79
:END:

cite:dietze_e_2008 have a multivariate response
The decision to fit all three-response variables simultaneously using
a full covariance matrix, rather than to fit each variable separately,
acknowledges the fact that response variables are likely related to
each other.

[[file:/Users/erker/projects/allo/data/4B/81E555-8C81-4BD7-8DA9-0827A9F2FB79/Screenshot 2018-04-26 08.17.38.png]]
***** cite:mcpherson_simpson_99
see pg 168

they follow frelich 1992
look at his equation form.
also
**** COMMENT fitting model
(but when fit in stan, reparameterized so beta's are closer to one
another 1-4 range)
p\[
\mu_i = \beta_0 + 100 * \beta_1 (1 - \exp(-1 * 10^{-\beta_2} x_i^{\beta_3}))
\]

**** COMMENT notes on how to do modeling in brms
IN STAN:
vignette("brms_nonlinear")
http://discourse.mc-stan.org/t/hierarchical-nonlinear-regression/4382/6

https://cran.r-project.org/web/packages/brms/vignettes/brms_nonlinear.html

see notes on bayesian approach in cite:Weiskittel_ForestGrowthAndYieldModeling

Approach:

Generative

Build up Complexity

heteroscedasticity:
http://discourse.mc-stan.org/t/what-prior-model-formula-should-i-use-to-account-for-heteroscedasticity/4271/2
formula = bf(Y ~ X, sigma ~ X)
example 2: https://arxiv.org/pdf/1705.11123.pdf

advanced brms:
https://journal.r-project.org/archive/2018/RJ-2018-017/index.html

about brms:
cite:buerkner_2017

diagnostics:
https://arxiv.org/pdf/1709.01449.pdf

***** great example explaning hamiltonian monte carlo  mcmc
http://chi-feng.github.io/mcmc-demo/
http://elevanth.org/blog/2017/11/28/build-a-better-markov-chain/
**** COMMENT model form: Weibull
model form:
cite:Weiskittel_ForestGrowthAndYieldModeling:
"This reality should lead to model forms that are complex enough to
accurately and adequately characterize the expected major behaviors of
the population, but simple enough to avoid being overly influenced by
the sample’s peculiarities."

***** why weibull
it was good for height:

Why Weibull is a decent option:  pg116 cite:Weiskittel_ForestGrowthAndYieldModeling
#+BEGIN_QUOTE
Significant differences between model forms can exist, however, when
limited data are available. For example, Temesgen and von Gadow (2004)
found that the percentage difference in root mean square error between
the best and worst equation for five commonly used model forms varied
from 5 to 33%. Huang et al. (1992) found in their analysis that the
Chapman–Richards, Weibull, and a modified logistic-type function were
consistently among the best performing models because they were
flexible, able to assume a variety of shapes, and extrapolated well.
#+END_QUOTE

It should also be good for dbh.  height and dbh are different though:



#+BEGIN_QUOTE
A diameter growth curve would show much the same trend, except there
is a tendency toward more sustained growth rate as the tree matures
(Hann and Hanus, 2002b). While height increment may nearly cease in
maturity, diameter increment must continue in order to produce the
xylem and phloem needed for tree survival
#+END_QUOTE
***** look at weibull

\[
\beta_0  (1 - exp(\beta_1 * DBH^{\beta_2})
\]


from huang 1992

H = 1.3 + a * (1 - exp(-b*DBH^c)


from wikipedia:
cdf:
\[
1 - e^{-(x/\lambda)^k}
\]


#+begin_src R :exports results :results graphics :file ../figs/weibull_test.png

  dbh <- 1:100

  a <- 31
  b <- .0209
  c <- 1.1973
  y <- 1.3 + a * (1 - exp(-b*dbh^c))

  a <- 100
  b <- .13
  c <- .5
  age <- seq(0,100,.1)
  dbh <- 1.3 + a * (1 - exp(-b * age^c))
  plot(age, dbh)
#+end_src

#+RESULTS:
[[file:../figs/weibull_test.png]]

play with the parameters to understand the flexibility and control.

#+begin_src R
  d <- readRDS("../data/tidy_age_dbh.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/ageVdbh_fram.png :bg transparent
  fram <- filter(d, SpCode == "FRAM")
  ggplot(fram, aes( x = AGE, y = DBH)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_fram.png]]

#+begin_src R
                                          #  m <- nls(DBH ~ a * (1 - exp(-b * AGE^c)), fram, list(a = 100, b = .1, c = .5))
  m <- nls(DBH ~ a * (1 - exp(-b * AGE^c)), fram_ftcollins, list(a = 100, b = .1, c = .5))
#+end_src

#+RESULTS:

#+begin_src R
  summary(m)
#+end_src

#+RESULTS:
#+begin_example

Formula: DBH ~ a * (1 - exp(-b * AGE^c))

Parameters:
   Estimate Std. Error t value Pr(>|t|)
a 1.298e+02  4.928e+01   2.633 0.013606 *
b 9.289e-03  2.137e-03   4.346 0.000165 ***
c 1.112e+00  1.745e-01   6.373 6.75e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 5.467 on 28 degrees of freedom

Number of iterations to convergence: 18
Achieved convergence tolerance: 1.869e-06
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/fram_test.png

  fram <- fram %>%
      mutate(pred = predict(m)) %>%
      gather(DBH, value, -Region, -City, -SpCode, -TreeID, -Leaf, -AGE)

  ggplot(fram, aes( x = AGE, y = value, color = DBH)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/fram_test.png]]


"a" can't be negative because dbh must be positive
"b" can't be negative because it causes negative growth and negative
dbh values, impossible
"c" can't be negative because it causes negative growth, impossible
****** what is the range of reasonable parameter values,  can be helpful for priors
#+begin_src R :exports results :results graphics :file ../figs/weibull_one.png :width 800 :res 300

   x <- 0:200
   a <- c(150)
  b <- c(.01)
   c <- c(1.2)

   d <- expand.grid(x = x,a = a, b = b, c = c)

   w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

   d <- d %>%
       mutate(y = w(a,b,c,x))

   ggplot(d, aes( x = x, y = y)) +
       geom_line() +
       xlim(c(0,150)) +
     theme_minimal() +
     scale_x_continuous("Age", limits = c(0,150)) +
     scale_y_continuous("DBH", limits = c(0,200))
#+end_src

#+RESULTS:
[[file:../figs/weibull_one.png]]

#+begin_src R :exports results :results graphics :file ../figs/weibull_one_wGammaY.png :width 800 :res 300

       x <- 0:200
       a <- c(150)
      b <- c(.01)
       c <- c(1.2)

       d <- expand.grid(x = x,a = a, b = b, c = c)

       w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

  sc <- 10
  n <- 30
  sam <- sample(1:150, n)

       d <- d %>%
           mutate(y = w(a,b,c,x))

  d2 <- d %>%
      sample_n(n) %>%
      mutate(obs = rgamma(n, shape = y/ sc, scale = sc))

       ggplot(d, aes( x = x, y = y)) +
           geom_point(data = d2, aes(x = x, y = obs), inherit.aes = F, size = .5) +
           geom_line() +
           xlim(c(0,150)) +
         theme_minimal() +
         scale_x_continuous("Age", limits = c(0,150)) +
         scale_y_continuous("DBH", limits = c(0,200))
#+end_src

#+RESULTS:
[[file:../figs/weibull_one_wGammaY.png]]


#+begin_src R :exports results :results graphics :file ../figs/weibull_reasonable.png

    x <- 1:200
    a <- seq(50,250,50)
   b <- c(.01, .0125, .015)#10^(-1*1:3)
    c <- c(.9, 1, 1.2)

    d <- expand.grid(x = x,a = a, b = b, c = c)

    w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

    d <- d %>%
        mutate(y = w(a,b,c,x))

    ggplot(d, aes( x = x, y = y)) +
        #geom_point(data = data, alpha = .1) +
        geom_line(aes(color =  a, group = interaction(a,b,c))) +
        facet_grid(b~c) +
        xlim(c(0,150))
#+end_src

#+RESULTS:
[[file:../figs/weibull_reasonable.png]]

#+begin_src R :exports results :results graphics :file ../figs/weibull_reasonable_check.png

  x <- 1:200
  z <- 3
  a <- 1.5
  b <- 1.25
  c <- 1.05

   d <- expand.grid(x = x,a = a, b = b, c = c)

   w <- function(z, a,b,c,x) z + 100 * a * (1 - exp(-(b/100) * x^c))

   d <- d %>%
       mutate(y = w(z, a,b,c,x))

   ggplot(d, aes( x = x, y = y)) +
       geom_point(data = data, alpha = .1) +
       geom_line(aes(color =  a, group = interaction(a,b,c))) +
       facet_grid(b~c) +
       xlim(c(0,150))
#+end_src

#+RESULTS:
[[file:../figs/weibull_reasonable_check.png]]


#+begin_src R :exports results :results graphics :file ../figs/weibull.png
  data <- readRDS("../data/tidy_age_dbh.rds") %>%
      select(DBH, AGE) %>%
      rename(x = AGE, y = DBH)

  x <- 1:200
  a <- seq(50,250,50)
  b <- 10^(-1*1:3)
  c <- seq(.5, 1.5, .5)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

  d <- d %>%
      mutate(y = w(a,b,c,x))

  ggplot(d, aes( x = x, y = y)) +
      geom_point(data = data, alpha = .01) +
      geom_line(aes(color =  a, group = interaction(a,b,c))) + facet_grid(b~c) +
      xlim(c(0,150))
#+end_src

#+RESULTS:
[[file:../figs/weibull.png]]

range of realistic values:
b1 : 50 - 250
b2 : 0.01 - 0.1
b3 : .5 - 1.5

b

the higher values of b2 only make sense with lower values of b3.  they
are correlated.  I wonder if I could include that information in the prior?


#+begin_src R :exports results :results graphics :file ../figs/weibull_tighter.png :width 800
    data <- readRDS("../data/tidy_age_dbh.rds") %>%
        select(DBH, AGE) %>%
        rename(x = AGE, y = DBH)

    x <- 1:200
    a <- seq(50,250,50)
#    b <- 10^(-1*1:3)
    b <- 1:3
    c <- seq(.75, 1.75, .25)

    d <- expand.grid(x = x,a = a, b = b, c = c)

#    w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

    w <- function(a,b,c,x) a * (1 - exp(-1 * 10^(-b) * x^c))

    d <- d %>%
        mutate(y = w(a,b,c,x))

    ggplot(d, aes( x = x, y = y)) +
        geom_point(data = data, alpha = .005) +
        geom_line(aes(color =  a, group = interaction(a,b,c))) + facet_grid(b~c) +
        xlim(c(0,200))
#+end_src

#+RESULTS:
[[file:../figs/weibull_tighter.png]]



#+begin_src R :exports results :results graphics :file ../figs/weibull_colorA.png
  x <- 1:100
  a <- seq(60,100,20)
  b <- c(.003,.006,.009)
  c <- seq(1, 1.5, .25)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

  d <- d %>%
      mutate(y = w(a,b,c,x))

  ggplot(d, aes( x = x, y = y, color =  a, group = interaction(a,b,c))) + geom_line() + facet_grid(b~c)

#+end_src

#+RESULTS:
[[file:../figs/weibull_colorA.png]]


#+begin_src R :exports results :results graphics :file ../figs/weibull_colorB.png
  ggplot(d, aes( x = x, y = y, color =  b, group = interaction(a,b,c))) + geom_line() + facet_grid(a~c)
#+end_src

#+RESULTS:
[[file:../figs/weibull_colorB.png]]

#+begin_src R :exports results :results graphics :file ../figs/weibull_colorC.png
  ggplot(d, aes( x = x, y = y, color =  c, group = interaction(a,b,c))) + geom_line() + facet_grid(a~b)
#+end_src

#+RESULTS:
[[file:../figs/weibull_colorC.png]]

#+begin_src R :exports results :results graphics :file ../figs/w2.png
  x <- 1:100
  b <- c(.003,.006,.009)
  c <- seq(1, 1.5, .25)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w2 <- function(b,c,x) (1 - exp(-b * x^c))

  d <- d %>%
      mutate(y = w2(b,c,x))

  ggplot(d, aes( x = x, y = y, group = interaction(b,c))) + geom_line() + facet_grid(b~c)
#+end_src

#+RESULTS:
[[file:../figs/w2.png]]

#+begin_src R :exports results :results graphics :file ../figs/w3.png
  x <- 1:100
  b <- c(.003,.006,.009)
  c <- seq(1, 1.5, .25)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w3 <- function(b,c,x) exp(-b * x^c)

  d <- d %>%
      mutate(y = w3(b,c,x))

  ggplot(d, aes( x = x, y = y, group = interaction(b,c))) + geom_line() + facet_grid(b~c)
#+end_src

#+RESULTS:
[[file:../figs/w3.png]]

#+begin_src R :exports results :results graphics :file ../figs/w4.png
  x <- 1:100
  b <- c(.003,.006,.009)
  c <- seq(1, 1.5, .25)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w4 <- function(b,c,x) -b * x^c

  d <- d %>%
      mutate(y = w4(b,c,x))

  ggplot(d, aes( x = x, y = y, group = interaction(b,c))) + geom_line() + facet_grid(b~c)
#+end_src

#+RESULTS:
[[file:../figs/w4.png]]

#+begin_src R :exports results :results graphics :file ../figs/w5.png
  x <- 1:100
  c <- seq(1, 1.5, .25)
  d <- expand.grid(x = x,a = a, c = c)

  w5 <- function(c,x) x^c

  d <- d %>%
      mutate(y = w5(c,x))

  ggplot(d, aes( x = x, y = y, group = c)) + geom_line() + facet_grid(1~c)
#+end_src

#+RESULTS:
[[file:../figs/w5.png]]
****** frelich 1992
#+begin_src R :exports results :results graphics :file ../figs/frelich_reasonable.png

    x <- 1:150
    a <- seq(50,250,50)
   b <- c(.01, .0125, .015)
    c <- c(.5, 1, 2)

    d <- expand.grid(x = x,a = a, b = b, c = c)

    w <- function(a,b,c,x) a * (1 - exp(-b * x))^c

    d <- d %>%
        mutate(y = w(a,b,c,x))

    ggplot(d, aes( x = x, y = y)) +
        #geom_point(data = data, alpha = .1) +
        geom_line(aes(color =  a, group = interaction(a,b,c))) +
        facet_grid(b~c) +
        xlim(c(0,150))
#+end_src

#+RESULTS:
[[file:../figs/frelich_reasonable.png]]
****** weibull examples
#+begin_src R
  w <- function(x, beta_2, beta_3) {(1 - exp(-beta_2 * x^beta_3)) }
  x <- 0:150
  beta_2 <- c(.0001, .0003, .005)
  beta_3 <- c(1.3, 2.2, 3)

  beta_2 <- c(.005, .000001, .11)
  beta_3 <- c(1.3, 3.2, .7)

  df <- data.frame(beta_2, beta_3)

n <- nrow(df)

  df <- cbind(df[rep(1:n, each = 151),], x = rep(x, times = n))

  df <- df %>% mutate(y = w(x, beta_2, beta_3))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/weibull_cdf.png
  ggplot(df, aes(x = x, y = y, color = interaction(beta_2, beta_3))) + geom_line() +
    scale_y_continuous(limits = c(0,1)) +
    theme_minimal() +
    theme(legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/weibull_cdf.png]]

#+begin_src R
    w <- function(x, beta_2, beta_3) {(1 - exp(-beta_2 * x^beta_3)) }
    x <- 0:150
    beta_2 <- c(.005, .000001, .11)
    beta_3 <- c(1.3, 3.2, .7)

    beta_2 <- 9^ seq(-1, -6, length.out = 5)
    beta_3 <- seq(.5, 2.7, length.out = 5) ^ 1.2

    df <- data.frame(beta_2, beta_3)

  n <- nrow(df)

    df <- cbind(df[rep(1:n, each = 151),], x = rep(x, times = n))

    df <- df %>% mutate(y = w(x, beta_2, beta_3))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/weibull_cdf2.png :res 120
  ggplot(df, aes(x = x, y = y, color = interaction(beta_2, beta_3))) + geom_line() +
    scale_y_continuous("DBH", limits = c(0,1)) +
    scale_color_solarized() +
    theme_minimal() +
    theme(legend.position = "none") +
    scale_x_continuous("Age")

#+end_src

#+RESULTS:
[[file:../figs/weibull_cdf2.png]]

#+begin_src R
  w <- function(x, beta_2, beta_3) {(1 - exp(-beta_2 * x^beta_3)) }
  x <- 0:150

  beta_2 <- round(10^ seq(-2, -3, length.out = 3), 3)
  beta_3 <- seq(1, 1.5, length.out = 3)

  df <- expand.grid(beta_2 = beta_2, beta_3 = beta_3, x = x)

  df <- df %>% mutate(y = w(x, beta_2, beta_3))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/weibull_cdf3.png :res 120
  ggplot(df, aes(x = x, y = y, color = interaction(beta_2, beta_3))) + geom_line() +
    scale_y_continuous("DBH", limits = c(0,1)) +
    theme_minimal() +
    theme(legend.position = "none") +
    facet_grid(beta_2~beta_3) +
    scale_x_continuous("Age")

#+end_src

#+RESULTS:
[[file:../figs/weibull_cdf3.png]]


#+begin_src R
    w <- function(x, beta_1, beta_2, beta_3) {beta_1 * (1 - exp(-beta_2 * x^beta_3)) }
    x <- 0:150

    beta_1 <- c(80, 100, 120, 140, 160)
    beta_2 <- 9^ seq(-1, -6, length.out = 5)
    beta_3 <- seq(.5, 2.7, length.out = 5) ^ 1.2

    df <- expand.grid(beta_1 = beta_1, beta_2 = beta_2[3], beta_3 = beta_3[3], x = x)

    df <- df %>% mutate(y = w(x, beta_1, beta_2, beta_3))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/weibull_scaled.png :res 120
  ggplot(df, aes(x = x, y = y, color = factor(beta_1))) + geom_line() +
    scale_y_continuous("DBH", limits = c(0,160)) +
    scale_color_solarized() +
    theme_minimal() +
    theme(legend.position = "none") +
    scale_x_continuous("Age")

#+end_src

#+RESULTS:
[[file:../figs/weibull_scaled.png]]

#+begin_src R
    w <- function(x, beta_0, beta_1, beta_2, beta_3) {beta_0 + beta_1 * (1 - exp(-beta_2 * x^beta_3)) }
    x <- 0:150

    beta_0 <- 5
    beta_1 <- 120
    beta_2 <- 9^ seq(-1, -6, length.out = 5)
    beta_3 <- seq(.5, 2.7, length.out = 5) ^ 1.2

    df <- expand.grid(beta_0 = beta_0, beta_1 = beta_1, beta_2 = beta_2[3], beta_3 = beta_3[3], x = x)

    df <- df %>% mutate(y = w(x, beta_0, beta_1, beta_2, beta_3))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/weibull_scaled_intercept.png :res 120
  ggplot(df, aes(x = x, y = y, color = factor(beta_0))) + geom_line() +
    scale_y_continuous("DBH", limits = c(0,160)) +
    scale_color_solarized("magenta") +
    theme_minimal() +
    theme(legend.position = "none") +
    scale_x_continuous("Age")

#+end_src

#+RESULTS:
[[file:../figs/weibull_scaled_intercept.png]]


#+begin_src R
    w <- function(x, beta_0, beta_1, beta_2, beta_3) {beta_0 + beta_1 * (1 - exp(-beta_2 * x^beta_3)) }
    x <- 0:150

    beta_0 <- 5
    beta_1 <- 120
    beta_2 <- 9^ seq(-1, -6, length.out = 5)
    beta_3 <- seq(.5, 2.7, length.out = 5) ^ 1.2

    df <- expand.grid(beta_0 = beta_0, beta_1 = beta_1, beta_2 = beta_2[3], beta_3 = beta_3[3], x = x)

    df <- df %>% mutate(y = w(x, beta_0, beta_1, beta_2, beta_3))

  sd <- 10
  n <- 45
  sam <- sample(1:150, n)

  d2 <- df %>%
      sample_n(n) %>%
      mutate(obs = rnorm(n, y, sd))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/weibull_scaled_intercept_normal_obs.png :res 120
  ggplot(df, aes(x = x, y = y, color = factor(beta_0))) +
      geom_line() +
      geom_point(data = d2, aes(x = x, y = obs), inherit.aes = F) +
    scale_y_continuous("DBH") +
    scale_color_solarized("magenta") +
    theme_minimal() +
    theme(legend.position = "none") +
    scale_x_continuous("Age")

#+end_src

#+RESULTS:
[[file:../figs/weibull_scaled_intercept_normal_obs.png]]


#+begin_src R
    w <- function(x, beta_0, beta_1, beta_2, beta_3) {beta_0 + beta_1 * (1 - exp(-beta_2 * x^beta_3)) }
    x <- 0:150

    beta_0 <- 5
    beta_1 <- 120
    beta_2 <- 9^ seq(-1, -6, length.out = 5)
    beta_3 <- seq(.5, 2.7, length.out = 5) ^ 1.2

    df <- expand.grid(beta_0 = beta_0, beta_1 = beta_1, beta_2 = beta_2[3], beta_3 = beta_3[3], x = x)

    df <- df %>% mutate(y = w(x, beta_0, beta_1, beta_2, beta_3))

  sc <- 5
  n <- 45
  sam <- sample(1:150, n)

  d2 <- df %>%
      sample_n(n) %>%
      mutate(obs = rgamma(n, shape = y/ sc, scale = sc))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/weibull_scaled_intercept_obs.png :res 120
  ggplot(df, aes(x = x, y = y, color = factor(beta_0))) +
      geom_line() +
      geom_point(data = d2, aes(x = x, y = obs), inherit.aes = F) +
    scale_y_continuous("DBH", limits = c(0,160)) +
    scale_color_solarized("magenta") +
    theme_minimal() +
    theme(legend.position = "none") +
    scale_x_continuous("Age")

#+end_src

#+RESULTS:
[[file:../figs/weibull_scaled_intercept_obs.png]]

**** COMMENT a look at gamma family
#+begin_src R
    library(brms)
    source("allo_functions.R")

    genus <- "none"
    species <- "single"
    cities <- "single"
    climate <- "none"
    hetero <- "no"
    family <- "Gamma"


    form <- generate_formula(genus, species, cities, climate, hetero, family)

    nlprior <- generate_prior(genus, species, cities, climate, family)

  n <- 100
        b1 <- 1.2
        b2 <- 2
        b3 <- 1
        shape <- 40

        w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))
                                                  #  w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

        AGE <- runif(n , 0, 150)

        mu <- w(b1,b2,b3, AGE)

      DBH <- rgamma(n, rate = shape / mu, shape = shape)
    df <- data.frame(AGE, DBH)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/testest.png
plot(df)

#+end_src

#+RESULTS:
[[file:../figs/testest.png]]


#+begin_src R


  mod <- brm(form, chains = 2, cores = 2, data = df, init_r = .3, prior = nlprior, iter = 1000, family = Gamma(link = "identity"))
#+end_src

#+RESULTS:
#+begin_example
Compiling the C++ model
Start sampling

SAMPLING FOR MODEL 'gamma brms-model' NOW (CHAIN 1).

Gradient evaluation took 0.000672 seconds
1000 transitions using 10 leapfrog steps per transition would take 6.72 seconds.
Adjust your expectations accordingly!


Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gamma brms-model' NOW (CHAIN 2).

Gradient evaluation took 0.00056 seconds
1000 transitions using 10 leapfrog steps per transition would take 5.6 seconds.
Adjust your expectations accordingly!


Iteration:   1 / 1000 [  0%]  (Warmup)
Iteration: 100 / 1000 [ 10%]  (Warmup)
Iteration: 100 / 1000 [ 10%]  (Warmup)
Iteration: 200 / 1000 [ 20%]  (Warmup)
Iteration: 200 / 1000 [ 20%]  (Warmup)
Iteration: 300 / 1000 [ 30%]  (Warmup)
Iteration: 300 / 1000 [ 30%]  (Warmup)
Iteration: 400 / 1000 [ 40%]  (Warmup)
Iteration: 400 / 1000 [ 40%]  (Warmup)
Iteration: 500 / 1000 [ 50%]  (Warmup)
Iteration: 501 / 1000 [ 50%]  (Sampling)
Iteration: 500 / 1000 [ 50%]  (Warmup)
Iteration: 501 / 1000 [ 50%]  (Sampling)
Iteration: 600 / 1000 [ 60%]  (Sampling)
Iteration: 700 / 1000 [ 70%]  (Sampling)
Iteration: 600 / 1000 [ 60%]  (Sampling)
Iteration: 800 / 1000 [ 80%]  (Sampling)
Iteration: 700 / 1000 [ 70%]  (Sampling)
Iteration: 900 / 1000 [ 90%]  (Sampling)
Iteration: 800 / 1000 [ 80%]  (Sampling)
Iteration: 1000 / 1000 [100%]  (Sampling)

 Elapsed Time: 5.63711 seconds (Warm-up)
               4.44767 seconds (Sampling)
               10.0848 seconds (Total)

Iteration: 900 / 1000 [ 90%]  (Sampling)
Iteration: 1000 / 1000 [100%]  (Sampling)

 Elapsed Time: 5.94742 seconds (Warm-up)
               4.96327 seconds (Sampling)
               10.9107 seconds (Total)
#+end_example

#+begin_src R
mod
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: df (Number of observations: 100)
Samples: 2 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 1000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     1.17      0.09     1.04     1.38        397 1.00
b2_Intercept     2.19      0.25     1.74     2.76        453 1.00
b3_Intercept     0.97      0.05     0.87     1.06        442 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    24.82      3.40    18.66    31.75        458 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/test_gamma.png
pp_check(mod, type = "ecdf_overlay") + xlim(c(-10,200))
#+end_src

#+RESULTS:
[[file:../figs/test_gamma.png]]
**** COMMENT look at distributions

Priors

gamma
alpha called shape
beta called rate
 mean is alpha/beta; variance is alpha/beta^2

#+begin_src R :exports results :results graphics :file ../figs/fnorm.png
  x <- seq(-.1,.3,.01)
  y <- dnorm(x, .07, .04)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/fnorm.png]]

#+begin_src R :exports results :results graphics :file ../figs/ftest.png
  x <- seq(0,1,.1)
  y <- dgamma(x, 4, 13)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftest.png]]

#+begin_src R :exports results :results graphics :file ../figs/ftest2.png
  x <- seq(0,8,.1)
  y <- dgamma(x, shape = 34, rate = 19.4)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftest2.png]]

#+begin_src R :exports results :results graphics :file ../figs/ftest_bsigma.png
  x <- seq(0,1,.01)
  y <- dgamma(x, shape = 10, rate = 100)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftest_bsigma.png]]


#+begin_src R :exports results :results graphics :file ../figs/ftestt.png
  x <- seq(0,10,.1)
  y <- dgamma(x, 1.3, 1.3)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftestt.png]]


#+begin_src R :exports results :results graphics :file ../figs/ftesttt.png
  x <- seq(0,5,.1)
  y <- dgamma(x, 2, 10)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftesttt.png]]


#+begin_src R :exports results :results graphics :file ../figs/cauchtest.png
  x <- seq(0,5,.1)
  y <- dcauchy(x,0,.3)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/cauchtest.png]]


#+begin_src R :exports results :results graphics :file ../figs/ttest.png
  x <- seq(0,5,.1)
  y <- dt(x,.2)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ttest.png]]

**** COMMENT bits

WRITE OUT THE MODEL.....
then convert to latex.

Use brm(..., sample_prior = "only")

- Goal is to model tree dimensions as a function of age (and other factors).
  - I'm not doing allometric models (relating dimensions to one
    another) because
    - they are usually log-log, simpler and less interesting
    - But doing them would be a natural extension
- from simple to complex
  - single species, single location, homoskedasticity
  - single species, single location, heteroskedasticity
  - multiple species, single location, heteroskedasticity
  - multiple species, vary by climate, heteroskedasticity

- for each of these approaches follow the workflow:
  - problem
  - model
  - fake data
  - fit
  - diagnostics
  - graph fit
  - PPCs (Posterior Predictive Check)
  - Compare models
- criteria for model form
  - Theoretically realistic
    - follow what we know about biology
    - increase confidence in extrapolation
    - assymetrical sigmoidal for growth
  - Interpretable and parsimonious
    - few parameters that correspond as much as possible to an
      interpretable part of growth
  - Can fit in Stan
- think hard about smart priors to help with convergence.
  - I need to address the initial value errors.

y = diameter at breast height (cm)
x = age since transplant (years)

*** COMMENT genus: none;  species: single; cities: single; climate: none; hetero: no; family gamma
**** model R code
#+begin_src R :tangle genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R
    library(dplyr)
    library(brms)
    source("allo_functions.R")

  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "Gamma"


    data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
    b0_form <- formula(b0 ~ 1)
    b1_form <- formula(b1 ~ 1)
    b2_form <- formula(b2 ~ 1)
    b3_form <- formula(b3 ~ 1)

    form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)

    nlprior <- c(prior(gamma(4,  1.33), nlpar = "b0",lb = 0),
               prior(gamma(25, 16.66), nlpar = "b1",lb = 0),
               prior(gamma(69.44,55.556), nlpar = "b2", lb = 0),
               prior(gamma(44.444, 44.444), nlpar = "b3",lb = 0),
               prior(gamma(20, 1), class = "shape"))


  d <- readRDS("../data/age_dbh_testing_noWARO.rds")


  ## prior_mod <-  brm(form,
  ##              data = d,
  ##              prior = nlprior,
  ##              family = Gamma("identity"),
  ##            sample_prior = "only",
  ##              chains = 2, cores = 2, init_r = .3, iter = 500)


     mod <- brm(form,
               data = d,
               prior = nlprior,
               family = Gamma("identity"),
               chains = 8, cores = 8, init_r = .3, iter = 2000)

    saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))

#+end_src

#+begin_src R :tangle no :exports results :results graphics :file ../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_marginaleffects11.png
 marginal_effects(prior_mod, spaghetti = T, nsamples = 500, theme = theme_gray())
#+end_src

#+RESULTS:
[[file:../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_marginaleffects11.png]]




[[file:../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_marginaleffects1.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_marginaleffects2.png
 marginal_effects(prior_mod, theme = theme_gray(), probs = c(.025, .975))
#+end_src

#+RESULTS:
[[file:../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_marginaleffects2.png]]


#+begin_src R :tangle no :exports results :results graphics :file ../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_pred.png
pp <- posterior_predict(prior_mod, nsamples=300)
ppc_dens_overlay(y = d$DBH, yrep=pp) + ylim(c(0,0.018))
#+end_src

#+RESULTS:
[[file:../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_pred.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_pred_higher.png
pp <- posterior_predict(prior_mod, nsamples=30)
ppc_dens_overlay(y = d$DBH, yrep=pp)
#+end_src

#+RESULTS:
[[file:../figs/genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma_prior_pred_higher.png]]

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R
:
: sent 457 bytes  received 60 bytes  147.71 bytes/sec
: total size is 1453  speedup is 2.81

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds
:
: sent 21368 bytes  received 12462468 bytes  1468686.59 bytes/sec
: total size is 12560017  speedup is 1.01
: You have new mail in /var/mail/erker

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:

#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma <- readRDS("../models/genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: d (Number of observations: 5381)
Samples: 8 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 8000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.79      0.08     2.64     2.95       4697 1.00
b1_Intercept     1.11      0.05     1.02     1.21       3390 1.00
b2_Intercept     0.99      0.04     0.92     1.06       4125 1.00
b3_Intercept     1.14      0.02     1.11     1.17       3419 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     8.01      0.15     7.72     8.30       5836 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma_points.png :res 220 :width 800 :height 600
  #  me <-   marginal_effects(mod)
        blue <- "#268bd2"

    ggplot(me$AGE, aes(x = AGE, y = estimate__, ymin = lower__, ymax = upper__)) +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), inherit.aes = F, alpha = .3, size = 1) +
      geom_line(color = blue) +
      geom_ribbon(fill = blue, alpha = .5) +
  theme_minimal() +
    scale_y_continuous("DBH (cm)") +
    scale_x_continuous("Age")

#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma_points.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

*** COMMENT many cities
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval no
:END:
**** model R code
#+begin_src R :tangle many_cities.R
  library(dplyr)
  library(brms)

  genus <- "no"
  species <- "no"
  cities <- "yes"
  climate <- "no"
  hetero <- "no"
  family <- "Gamma"

  data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
  b0_form <- formula(b0 ~ (1 | City))
  b1_form <- formula(b1 ~ (1 | City))
  b2_form <- formula(b2 ~ (1 | City))
  b3_form <- formula(b3 ~ (1 | City))

  form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)

  nlprior <- c(prior(gamma(4, 1.33), nlpar = "b0",lb = 0),
               prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
               prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
               prior(gamma(44.4, 44.4), nlpar = "b3",lb = 0),
               prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .25), class = "sd", nlpar = "b0", group = "City"),
               prior(normal(0, .06), class = "sd", nlpar = "b1", group = "City"),
               prior(normal(0, .03), class = "sd", nlpar = "b2", group = "City"),
               prior(normal(0, .03), class = "sd", nlpar = "b3", group = "City"))

  d <- readRDS("../data/age_dbh_testing_noWARO.rds")

  ## prior_mod <-  brm(form,
  ##                   data = d,
  ##                   prior = nlprior,
  ##                   family = Gamma("identity"),
  ##                   sample_prior = "only",
  ##                   chains = 2, cores = 2, init_r = .3, iter = 300, control = list(adapt_delta = .8))

  ## pred <- predict(prior_mod, newdata = d)

  mod <- brm(form,
             data = d,
             prior = nlprior,
             family = Gamma("identity"),
             chains = 6, cores = 6, init_r = .3, iter = 2000)

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))

#+end_src

#+begin_src R :tangle no :exports results :results graphics :file ../figs/many_cities_marginaleffects.png
 marginal_effects(prior_mod, spaghetti = T, nsamples = 200, theme = theme_gray())
#+end_src

#+RESULTS:
[[file:../figs/many_cities_marginaleffects.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/many_cities_prior_pred.png
pp <- posterior_predict(prior_mod, nsamples=100)
ppc_dens_overlay(y = d$DBH, yrep=pp) + ylim(c(0,0.018))
#+end_src

#+RESULTS:
[[file:../figs/many_cities_prior_pred.png]]
**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz many_cities.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: many_cities.R
:
: sent 494 bytes  received 60 bytes  158.29 bytes/sec
: total size is 1833  speedup is 3.31

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH many_cities.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat many_cities.Rout
#+END_SRC


**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.rds
:
: sent 23636 bytes  received 18591618 bytes  1618717.74 bytes/sec
: total size is 18703952  speedup is 1.00

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval no :tangle no
:END:

#+begin_src R
mod_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma <- readRDS("../models/genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.rds")
mod <- mod_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma
#+end_src

#+RESULTS:

#+begin_src R
mod
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City)
         b1 ~ (1 | City)
         b2 ~ (1 | City)
         b3 ~ (1 | City)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 3000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.64      0.11     0.44     0.88       1655 1.00
sd(b1_Intercept)     0.17      0.05     0.04     0.27        512 1.00
sd(b2_Intercept)     0.16      0.02     0.13     0.20       1980 1.00
sd(b3_Intercept)     0.11      0.01     0.08     0.14       1554 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.71      0.20     2.32     3.10        989 1.00
b1_Intercept     1.41      0.10     1.23     1.62       1295 1.00
b2_Intercept     0.97      0.06     0.85     1.09       1192 1.00
b3_Intercept     1.08      0.03     1.02     1.15        656 1.01

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     9.78      0.18     9.43    10.14       3000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 6 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.png]]


  cond <- data.frame(City = c("a","b","c","d"))

                         effects = c("AGE"), conditions = cond, re_formula = NULL)

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma_City.png
  d <- readRDS("../data/age_dbh_testing.rds")
cdf <- data.frame(City = unique(as.character(d$City)))
rownames(cdf) <- unique(as.character(d$City))

  marginal_effects(mod, re_formula = NULL, conditions = cdf)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma_City.png]]

There is higher uncertainty in the mean function for cities with
little data and

#+begin_src R :exports results :results graphics :file ../figs/cities_wpreds.png
#  pred <- predict(mod, newdata = d)
pred.df <- cbind(d, pred)
    ggplot(d, aes(x = AGE, y = DBH)) +
        geom_point() +
        facet_wrap(~City) +
      geom_line(data = pred.df, aes(x = AGE, y = Estimate), inherit.aes = F, color = "blue") +
      geom_ribbon(data = pred.df, aes(x = AGE, ymin = Q2.5, ymax = Q97.5), inherit.aes = F, fill = "blue", alpha = .2)
#+end_src

#+RESULTS:
[[file:../figs/cities_wpreds.png]]

*** COMMENT genus/species
**** model R code
#+begin_src R :tangle genus_species.R
  library(dplyr)
  library(brms)

  genus <- "yes"
  species <- "yes"
  cities <- "no"
  climate <- "no"
  hetero <- "no"
  family <- "Gamma"

  data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
  b0_form <- formula(b0 ~ (1 | Genus/Species))
  b1_form <- formula(b1 ~ (1 | Genus/Species))
  b2_form <- formula(b2 ~ (1 | Genus/Species))
  b3_form <- formula(b3 ~ (1 | Genus/Species))

  form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)

  nlprior <- c(prior(gamma(4, 1.33), nlpar = "b0",lb = 0),
               prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
               prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
               prior(gamma(44.4, 44.4), nlpar = "b3",lb = 0),
               prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .2), class = "sd", nlpar = "b0", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b0", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b1", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b1", group = "Genus:Species"),
               prior(normal(0, .05), class = "sd", nlpar = "b2", group = "Genus"),
               prior(normal(0, .025), class = "sd", nlpar = "b2", group = "Genus:Species"),
               prior(normal(0, .05), class = "sd", nlpar = "b3", group = "Genus"),
               prior(normal(0, .025), class = "sd", nlpar = "b3", group = "Genus:Species"))


  d <- readRDS("../data/age_dbh_testing_noWARO.rds")

  ## prior_mod <-  brm(form,
  ##                   data = d,
  ##                   prior = nlprior,
  ##                   family = Gamma("identity"),
  ##                   sample_prior = "only",
  ##                   chains = 2, cores = 2, init_r = .3, iter = 300, control = list(adapt_delta = .8))


   ## pred <- predict(prior_mod, newdata = d)

  mod <- brm(form,
             data = d,
             prior = nlprior,
             family = Gamma("identity"),
             chains = 6, cores = 6, init_r = .3, iter = 8000)

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))

#+end_src

**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz genus_species.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_species.R
:
: sent 403 bytes  received 66 bytes  134.00 bytes/sec
: total size is 2233  speedup is 4.76

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_species.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat many_cities.Rout
#+END_SRC



**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.rds
:
: sent 27620 bytes  received 78242721 bytes  1981527.62 bytes/sec
: total size is 78350170  speedup is 1.00

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval no :tangle no
:END:

#+begin_src R
mod_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma <- readRDS("../models/genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.rds")
mod <- mod_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma
#+end_src

#+RESULTS:

#+begin_src R
mod
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | Genus/Species)
         b1 ~ (1 | Genus/Species)
         b2 ~ (1 | Genus/Species)
         b3 ~ (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 3000

Group-Level Effects:
~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.14      0.10     0.00     0.36       1061 1.00
sd(b1_Intercept)     0.42      0.06     0.30     0.55       1584 1.00
sd(b2_Intercept)     0.22      0.03     0.15     0.28       1704 1.00
sd(b3_Intercept)     0.16      0.02     0.12     0.20       1458 1.00

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.04      0.03     0.00     0.12       3000 1.00
sd(b1_Intercept)     0.06      0.03     0.01     0.13        696 1.00
sd(b2_Intercept)     0.03      0.02     0.00     0.07       1575 1.00
sd(b3_Intercept)     0.04      0.02     0.00     0.07        649 1.01

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.78      0.09     2.61     2.96       1602 1.00
b1_Intercept     1.31      0.11     1.10     1.54        462 1.01
b2_Intercept     1.14      0.07     1.01     1.29       1207 1.01
b3_Intercept     1.07      0.04     0.99     1.15        624 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     9.78      0.19     9.41    10.15       3000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png :height 1200
  plot(mod, ask = F, N = 30)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma_City.png
    cdf <- data.frame(unique(select(mod$data, Genus)))
  colnames(cdf) <- "Genus"
  rownames(cdf) <- unique(mod$data$Genus)
  me <-   marginal_effects(mod, re_formula = NULL, conditions = cdf)
  me
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma_City.png]]


#+begin_src R :exports results :results graphics :file ../figs/GenusSpecies_estimates.png :width 800

  ggplot() +
      geom_point(data = d, aes(x = AGE, y = DBH, color = Genus), inherit.aes = F, alpha = .3) +
      geom_line(data = me$AGE, aes(x = AGE, y = estimate__, group = cond__)) +
      geom_ribbon(data = me$AGE, aes(x = AGE, ymin = lower__, ymax = upper__, group = cond__, color = cond__), fill = NA, size = .3) +
      facet_wrap(~Genus)

#+end_src

#+RESULTS:
[[file:../figs/GenusSpecies_estimates.png]]


#+begin_src R :exports results :results graphics :file ../figs/GenusSpecies_wpreds.png :width 1000 :height 600 :bg transparent
  library(ggthemes)
      red <- "#dc322f"
      yellow <- "#b58900"
      blue <- "#268bd2"
      green <- "#859900"
      cyan <- "#2aa198"
      orange <- "#cb4b16"
     violet <- "#6c71c4"
     magenta <- "#d33682"

    cols <- c(c(red, blue, green, violet),
              rep(blue, 2),
              c(red, blue, green),
              rep(blue, 12),
              c(red, blue, green),
              blue)

    #    pred <- predict(mod, newdata = d)
     # pred.df <- cbind(d, pred)

      ggplot(d, aes(x = AGE, y = DBH, color = Species)) +
              geom_point(alpha = .5) +
              scale_color_manual(values = cols) +
              facet_wrap(~Genus) +
              theme_solarized_2(light = F, base_size = 18) +
            geom_line(data = pred.df, aes(x = AGE, y = Estimate, group = Species), inherit.aes = F, color = "#93a1a1", size = 1) +
            geom_ribbon(data = pred.df, aes(x = AGE, ymin = Q2.5, ymax = Q97.5, color = Species), size = .3, inherit.aes = F, fill = NA)
#+end_src

#+RESULTS:
[[file:../figs/GenusSpecies_wpreds.png]]


#+begin_src R :exports results :results graphics :file ../figs/GenusSpecies_preditions.png :width 800

  ## higher.age.pred <-  select(mod$data, Genus, Species) %>% unique()
  ## nr <- nrow(higher.age.pred)
  ## higher.age.pred <- higher.age.pred[rep(1:nr, each = 120),]
  ## higher.age.pred$AGE <- rep(1:120, times = nr)

  ## pred <- predict(mod, newdata = higher.age.pred)

  ## pred.df <- cbind(higher.age.pred, pred)

    ggplot(d, aes(x = AGE, y = DBH, color = Species)) +
            geom_point(alpha = .5) +
            scale_color_manual(values = cols) +
            facet_wrap(~Genus) +
            theme_solarized_2(light = F, base_size = 18) +
          geom_line(data = pred.df, aes(x = AGE, y = Estimate, group = Species), inherit.aes = F, color = "#93a1a1", size = 1) +
          geom_ribbon(data = pred.df, aes(x = AGE, ymin = Q2.5, ymax = Q97.5, color = Species), size = .3, inherit.aes = F, fill = NA)

#+end_src

#+RESULTS:
[[file:../figs/GenusSpecies_preditions.png]]

#+begin_src R :exports results :results graphics :file ../figs/GenusSpecies_acer_preditions.png :width 800

   higher.age.pred <-  select(mod$data, Genus, Species) %>% unique() %>% filter(Genus == "Acer")
   nr <- nrow(higher.age.pred)
   higher.age.pred <- higher.age.pred[rep(1:nr, each = 120),]
   higher.age.pred$AGE <- rep(1:120, times = nr)

   pred <- predict(mod, newdata = higher.age.pred)

   pred.df <- cbind(higher.age.pred, pred)

    ggplot(filter(d, Genus == "Acer"), aes(x = AGE, y = DBH, color = Species)) +
            geom_point(alpha = .5) +
            scale_color_manual(values = cols) +
            facet_wrap(~Genus) +
            theme_solarized_2(light = F, base_size = 18) +
          geom_line(data = pred.df, aes(x = AGE, y = Estimate, color = Species), inherit.aes = F, size = 1) +
          geom_ribbon(data = pred.df, aes(x = AGE, ymin = Q2.5, ymax = Q97.5, color = Species), size = .3, inherit.aes = F, fill = NA)

#+end_src

#+RESULTS:
[[file:../figs/GenusSpecies_acer_preditions.png]]

*** COMMENT City and Genus/species
**** model R code
#+begin_src R :tangle genus_species_cities.R
    library(dplyr)
    library(brms)

    genus <- "yes"
    species <- "yes"
    cities <- "yes"
    climate <- "no"
    hetero <- "no"
    family <- "Gamma"


    data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
    b0_form <- formula(b0 ~ (1 | City) + (1 | Genus/Species))
    b1_form <- formula(b1 ~ (1 | Genus/Species))
    b2_form <- formula(b2 ~ (1 | City) + (1 | Genus/Species))
    b3_form <- formula(b3 ~ (1 | City) + (1 | Genus/Species))

    form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)

    nlprior <- c(prior(gamma(9, 3), nlpar = "b0",lb = 0),
                 prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
                 prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
                 prior(gamma(44.4, 44.4), nlpar = "b3",lb = 0),
                 prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .3), class = "sd", nlpar = "b0", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "City"),
               prior(normal(0, .4), class = "sd", nlpar = "b0", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b0", group = "Genus:Species"),
               prior(normal(.1, .4), class = "sd", nlpar = "b1", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b1", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b2", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b3", group = "Genus:Species"))


    d <- readRDS("../data/age_dbh_testing_noWARO.rds")

    ## prior_mod <-  brm(form,
    ##                   data = d,
    ##                   prior = nlprior,
    ##                   family = Gamma("identity"),
    ##                   sample_prior = "only",
    ##                   chains = 2, cores = 2, init_r = .3, iter = 300, control = list(adapt_delta = .8))


     ## pred <- predict(prior_mod, newdata = d)

    mod <- brm(form,
               data = d,
               prior = nlprior,
               family = Gamma("identity"),
               chains = 8, cores = 8, init_r = .1, iter = 6000, control = list(adapt_delta = .8))

    saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))

#+end_src

#+begin_src R :tangle no :exports results :results graphics :file ../figs/genus_species_cities_marginaleffects.png
  me <-   marginal_effects(prior_mod, spaghetti = T, nsamples = 200, theme = theme_gray())
  ggplot(attr(me$AGE, "spaghetti"), aes(x = AGE, y = estimate__, group = sample__)) +
    geom_line()# +
#coord_cartesian(xlim = c(0,5), ylim = c(0,12))
#+end_src

#+RESULTS:
[[file:../figs/genus_species_cities_marginaleffects.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/genus_species_cities_prior_pred.png
pp <- posterior_predict(prior_mod, nsamples=100)
ppc_dens_overlay(y = d$DBH, yrep=pp)
#+end_src

#+RESULTS:
[[file:../figs/genus_species_cities_prior_pred.png]]

**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz genus_species_cities.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_species_cities.R
:
: sent 258 bytes  received 66 bytes  129.60 bytes/sec
: total size is 2515  speedup is 7.76

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_species_cities.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_species_cities.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.rds
:
: sent 25544 bytes  received 95905010 bytes  1977949.57 bytes/sec
: total size is 96031445  speedup is 1.00
: You have new mail in /var/mail/erker

**** diagnostics
#+begin_src R
mod_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma <- readRDS("../models/genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.rds")
mod <- mod_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma
#+end_src

#+RESULTS:

#+begin_src R
mod
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5381)
Samples: 8 chains, each with iter = 6000; warmup = 3000; thin = 1;
         total post-warmup samples = 24000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.88      0.13     0.65     1.15       8978 1.01
sd(b2_Intercept)     0.30      0.04     0.22     0.39      18017 1.00
sd(b3_Intercept)     0.16      0.03     0.10     0.23         15 1.17

~Genus (Number of levels: 17)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.29      0.13     0.03     0.56       3384 1.01
sd(b1_Intercept)     0.56      0.15     0.32     0.91         17 1.15
sd(b2_Intercept)     0.24      0.05     0.15     0.34         40 1.06
sd(b3_Intercept)     0.10      0.03     0.04     0.16       8347 1.00

~Genus:Species (Number of levels: 24)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.14      0.08     0.01     0.30       7509 1.00
sd(b1_Intercept)     0.06      0.04     0.00     0.16      13980 1.00
sd(b2_Intercept)     0.07      0.03     0.02     0.13         52 1.05
sd(b3_Intercept)     0.06      0.02     0.03     0.11        327 1.02

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.65      0.29     2.05     3.19         20 1.13
b1_Intercept     1.53      0.17     1.24     1.93         15 1.17
b2_Intercept     1.00      0.08     0.85     1.18        915 1.01
b3_Intercept     1.11      0.05     1.00     1.21         40 1.06

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    14.31      0.29    13.75    14.89         40 1.06

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.png :height 1200
  plot(mod, ask = F, N = 30)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma_City.png

new conditions needed.
#    cdf <- data.frame(unique(select(mod$data, Genus)))
 # colnames(cdf) <- "Genus"
  #rownames(cdf) <- unique(mod$data$Genus)


  me <-   marginal_effects(mod, re_formula = NULL, conditions = cdf)
  me
#+end_src


#+begin_src R :exports results :results graphics :file ../figs/GenusSpeciesCities_estimates.png :width 800

  ggplot() +
      geom_point(data = d, aes(x = AGE, y = DBH, color = Genus), inherit.aes = F, alpha = .3) +
      geom_line(data = me$AGE, aes(x = AGE, y = estimate__, group = cond__)) +
      geom_ribbon(data = me$AGE, aes(x = AGE, ymin = lower__, ymax = upper__, group = cond__, color = cond__), fill = NA, size = .3) +
      facet_wrap(~Genus)

#+end_src

*** COMMENT b1 function of climate
**** model R code
#+begin_src R :tangle climate_b1.R
    library(dplyr)
    library(brms)

    genus <- "no"
    species <- "no"
    cities <- "no"
    climate <- "b1"
    hetero <- "no"
    family <- "Gamma"

    data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
    b0_form <- formula(b0 ~ 1)
    b1_form <- formula(b1 ~ gdd * precip)
    b2_form <- formula(b2 ~ 1)
    b3_form <- formula(b3 ~ 1)

    form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)

    nlprior <- c(prior(gamma(4, 1.33), nlpar = "b0",lb = 0),
                 prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
                 prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
                 prior(gamma(44.4, 44.4), nlpar = "b3",lb = 0),
                 prior(gamma(20, 1), class = "shape"),
                 prior(normal(0.07, 0.04), nlpar = "b1", coef = "gdd"),
                 prior(normal(0.07, 0.04), nlpar = "b1", coef = "precip"),
                 prior(normal(0.05, 0.03), nlpar = "b1", coef = "gdd:precip"))

  d <- readRDS("../data/age_dbh_testing_noWARO.rds")

    ## prior_mod <-  brm(form,
    ##                   data = d,
    ##                   prior = nlprior,
    ##                   family = Gamma("identity"),
    ##                   sample_prior = "only",
    ##                   chains = 2, cores = 2, init_r = .3, iter = 300, control = list(adapt_delta = .8))


    ##  pred <- predict(prior_mod, newdata = d)

     mod <- brm(form,
               data = d,
               prior = nlprior,
               family = Gamma("identity"),
               chains = 4, cores = 2, init_r = .3, iter = 1000)

    saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))

#+end_src

#+begin_src R :tangle no :exports results :results graphics :file ../figs/climate_b1_prior_marginaleffects11.png
 marginal_effects(prior_mod, effects = "AGE", spaghetti = T, nsamples = 300, theme = theme_gray())
#+end_src

#+RESULTS:
[[file:../figs/climate_b1_prior_marginaleffects11.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/b1_climate_prior_marginaleffects2.png
 marginal_effects(prior_mod, effects = c("gdd:precip"), theme = theme_gray(), probs = c(.025, .975), surface = T)
#+end_src

#+RESULTS:
[[file:../figs/b1_climate_prior_marginaleffects2.png]]


#+begin_src R :tangle no :exports results :results graphics :file ../figs/b1_climate_prior_pred.png
pp <- posterior_predict(prior_mod, nsamples=300)
ppc_dens_overlay(y = d$DBH, yrep=pp) + ylim(c(0,0.018))
#+end_src

#+RESULTS:
[[file:../figs/b1_climate_prior_pred.png]]

**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz climate_b1.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: climate_b1.R
:
: sent 492 bytes  received 60 bytes  157.71 bytes/sec
: total size is 1772  speedup is 3.21

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH climate_b1.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat climate_b1.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma.rds
:
: sent 20966 bytes  received 11869534 bytes  1829307.69 bytes/sec
: total size is 11962957  speedup is 1.01

**** diagnostics
#+begin_src R
mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma <- readRDS("../models/genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma.rds")
mod <- mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma
#+end_src

#+RESULTS:

#+begin_src R
mod
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ 1
         b1 ~ gdd * precip
         b2 ~ 1
         b3 ~ 1
   Data: d (Number of observations: 5381)
Samples: 4 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 2000

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.81      0.07     2.66     2.95       1629 1.00
b1_Intercept      1.01      0.06     0.91     1.13        971 1.01
b1_gdd            0.00      0.00     0.00     0.00       2025 1.00
b1_precip         0.09      0.01     0.07     0.11       1499 1.00
b1_gdd:precip     0.01      0.00     0.00     0.01       1411 1.00
b2_Intercept      0.83      0.03     0.76     0.90       1255 1.00
b3_Intercept      1.12      0.02     1.09     1.15       1009 1.01

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     8.98      0.17     8.64     9.32       1659 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png :height 1200
  plot(mod, ask = F, N = 30)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/b1_climate_marginaleffects2.png
 marginal_effects(mod, effects = c("gdd:precip"), theme = theme_gray(), probs = c(.025, .975), surface = F)
#+end_src

#+RESULTS:
[[file:../figs/b1_climate_marginaleffects2.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/b1_climate_marginaleffects2_surface.png
 marginal_effects(mod, effects = c("gdd:precip"), theme = theme_gray(), probs = c(.025, .975), surface = T)
#+end_src

#+RESULTS:
[[file:../figs/b1_climate_marginaleffects2_surface.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_gdd_precip_b1_conditions.png
    cdf <- make_conditions(mod$data, c("gdd","precip"))

  me <-   marginal_effects(mod, re_formula = NULL, conditions = cdf, effects = "AGE")
  me
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_gdd_precip_b1_conditions.png]]


#+begin_src R :exports results :results graphics :file ../figs/climate_b1.png :width 800

  ggplot() +
      geom_line(data = me$AGE, aes(x = AGE, y = estimate__, color = cond__))

#+end_src

#+RESULTS:
[[file:../figs/climate_b1.png]]


#+begin_src R :exports results :results graphics :file ../figs/GenusSpecies_wpreds.png :width 1000 :height 1000 :bg transparent
  library(ggthemes)

#  pred <- predict(mod, newdata = d)
 #    pred.df <- cbind(d, pred)

      ggplot(d, aes(x = AGE, y = DBH)) +
              geom_point(alpha = .5) +
#              scale_color_manual(values = cols) +
              facet_grid(precip~gdd) +
              theme_solarized_2(light = F, base_size = 18) +
            geom_line(data = pred.df, aes(x = AGE, y = Estimate), inherit.aes = F, color = "#93a1a1", size = 1) +
            geom_ribbon(data = pred.df, aes(x = AGE, ymin = Q2.5, ymax = Q97.5), size = .3, inherit.aes = F, fill = NA)
#+end_src

#+RESULTS:
[[file:../figs/GenusSpecies_wpreds.png]]
I would expect some of these fits to not be so great, because the
intercept (of \beta_1) isn't allowed to vary by city.

*** COMMENT b3 function of climate
**** model R code
#+begin_src R :tangle climate_b3.R
    library(dplyr)
    library(brms)

    genus <- "no"
    species <- "no"
    cities <- "no"
    climate <- "b3"
    hetero <- "no"
    family <- "Gamma"

    data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
    b0_form <- formula(b0 ~ 1)
    b1_form <- formula(b1 ~ 1)
    b2_form <- formula(b2 ~ 1)
    b3_form <- formula(b3 ~ gdd* precip)

    form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)

    nlprior <- c(prior(gamma(4, 1.33), nlpar = "b0",lb = 0),
                 prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
                 prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
                 prior(gamma(16, 26), nlpar = "b3",lb = 0),  # I reduce this value because it becomes the intercept (then gdd and precip add to it)
                 prior(gamma(20, 1), class = "shape"),
                 prior(normal(0.01, 0.01), nlpar = "b3", coef = "gdd"),
                 prior(normal(0.03, 0.01), nlpar = "b3", coef = "precip"),
                 prior(normal(0.025, 0.01), nlpar = "b3", coef = "gdd:precip"))

  d <- readRDS("../data/age_dbh_testing_noWARO.rds")

     ## prior_mod <-  brm(form,
     ##                   data = d,
     ##                   prior = nlprior,
     ##                   family = Gamma("identity"),
     ##                   sample_prior = "only",
     ##                   chains = 2, cores = 2, init_r = .3, iter = 300, control = list(adapt_delta = .8))


    ##  pred <- predict(prior_mod, newdata = d)

     mod <- brm(form,
               data = d,
               prior = nlprior,
               family = Gamma("identity"),
               chains = 4, cores = 2, init_r = .3, iter = 2000)

    saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))

#+end_src

#+begin_src R :tangle no :exports results :results graphics :file ../figs/climate_b3_prior_marginaleffects11.png
 marginal_effects(prior_mod, effects = "AGE", spaghetti = T, nsamples = 300, theme = theme_gray())
#+end_src

#+RESULTS:
[[file:../figs/climate_b3_prior_marginaleffects11.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/b3_climate_prior_marginaleffects2.png
 marginal_effects(prior_mod, effects = c("gdd:precip"), theme = theme_gray(), probs = c(.025, .975), surface = T)
#+end_src

#+RESULTS:
[[file:../figs/b3_climate_prior_marginaleffects2.png]]


#+begin_src R :tangle no :exports results :results graphics :file ../figs/b3_climate_prior_pred.png
pp <- posterior_predict(prior_mod, nsamples=300)
ppc_dens_overlay(y = d$DBH, yrep=pp) + ylim(c(0,0.018))
#+end_src

#+RESULTS:
[[file:../figs/b3_climate_prior_pred.png]]

**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz climate_b3.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: climate_b3.R
:
: sent 549 bytes  received 60 bytes  174.00 bytes/sec
: total size is 1862  speedup is 3.06
: You have new mail in /var/mail/erker

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH climate_b3.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat climate_b1.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.rds
:
: sent 20960 bytes  received 12201735 bytes  1437964.12 bytes/sec
: total size is 12295397  speedup is 1.01

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval no :tangle no
:END:

#+begin_src R
mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma <- readRDS("../models/genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.rds")
mod <- mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma
#+end_src

#+RESULTS:

#+begin_src R
mod
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         b3 ~ gdd * precip
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 3000

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.76      0.08     2.61     2.91       1777 1.00
b1_Intercept      1.31      0.07     1.18     1.47       1434 1.00
b2_Intercept      0.94      0.04     0.86     1.02       1955 1.00
b3_Intercept      1.00      0.01     0.97     1.03       1506 1.00
b3_gdd            0.00      0.00     0.00     0.00       1550 1.00
b3_precip         0.03      0.00     0.02     0.03       1580 1.00
b3_gdd:precip     0.00      0.00     0.00     0.00       1443 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     8.45      0.16     8.14     8.78       2604 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_yes_species_yes_cities_no_climate_no_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.png :height 1200
  plot(mod, ask = F, N = 30)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/b3_climate_marginaleffects2.png
 marginal_effects(mod, effects = c("gdd:precip"), theme = theme_gray(), probs = c(.025, .975), surface = F)
#+end_src

#+RESULTS:
[[file:../figs/b3_climate_marginaleffects2.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/b3_climate_marginaleffects2_surface.png
 marginal_effects(mod, effects = c("gdd:precip"), theme = theme_gray(), probs = c(.025, .975), surface = T)
#+end_src

#+RESULTS:
[[file:../figs/b3_climate_marginaleffects2_surface.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_gdd_precip_b3_conditions.png
    cdf <- make_conditions(mod$data, c("gdd","precip"))

  me <-   marginal_effects(mod, re_formula = NULL, conditions = cdf, effects = "AGE")
  me
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_gdd_precip_b3_conditions.png]]


#+begin_src R :exports results :results graphics :file ../figs/climate_b3.png :width 800

  ggplot() +
      geom_line(data = me$AGE, aes(x = AGE, y = estimate__, color = cond__))

#+end_src

#+RESULTS:
[[file:../figs/climate_b3.png]]


#+begin_src R :exports results :results graphics :file ../figs/b3_wpreds.png :width 1000 :height 1000 :bg transparent
  library(ggthemes)

#  pred <- predict(mod, newdata = d)
 #    pred.df <- cbind(d, pred)

      ggplot(d, aes(x = AGE, y = DBH)) +
              geom_point(alpha = .5) +
#              scale_color_manual(values = cols) +
              facet_grid(precip~gdd) +
              theme_solarized_2(light = F, base_size = 18) +
            geom_line(data = pred.df, aes(x = AGE, y = Estimate), inherit.aes = F, color = "#93a1a1", size = 1) +
            geom_ribbon(data = pred.df, aes(x = AGE, ymin = Q2.5, ymax = Q97.5), size = .3, inherit.aes = F, fill = NA)
#+end_src

#+RESULTS:
[[file:../figs/b3_wpreds.png]]
I would expect some of these fits to not be so great, because the
intercept (of \beta_1) isn't allowed to vary by city.

*** COMMENT compare climate beta 1 to climate beta 3
#+begin_src R
mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma
mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma
#+end_src

#+begin_src R :tangle b1_b3_climate_comparison.R
library(brms)
library(loo)
mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma <- readRDS("../models/genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma.rds")
mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma <- readRDS("../models/genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.rds")
comparison <- loo(mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma, mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma)
saveRDS(comparison, "../models/b1_b3_climate_comparison.rds")
#+end_src

#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz b1_b3_climate_comparison.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: b1_b3_climate_comparison.R
:
: sent 379 bytes  received 42 bytes  93.56 bytes/sec
: total size is 746  speedup is 1.77
: You have new mail in /var/mail/erker

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH b1_b3_climate_comparison.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat b1_b3_climate_comparison.Rout
#+END_SRC


#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/b1_b3_climate_comparison.rds ~/git/allo/models/
#+END_SRC


#+begin_src R
comparison <- readRDS("../models/b1_b3_climate_comparison.rds")
#+end_src

#+RESULTS:

#+begin_src R
comparison
#+end_src

#+RESULTS:
:                                                                                                                                              LOOIC
: mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma                                                                       42080.32
: mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma                                                                       42051.44
: mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma - mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma    28.88
:                                                                                                                                               SE
: mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma                                                                       170.68
: mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma                                                                       171.02
: mod_genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma - mod_genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma   9.66

The difference is significant.  climate affects on \beta_3 not only make
more sense from a theoretical perspective, but the data support it.

*** COMMENT genus: many;  species: many; cities: many; climate: b3linint; hetero: no; family: Gamma
**** model R code
#+begin_src R :tangle genus_species_cities_b3climate.R
  library(dplyr)
  library(brms)


  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b3linint"
  hetero <- "no"
  family <- "Gamma"

  data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
  b0_form <- formula(b0 ~ (1 | City) + (1 | Genus/Species))
  b1_form <- formula(b1 ~ (1 | City) + (1 | Genus/Species))
  b2_form <- formula(b2 ~ (1 | City) + (1 | Genus/Species))
  b3_form <- formula(b3 ~ precip * gdd +  (1 | City) + (1 | Genus / Species))


  form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)


  nlprior <- c(prior(gamma(9, 3), nlpar = "b0",lb = 0),
               prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
               prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
               prior(gamma(16, 26), nlpar = "b3", lb = 0),
               prior(normal(0.01, 0.015), nlpar = "b3", coef = "gdd"),
               prior(normal(0.01, 0.01), nlpar = "b3", coef = "precip"),
               prior(normal(0.005, 0.005), nlpar = "b3", coef = "precip:gdd"),
               prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .3), class = "sd", nlpar = "b0", group = "City"),
               prior(normal(.1, .3), class = "sd", nlpar = "b1", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "City"),
               prior(normal(0, .4), class = "sd", nlpar = "b0", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b0", group = "Genus:Species"),
               prior(normal(.1, .4), class = "sd", nlpar = "b1", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b1", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b2", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b3", group = "Genus:Species"))


  d <- readRDS("../data/age_dbh_testing_noWARO.rds")


  ## prior_mod <-    brm(form,
  ##                      data = d,
  ##                      prior = nlprior,
  ##                      family = Gamma("identity"),
  ##                      sample_prior = "only",
  ##                      chains = 2, cores = 2, init_r = .3, iter = 300, control = list(adapt_delta = .8))


  mod <- brm(form,
             data = d,
             prior = nlprior,
             family = Gamma("identity"),
             chains = 12, cores = 12, init_r = .3, iter = 6000, control = list(adapt_delta = .9))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

#+begin_src R :tangle no :exports results :results graphics :file ../figs/genus_species_cities_climate_b3_prior_marginaleffects11.png
 marginal_effects(prior_mod, effects = "AGE", spaghetti = T, nsamples = 300, theme = theme_gray())
#+end_src

#+RESULTS:
[[file:../figs/genus_species_cities_climate_b3_prior_marginaleffects11.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/genus_species_cities_b3_climate_prior_marginaleffects2.png
 marginal_effects(prior_mod, effects = c("gdd:precip"), theme = theme_gray(), probs = c(.025, .975), surface = T)
#+end_src

#+RESULTS:
[[file:../figs/genus_species_cities_b3_climate_prior_marginaleffects2.png]]


#+begin_src R :tangle no :exports results :results graphics :file ../figs/b3_climate_prior_pred.png
pp <- posterior_predict(prior_mod, nsamples=300)
ppc_dens_overlay(y = d$DBH, yrep=pp) + ylim(c(0,0.018))
#+end_src

#+RESULTS:
[[file:../figs/b3_climate_prior_pred.png]]

**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_species_cities_b3climate.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_species_cities_b3climate.R
:
: sent 597 bytes  received 72 bytes  267.60 bytes/sec
: total size is 2848  speedup is 4.26
: You have new mail in /var/mail/erker

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_species_cities_b3climate.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_species_cities_b3climate.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.rds
:
: sent 71067 bytes  received 148558577 bytes  2340624.31 bytes/sec
: total size is 148669211  speedup is 1.00
: You have new mail in /var/mail/erker

**** assess model
#+begin_src R
mod_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.rds")
mod <- mod_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ precip * gdd + (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5381)
Samples: 12 chains, each with iter = 6000; warmup = 3000; thin = 1;
         total post-warmup samples = 36000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.83      0.13     0.61     1.11      24073 1.00
sd(b1_Intercept)     0.38      0.08     0.25     0.58      17614 1.00
sd(b2_Intercept)     0.28      0.04     0.21     0.37      20967 1.00
sd(b3_Intercept)     0.15      0.03     0.10     0.22      19786 1.00

~Genus (Number of levels: 17)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.42      0.13     0.17     0.69      10239 1.00
sd(b1_Intercept)     0.61      0.13     0.39     0.90      19152 1.00
sd(b2_Intercept)     0.15      0.05     0.04     0.25       7541 1.00
sd(b3_Intercept)     0.11      0.03     0.04     0.17       9574 1.00

~Genus:Species (Number of levels: 24)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.12      0.08     0.01     0.29      10158 1.00
sd(b1_Intercept)     0.12      0.06     0.01     0.25       9660 1.00
sd(b2_Intercept)     0.09      0.03     0.05     0.16       7914 1.00
sd(b3_Intercept)     0.06      0.02     0.03     0.11       9304 1.00

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.46      0.25     1.96     2.95      12399 1.00
b1_Intercept      1.65      0.17     1.34     1.99      14097 1.00
b2_Intercept      0.95      0.08     0.81     1.11      15411 1.00
b3_Intercept      0.93      0.08     0.78     1.07      15675 1.00
b3_precip         0.01      0.01     0.00     0.03      45951 1.00
b3_gdd            0.01      0.01     0.00     0.03      37118 1.00
b3_precip:gdd     0.00      0.00     0.00     0.01      26547 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    15.03      0.29    14.46    15.61      64154 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 6 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example





#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ precip * gdd + (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5381)
Samples: 12 chains, each with iter = 500; warmup = 250; thin = 1;
         total post-warmup samples = 3000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.48      0.05     0.38     0.59       3000 1.01
sd(b1_Intercept)     0.29      0.05     0.20     0.41         23 1.16
sd(b2_Intercept)     0.16      0.02     0.13     0.19       3000 1.00
sd(b3_Intercept)     0.09      0.01     0.07     0.12        325 1.02

~Genus (Number of levels: 17)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.33      0.09     0.17     0.52        447 1.03
sd(b1_Intercept)     0.32      0.10     0.05     0.47         19 1.21
sd(b2_Intercept)     0.14      0.03     0.09     0.19       1671 1.01
sd(b3_Intercept)     0.07      0.02     0.01     0.11         25 1.17

~Genus:Species (Number of levels: 24)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.05      0.04     0.00     0.13       2275 1.00
sd(b1_Intercept)     0.17      0.09     0.01     0.36        177 1.07
sd(b2_Intercept)     0.06      0.02     0.02     0.10        136 1.05
sd(b3_Intercept)     0.06      0.02     0.03     0.09        751 1.02

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.53      0.17     2.19     2.86       1554 1.00
b1_Intercept      1.56      0.13     1.33     1.81       1566 1.01
b2_Intercept      0.88      0.06     0.77     1.00        314 1.03
b3_Intercept      0.97      0.05     0.88     1.07         91 1.04
b3_precip         0.01      0.01     0.00     0.03       3000 1.00
b3_gdd            0.01      0.00     0.00     0.02       3000 1.01
b3_precip:gdd     0.00      0.00     0.00     0.01         48 1.07

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    14.87      0.30    14.29    15.47       3000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 4 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png :height 1300
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_mainparameters.png :height 250
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[1:4],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_mainparameters.png]]


#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_climate_effects.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[5:7],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_climate_effects.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_sd_beta0.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[8:10],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_sd_beta0.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_sd_beta1.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[11:13],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_sd_beta1.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_sd_beta2.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[14:16],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_sd_beta2.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_sd_beta3.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[17:19],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_sd_beta3.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_shape.png :height 100
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[20],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_shape.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:gdd")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png]]



#+begin_src R
precip.gdd <-   marginal_effects(mod, effects = "precip:gdd", surface = T)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipgdd_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png
precip.gdd
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipgdd_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma_wCities.png
  plot(precip.gdd)[[1]] +
      geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = precip, y = gdd)) +
      geom_label(data = unique(select(mod$data, City, gdd, precip)), aes(x = precip, y = gdd, label = City), nudge_y = .15) +
    coord_flip()
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma_wCities.png]]


#+begin_src R
  to.include <- c("LIST", "PLAC", "FRPE")

  cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
    cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
    cond <- left_join(cond, unique(select(mod$data, City, precip, gdd)))
    cond <- filter(cond, Species %in%  to.include)

     me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict")
#+end_src

#+RESULTS:
: Joining, by = "Species"
: Warning message:
: Column `Species` joining factor and character vector, coercing into character vector
: Joining, by = "City"
: Warning message:
: Column `City` joining factor and character vector, coercing into character vector
: There were 50 or more warnings (use warnings() to see the first 50)

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png :width 1000 :height 300

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE)) %>%
      filter(Species %in% to.include)

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = "red") +
          facet_grid(Species~City*gddprecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png]]


#+begin_src R :tangle marginal_effects_fullconditions.R
library(brms)
library(dplyr)
mod <- readRDS("../models/genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.rds")
  cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
    cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
    cond <- left_join(cond, unique(select(mod$data, City, precip, gdd)))

     me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict")
saveRDS(me, "../models/genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma_marginaleffects.rds")
#+end_src

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz marginal_effects_fullconditions.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: marginal_effects_fullconditions.R
:
: sent 492 bytes  received 48 bytes  216.00 bytes/sec
: total size is 699  speedup is 1.29
: You have new mail in /var/mail/erker

#+BEGIN_SRC sh

  ssh krusty
  cd allo/code
  nohup R CMD BATCH marginal_effects_fullconditions.R &
  cat marginal_effects_fullconditions.Rout
  exit

#+END_SRC

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma_marginaleffects.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma_marginaleffects.rds
:
: sent 6482 bytes  received 1125319 bytes  452720.40 bytes/sec
: total size is 1139994  speedup is 1.01

#+begin_src R
me <-readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma_marginaleffects.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma_full.png :width 1000 :height 2000

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = "red") +
          facet_grid(Species~City*gddprecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma_full.png]]

**** Plot Urban Tree Allometric equations on top of data

#+begin_src R
  predict.allo <- function(x, EqName, a, b, c, d, e) {
      if(EqName == "loglogw1") {
          y = exp(a + b*log(log(x + 1) + c/2))
      }
      else if(EqName == "loglogw2") {
          y = exp(a + b*log(log(x + 1))+(sqrt(x) * (c/2)))
      }
      else if (EqName == "loglogw3") {
          y = exp(a + b*log(log(x + 1)) + x * c/2)
      }
      else if (EqName == "loglogw4") {
          y = exp(a + b*log(log(x + 1)) + x^2 * c/2)
      }
      else if (EqName == "expow1") {
          y = exp(a+ b * (x) + (c/2))
      }
      else if (EqName == "lin") {
          y = a + b * x
      }
      else if (EqName == "quad") {
          y = a + b * x + c* x^2
      }
      else if (EqName == "cub") {
          y = a+b * x+c *x^2 + d * x^3
      }
      else if (EqName == "quart") {
          y = a+b * x+c *x^2 + d * x^3 + e * x^4
      }
      return(y)
  }

#+end_src

#+RESULTS:


#+begin_src R
    d <- readRDS("../data/age_dbh_testing_noWARO.rds")

    eqn <- read.csv("../data/RDS-2016-0005/Data/TS6_Growth_coefficients_20180326.csv", stringsAsFactors = F) %>%
        mutate(a = as.numeric(a)) %>%
        rename(Species = SpCode)

    city_region <- read.csv("../data/city_climate.csv") %>%
      select(Region, City)

  city_clim <- read.csv("../data/cities_gdd_precip.csv") %>%
    mutate(gdd = gdd / 1000, precip = precip /1000)

  eqn <- left_join(eqn, city_region)
  eqn <- left_join(eqn, city_clim)

    eqn <- eqn %>%
        filter(Predicts.component %in% c("dbh"), Independent.variable == "age")

    age_min_max = d %>%
        group_by(Region, Species) %>%
        summarize(minAGE = min(AGE, na.rm = T),
                  maxAGE = max(AGE, na.rm = T))

    eqn <- left_join(eqn, age_min_max)

    DBH_min_max = d %>%
        group_by(Region, Species) %>%
        summarize(minDBH = min(DBH, na.rm = T),
                  maxDBH = max(DBH, na.rm = T))

    eqn <- left_join(eqn, DBH_min_max)


                                            # fill in the NAs due to equations existing for species in regions where they weren't sampled.
    eqn$minAGE[is.na(eqn$minAGE)] <- 0
    eqn$maxAGE[is.na(eqn$maxAGE)] <- 100

    newdata <- lapply(1:nrow(eqn), function(i) {
        x <- seq(eqn$minAGE[i], eqn$maxAGE[i],  (eqn$maxAGE[i] - eqn$minAGE[i]) / 20)
        cbind(x, eqn[i,])
    })

    newdata <- bind_rows(newdata)

    predictions <- newdata %>% rowwise %>% mutate(predicted_dbh = predict.allo(x = x, EqName = EqName, a = a, b = b, c = c, d = d, e = e))



                                            #filter out predictions that are outside range of data and label those in range of appsmin and appsmax
    predictions_apprange <- predictions %>%
        filter(predicted_dbh > Apps.min & predicted_dbh < Apps.max)

    predictions_datarange <- predictions %>%
        filter(predicted_dbh > minDBH & predicted_dbh < maxDBH)

    predictions_apprange <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh)
#+end_src

#+RESULTS:
: Joining, by = "Region"
: Warning message:
: Column `Region` joining character vector and factor, coercing into character vector
: Joining, by = "City"
: Joining, by = c("Region", "Species")
: Joining, by = c("Region", "Species")
: There were 50 or more warnings (use warnings() to see the first 50)



#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh__byRegion.png

  ggplot(predictions_apprange, aes(x = x, y = predicted_dbh, group = Species)) +
      geom_line() +
      facet_wrap(~City, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh__byRegion.png]]

#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpecies.png :height 1200 :width 1200

  ggplot(predictions_apprange, aes(x = x, y = predicted_dbh, group = City)) +
      geom_line() +
      facet_wrap(~Species, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies.png]]

#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpeciesFull_wData.png :height 1200 :width 1200


dsp <- unique(d$Species)

predictions_apprange_subspecies <- filter(predictions_apprange, Species %in% dsp)

  ggplot() +
      geom_point(data = d, aes( x = AGE, y = DBH, color = Region), alpha = .7, size = 1) +
      facet_wrap(~Species, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange_subspecies, aes(x = AGE, y = predicted_dbh, color = Region), size = 1.5)

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpeciesFull_wData.png]]


#+begin_src R
    me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                            City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

    dd <- mod$data %>%
        mutate(gddprecip = gdd  * precip,
               City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

predictions_apprange <- predictions_apprange %>%
        mutate(gddprecip = gdd  * precip,
               City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dsp <- unique(dd$Species)


  blue <- "blue"


   me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

me2 <- left_join(me2, unique(select(d, Region, City)))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))


  dd <- left_join(dd, unique(select(d, Region, City)))


predictions_apprange_sub <- predictions_apprange %>% filter(Species %in% unique(me2$Species))

#+end_src

#+RESULTS:
: There were 50 or more warnings (use warnings() to see the first 50)
: Joining, by = "City"
: Warning message:
: Column `City` joining factor and character vector, coercing into character vector
: Joining, by = "City"
: Warning message:
: Column `City` joining factor and character vector, coercing into character vector

#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpeciesCity_wData_more_solarized.png :height 2000 :width 1200

      red <- "#dc322f"
      yellow <- "#b58900"
      blue <- "#268bd2"
      green <- "#859900"
      cyan <- "#2aa198"
      orange <- "#cb4b16"
     violet <- "#6c71c4"
     magenta <- "#d33682"

p <-       ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1, color = blue) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .1, fill = blue) +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = red) +
          facet_grid(Species~City*gddprecip) +
          geom_line(data = predictions_apprange_sub, aes(x = AGE, y = predicted_dbh), size = 1.5, color = green)

p +
            theme_solarized_2(light = F, base_size = 18) +
      theme(axis.text = element_text(size = 18, color = "#839496"))
#            rect = element_rect(fill = "transparent"),
 #           panel.background = element_rect(fill = "transparent"))


#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpeciesCity_wData_more_solarized.png]]

#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpeciesCity_wData_wUTDpredictions.png :height 20000 :width 12000 :bg transparent :res 600

p +   theme(axis.text = element_text(size = 18, color = "#839496"))

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpeciesCity_wData_wUTDpredictions.png]]


#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpeciesCity_wData_wUTDpredictions_focus_ulam.png :height 200 :width 600
      library(ggthemes)
          red <- "#dc322f"
          yellow <- "#b58900"
          blue <- "#268bd2"
          green <- "#859900"
          cyan <- "#2aa198"
          orange <- "#cb4b16"
         violet <- "#6c71c4"
         magenta <- "#d33682"

    sp.subset <- c("ULAM")
    r.subset <- c("NoCalC","PacfNW", "MidWst", "NMtnPr")

    me2.sub <- filter(me2, Species %in% sp.subset, Region %in% r.subset)
    dd.sub <- filter(dd, Species %in% sp.subset, Region %in% r.subset)
    predictions_apprange_sub.sub <- filter(predictions_apprange_sub, Species %in% sp.subset, Region %in% r.subset)

       ggplot(me2.sub) +
           geom_line(aes(x = AGE, y = estimate__), size = 1, color = blue) +
           geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .1, fill = blue) +
           geom_point(data = dd.sub, aes(x = AGE, y = DBH), alpha = .5, size = 1, color = red) +
              facet_grid(Species~City) +
           geom_line(data = predictions_apprange_sub.sub, aes(x = AGE, y = predicted_dbh), size = 1, color = green) +
         scale_x_continuous(breaks = c(0,75)) +
         scale_y_continuous("DBH") +
         theme_minimal() +
       theme(text = element_text(size = 18),
             panel.border = element_rect(color = "black", fill = NA))

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpeciesCity_wData_wUTDpredictions_focus_ulam.png]]


#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpeciesCity_wData_wUTDpredictions_focus_acpl.png :height 1000 :width 1300 :res 300
    sp.subset <- c("ACPL")
    r.subset <- c("MidWst", "NMtnPr", "NoEast", "PacfNW","TpIntW")

    me2.sub <- filter(me2, Species %in% sp.subset, Region %in% r.subset)
    dd.sub <- filter(dd, Species %in% sp.subset, Region %in% r.subset)
    predictions_apprange_sub.sub <- filter(predictions_apprange_sub, Species %in% sp.subset, Region %in% r.subset)

    me3 <- me2.sub %>%
        select(City, estimate__, AGE) %>%
        rename(DBH = estimate__) %>%
        mutate(Acer_platanoides = "prediction (95% PI)")

    dd.sub <- dd.sub %>% select(City, DBH, AGE) %>%
        mutate(Acer_platanoides = "observations")


    utd.pred <- predictions_apprange_sub.sub %>%
        select(City, DBH, AGE) %>%
        mutate(Acer_platanoides = "UTD prediction")



    d.com <- rbind(utd.pred, me3)

  cols <- c(red, blue, green)

    ggplot(d.com, aes(x = AGE, y = DBH)) +
        geom_point(data = dd.sub, aes(x = AGE, y = DBH, color = Acer_platanoides), alpha = .4, size = .75) +
        geom_line(aes(color = Acer_platanoides, group = interaction(Acer_platanoides,City))) +
        geom_ribbon(data = me2.sub, aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__,group = City), inherit.aes = F, alpha = .15) +
        facet_wrap(~City) +
        scale_x_continuous(breaks = c(0,75)) +
        scale_color_manual("Acer platanoides", values = cols) +
        theme_minimal() +
        theme(text = element_text(size = 14),
              panel.border = element_rect(color = "black", fill = NA),
              legend.position = c(.84, .2),
              legend.text = element_text(size = 8),
              legend.title = element_text(size = 12))

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpeciesCity_wData_wUTDpredictions_focus_acpl.png]]

What city is the lower midwest?  Indianapolis.  There is no data for that.

#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpecies_wData_ACPL.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(Species == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(Species == "ACPL")

  ggplot(filter(d, Species == "ACPL"), aes( x = AGE, y = DBH, color = Region)) +
      geom_point(alpha = .7, size = 1) +
      facet_wrap(~Region) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region), size = 1, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region), size = 1)



#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData_ACPL.png]]

Funny thing about the Apps range is that for functions that eventually
decrease, they don't properly stop inference.  Look at the pink line
above.  The application range should be given for both the predictor
and the response variable.






#+begin_src R :exports results :results graphics :file ../figs/list_pred.png
  ggplot(me2) + geom_line(aes(x = AGE, y = estimate__, color = gddprecip, group = City)) +
    scale_color_distiller(palette = "Spectral")
#+end_src

#+RESULTS:
[[file:../figs/list_pred.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png
   pp_check(mod) + xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.png]]

**** test some predictions
#+begin_src R
    wg  <-  read.csv("../data/precip_qt_ll.csv")
    wp <-     read.csv("../data/gdd_qt_ll.csv")

    w <- left_join(wg, wp, by = c("station", "lat", "long"))

    stl <- c(lat = 38.6270, long = -90.1994)

    w2 <- filter(w, lat > stl["lat"] - .1,
                 lat < stl["lat"] + .1,
                 long > stl["long"] - .1,
                 long < stl["long"] + .1)


  #  ggplot(w, aes(x = long, y = lat)) +
   #     geom_point() +
    #    geom_point(data = w2, color = "pink")

    Species <- c("ACPL","UNKNOWN", "UNKNOWN")
    Genus <- c("Acer", "Acer", "UNKNOWN")
    gs <- data.frame(Genus, Species)
    City <- c("Sacramento, CA", "St. Louis, MO")
    gdd <- c(5.41, 4822/1000)
    precip <- c(2.03, 4273/1000)

    nd.clim <- data.frame(City, gdd, precip)

    nd <- expand.grid(City = City, AGE = 1:120)

    nd <- left_join(nd, nd.clim)

    expand.grid.df <- function(...) Reduce(function(...) merge(..., by=NULL), list(...))

    nd <- expand.grid.df(nd, gs)

    pred.nd <- predict(mod, nd, allow_new_levels = T, robust = T, probs = c(0.025, 0.25, .75, .975))
#+end_src

#+begin_src R
pd <- cbind(nd, pred.nd)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/predicting_unobserved_groups.png :width 1000 :height 800 :res 300
    ggplot(pd, aes(x = AGE, y = Estimate)) +
      geom_line() +
      geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5), alpha = .3) +
      geom_ribbon(aes(ymin = Q25, ymax = Q75), alpha = .3) +
      facet_grid(City~Genus*Species) +
        scale_x_continuous(breaks = c(0,75)) +
      theme_minimal() +
       theme(text = element_text(size = 10),
             panel.border = element_rect(color = "black", fill = NA))

#+end_src

#+RESULTS:
[[file:../figs/predicting_unobserved_groups.png]]

*** COMMENT genus: many;  species: many; cities: many (not \beta_1); climate: b3linint; hetero: no; family: Gamma
**** model R code
#+begin_src R :tangle genus_species_citiesNotB1_b3climate.R
  library(dplyr)
  library(brms)


  genus <- "many"
  species <- "many"
  cities <- "many_notB1"
  climate <- "b3linint"
  hetero <- "no"
  family <- "Gamma"

  data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
  b0_form <- formula(b0 ~ (1 | City) + (1 | Genus/Species))
  b1_form <- formula(b1 ~ (1 | Genus/Species))
  b2_form <- formula(b2 ~ (1 | City) + (1 | Genus/Species))
  b3_form <- formula(b3 ~ precip * gdd +  (1 | City) + (1 | Genus / Species))


  form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)


  nlprior <- c(prior(gamma(9, 3), nlpar = "b0",lb = 0),
               prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
               prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
               prior(gamma(16, 26), nlpar = "b3", lb = 0),
               prior(normal(0.01, 0.015), nlpar = "b3", coef = "gdd"),
               prior(normal(0.01, 0.01), nlpar = "b3", coef = "precip"),
               prior(normal(0.005, 0.005), nlpar = "b3", coef = "precip:gdd"),
               prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .3), class = "sd", nlpar = "b0", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "City"),
               prior(normal(0, .4), class = "sd", nlpar = "b0", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b0", group = "Genus:Species"),
               prior(normal(.1, .4), class = "sd", nlpar = "b1", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b1", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b2", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b3", group = "Genus:Species"))


  d <- readRDS("../data/age_dbh_testing_noWARO.rds")


  mod <- brm(form,
             data = d,
             prior = nlprior,
             family = Gamma("identity"),
             chains = 12, cores = 12, init_r = .3, iter = 6000, control = list(adapt_delta = .9))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_species_citiesNotB1_b3climate.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_species_citiesNotB1_b3climate.R
:
: sent 150 bytes  received 66 bytes  61.71 bytes/sec
: total size is 2450  speedup is 11.34

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_species_citiesNotB1_b3climate.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_species_citiesNotB1_b3climate.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

**** assess model
#+begin_src R
mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma.rds")
mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ precip * gdd + (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5381)
Samples: 12 chains, each with iter = 6000; warmup = 3000; thin = 1;
         total post-warmup samples = 36000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.87      0.13     0.64     1.14      27351 1.00
sd(b2_Intercept)     0.29      0.04     0.22     0.38      23630 1.00
sd(b3_Intercept)     0.12      0.03     0.08     0.18      20861 1.00

~Genus (Number of levels: 17)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.30      0.13     0.03     0.56       8428 1.00
sd(b1_Intercept)     0.54      0.13     0.32     0.83      18906 1.00
sd(b2_Intercept)     0.24      0.05     0.16     0.34      19282 1.00
sd(b3_Intercept)     0.10      0.03     0.04     0.16      11249 1.00

~Genus:Species (Number of levels: 24)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.14      0.08     0.01     0.30      10027 1.00
sd(b1_Intercept)     0.06      0.04     0.00     0.16      18855 1.00
sd(b2_Intercept)     0.07      0.03     0.02     0.13      12587 1.00
sd(b3_Intercept)     0.07      0.02     0.04     0.11      12748 1.00

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.70      0.25     2.21     3.21      10939 1.00
b1_Intercept      1.49      0.15     1.23     1.80      14798 1.00
b2_Intercept      1.00      0.08     0.85     1.17      16319 1.00
b3_Intercept      0.88      0.07     0.74     1.01      17048 1.00
b3_precip         0.02      0.01     0.00     0.03      43967 1.00
b3_gdd            0.01      0.01     0.00     0.03      39234 1.00
b3_precip:gdd     0.01      0.00     0.00     0.01      24587 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    14.27      0.27    13.74    14.81      74886 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 10 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma.png :height 1300
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_mainparameters.png :height 250
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[1:4],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_mainparameters.png]]


#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_climate_effects.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[5:7],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_climate_effects.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_sd_beta0.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[8:10],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_sd_beta0.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_sd_beta1.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[11:12],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_sd_beta1.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_sd_beta2.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[13:15],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_sd_beta2.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_sd_beta3.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[16:18],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_sd_beta3.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_shape.png :height 100
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[19],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_shape.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:gdd")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png]]



#+begin_src R
precip.gdd <-   marginal_effects(mod, effects = "precip:gdd", surface = T)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png
precip.gdd
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_wCities.png
  plot(precip.gdd)[[1]] +
      geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = precip, y = gdd)) +
      geom_label(data = unique(select(mod$data, City, gdd, precip)), aes(x = precip, y = gdd, label = City), nudge_y = .15) +
    coord_flip()
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_wCities.png]]


#+begin_src R
  to.include <- c("LIST", "PLAC", "FRPE")

  cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
    cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
    cond <- left_join(cond, unique(select(mod$data, City, precip, gdd)))
    cond <- filter(cond, Species %in%  to.include)

     me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict")
#+end_src

#+RESULTS:
: Joining, by = "Species"
: Warning message:
: Column `Species` joining factor and character vector, coercing into character vector
: Joining, by = "City"
: Warning message:
: Column `City` joining factor and character vector, coercing into character vector
: There were 50 or more warnings (use warnings() to see the first 50)

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png :width 1000 :height 300

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE)) %>%
      filter(Species %in% to.include)

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = "red") +
          facet_grid(Species~City*gddprecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png]]



#+begin_src R :tangle marginal_effects_fullconditions.R
library(brms)
library(dplyr)
mod <- readRDS("../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma.rds")
  cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
    cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
    cond <- left_join(cond, unique(select(mod$data, City, precip, gdd)))

     me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict")
saveRDS(me, "../models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_marginaleffects.rds")
#+end_src

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz marginal_effects_fullconditions.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: marginal_effects_fullconditions.R
:
: sent 500 bytes  received 60 bytes  160.00 bytes/sec
: total size is 1411  speedup is 2.52

#+BEGIN_SRC sh

  ssh krusty
  cd allo/code
  nohup R CMD BATCH marginal_effects_fullconditions.R &
  cat marginal_effects_fullconditions.Rout
  exit

#+END_SRC

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_marginaleffects.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_marginaleffects.rds
:
: sent 38 bytes  received 1125699 bytes  321639.14 bytes/sec
: total size is 1141606  speedup is 1.01
: You have new mail in /var/mail/erker

#+begin_src R
me <-readRDS("~/git/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_marginaleffects.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_full.png :width 1000 :height 2000

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = "red") +
          facet_grid(Species~City*gddprecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_full.png]]

**** Plot Urban Tree Allometric equations on top of data

#+begin_src R
  predict.allo <- function(x, EqName, a, b, c, d, e) {
      if(EqName == "loglogw1") {
          y = exp(a + b*log(log(x + 1) + c/2))
      }
      else if(EqName == "loglogw2") {
          y = exp(a + b*log(log(x + 1))+(sqrt(x) * (c/2)))
      }
      else if (EqName == "loglogw3") {
          y = exp(a + b*log(log(x + 1)) + x * c/2)
      }
      else if (EqName == "loglogw4") {
          y = exp(a + b*log(log(x + 1)) + x^2 * c/2)
      }
      else if (EqName == "expow1") {
          y = exp(a+ b * (x) + (c/2))
      }
      else if (EqName == "lin") {
          y = a + b * x
      }
      else if (EqName == "quad") {
          y = a + b * x + c* x^2
      }
      else if (EqName == "cub") {
          y = a+b * x+c *x^2 + d * x^3
      }
      else if (EqName == "quart") {
          y = a+b * x+c *x^2 + d * x^3 + e * x^4
      }
      return(y)
  }

#+end_src

#+RESULTS:


#+begin_src R
    d <- readRDS("../data/age_dbh_testing_noWARO.rds")

    eqn <- read.csv("../data/RDS-2016-0005/Data/TS6_Growth_coefficients_20180326.csv", stringsAsFactors = F) %>%
        mutate(a = as.numeric(a)) %>%
        rename(Species = SpCode)

    city_region <- read.csv("../data/city_climate.csv") %>%
      select(Region, City)

  city_clim <- read.csv("../data/cities_gdd_precip.csv") %>%
    mutate(gdd = gdd / 1000, precip = precip /1000)

  eqn <- left_join(eqn, city_region)
  eqn <- left_join(eqn, city_clim)

    eqn <- eqn %>%
        filter(Predicts.component %in% c("dbh"), Independent.variable == "age")

    age_min_max = d %>%
        group_by(Region, Species) %>%
        summarize(minAGE = min(AGE, na.rm = T),
                  maxAGE = max(AGE, na.rm = T))

    eqn <- left_join(eqn, age_min_max)

    DBH_min_max = d %>%
        group_by(Region, Species) %>%
        summarize(minDBH = min(DBH, na.rm = T),
                  maxDBH = max(DBH, na.rm = T))

    eqn <- left_join(eqn, DBH_min_max)


                                            # fill in the NAs due to equations existing for species in regions where they weren't sampled.
    eqn$minAGE[is.na(eqn$minAGE)] <- 0
    eqn$maxAGE[is.na(eqn$maxAGE)] <- 100

    newdata <- lapply(1:nrow(eqn), function(i) {
        x <- seq(eqn$minAGE[i], eqn$maxAGE[i],  (eqn$maxAGE[i] - eqn$minAGE[i]) / 20)
        cbind(x, eqn[i,])
    })

    newdata <- bind_rows(newdata)

    predictions <- newdata %>% rowwise %>% mutate(predicted_dbh = predict.allo(x = x, EqName = EqName, a = a, b = b, c = c, d = d, e = e))



                                            #filter out predictions that are outside range of data and label those in range of appsmin and appsmax
    predictions_apprange <- predictions %>%
        filter(predicted_dbh > Apps.min & predicted_dbh < Apps.max)

    predictions_datarange <- predictions %>%
        filter(predicted_dbh > minDBH & predicted_dbh < maxDBH)

    predictions_apprange <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh)
#+end_src

#+RESULTS:
: Joining, by = "Region"
: Warning message:
: Column `Region` joining character vector and factor, coercing into character vector
: Joining, by = "City"
: Joining, by = c("Region", "Species")
: Joining, by = c("Region", "Species")
: There were 50 or more warnings (use warnings() to see the first 50)



#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh__byRegion.png

  ggplot(predictions_apprange, aes(x = x, y = predicted_dbh, group = Species)) +
      geom_line() +
      facet_wrap(~City, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh__byRegion.png]]

#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpecies.png :height 1200 :width 1200

  ggplot(predictions_apprange, aes(x = x, y = predicted_dbh, group = City)) +
      geom_line() +
      facet_wrap(~Species, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies.png]]

#+begin_src R :exports results :results graphics :file ../figs/predictions_dbh_bySpeciesFull_wData.png :height 1200 :width 1200

dsp <- unique(d$Species)

predictions_apprange_subspecies <- filter(predictions_apprange, Species %in% dsp)

  ggplot() +
      geom_point(data = d, aes( x = AGE, y = DBH, color = Region), alpha = .7, size = 1) +
      facet_wrap(~Species, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange_subspecies, aes(x = AGE, y = predicted_dbh, color = Region), size = 1.5)

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpeciesFull_wData.png]]


#+begin_src R
    me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                            City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

    dd <- mod$data %>%
        mutate(gddprecip = gdd  * precip,
               City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

predictions_apprange <- predictions_apprange %>%
        mutate(gddprecip = gdd  * precip,
               City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dsp <- unique(dd$Species)


   me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

me2 <- left_join(me2, unique(select(d, Region, City)))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))


  dd <- left_join(dd, unique(select(d, Region, City)))


predictions_apprange_sub <- predictions_apprange %>% filter(Species %in% unique(me2$Species))

#+end_src

#+RESULTS:
: There were 50 or more warnings (use warnings() to see the first 50)
: Joining, by = "City"
: Warning message:
: Column `City` joining factor and character vector, coercing into character vector
: Joining, by = "City"
: Warning message:
: Column `City` joining factor and character vector, coercing into character vector

#+begin_src R :exports results :results graphics :file ../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_more_solarized.png :height 2000 :width 1200

      red <- "#dc322f"
      yellow <- "#b58900"
      blue <- "#268bd2"
      green <- "#859900"
      cyan <- "#2aa198"
      orange <- "#cb4b16"
     violet <- "#6c71c4"
     magenta <- "#d33682"

p <-       ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1, color = blue) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .1, fill = blue) +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = red) +
          facet_grid(Species~City*gddprecip) +
          geom_line(data = predictions_apprange_sub, aes(x = AGE, y = predicted_dbh), size = 1.5, color = green)

p +
            theme_solarized_2(light = F, base_size = 18) +
      theme(axis.text = element_text(size = 18, color = "#839496"))
#            rect = element_rect(fill = "transparent"),
 #           panel.background = element_rect(fill = "transparent"))


#+end_src

#+RESULTS:
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_more_solarized.png]]

#+begin_src R :exports results :results graphics :file ../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions.png :height 20000 :width 12000 :bg transparent :res 600

p +   theme(axis.text = element_text(size = 18, color = "#839496"))

#+end_src

#+RESULTS:
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions.png]]


#+begin_src R :exports results :results graphics :file ../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_ulam.png :height 200 :width 600
      library(ggthemes)
          red <- "#dc322f"
          yellow <- "#b58900"
          blue <- "#268bd2"
          green <- "#859900"
          cyan <- "#2aa198"
          orange <- "#cb4b16"
         violet <- "#6c71c4"
         magenta <- "#d33682"

    sp.subset <- c("ULAM")
    r.subset <- c("NoCalC","PacfNW", "MidWst", "NMtnPr")

    me2.sub <- filter(me2, Species %in% sp.subset, Region %in% r.subset)
    dd.sub <- filter(dd, Species %in% sp.subset, Region %in% r.subset)
    predictions_apprange_sub.sub <- filter(predictions_apprange_sub, Species %in% sp.subset, Region %in% r.subset)

       ggplot(me2.sub) +
           geom_line(aes(x = AGE, y = estimate__), size = 1, color = blue) +
           geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .1, fill = blue) +
           geom_point(data = dd.sub, aes(x = AGE, y = DBH), alpha = .5, size = 1, color = red) +
              facet_grid(Species~City) +
           geom_line(data = predictions_apprange_sub.sub, aes(x = AGE, y = predicted_dbh), size = 1, color = green) +
         scale_x_continuous(breaks = c(0,75)) +
         scale_y_continuous("DBH") +
         theme_minimal() +
       theme(text = element_text(size = 18),
             panel.border = element_rect(color = "black", fill = NA))

#+end_src

#+RESULTS:
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_ulam.png]]


#+begin_src R :exports results :results graphics :file ../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_acpl.png :height 1000 :width 1300 :res 300
    sp.subset <- c("ACPL")
    r.subset <- c("MidWst", "NMtnPr", "NoEast", "PacfNW","TpIntW")

    me2.sub <- filter(me2, Species %in% sp.subset, Region %in% r.subset)
    dd.sub <- filter(dd, Species %in% sp.subset, Region %in% r.subset)
    predictions_apprange_sub.sub <- filter(predictions_apprange_sub, Species %in% sp.subset, Region %in% r.subset)

    me3 <- me2.sub %>%
        select(City, estimate__, AGE) %>%
        rename(DBH = estimate__) %>%
        mutate(Acer_platanoides = "prediction (95% PI)")

    dd.sub <- dd.sub %>% select(City, DBH, AGE) %>%
        mutate(Acer_platanoides = "observations")


    utd.pred <- predictions_apprange_sub.sub %>%
        select(City, DBH, AGE) %>%
        mutate(Acer_platanoides = "UTD prediction")



    d.com <- rbind(utd.pred, me3)

  cols <- c(red, blue, green)

    ggplot(d.com, aes(x = AGE, y = DBH)) +
        geom_point(data = dd.sub, aes(x = AGE, y = DBH, color = Acer_platanoides), alpha = .4, size = .75) +
        geom_line(aes(color = Acer_platanoides, group = interaction(Acer_platanoides,City))) +
        geom_ribbon(data = me2.sub, aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__,group = City), inherit.aes = F, alpha = .15) +
        facet_wrap(~City) +
        scale_x_continuous(breaks = c(0,75)) +
        scale_color_manual("Acer platanoides", values = cols) +
        theme_minimal() +
        theme(text = element_text(size = 14),
              panel.border = element_rect(color = "black", fill = NA),
              legend.position = c(.84, .2),
              legend.text = element_text(size = 8),
              legend.title = element_text(size = 12))

#+end_src

#+RESULTS:
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_acpl.png]]

What city is the lower midwest?  Indianapolis.  There is no data for that.

#+begin_src R :exports results :results graphics :file ../figs/list_pred.png
  ggplot(filter(me2, Species == "LIST")) + geom_line(aes(x = AGE, y = estimate__, color = gddprecip, group = City)) +
    scale_color_distiller(palette = "Spectral")
#+end_src

#+RESULTS:
[[file:../figs/list_pred.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png
   pp_check(mod) + xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png]]

**** test some predictions
#+begin_src R
    wg  <-  read.csv("../data/precip_qt_ll.csv")
    wp <-     read.csv("../data/gdd_qt_ll.csv")

    w <- left_join(wg, wp, by = c("station", "lat", "long"))

    stl <- c(lat = 38.6270, long = -90.1994)

    w2 <- filter(w, lat > stl["lat"] - .1,
                 lat < stl["lat"] + .1,
                 long > stl["long"] - .1,
                 long < stl["long"] + .1)


  #  ggplot(w, aes(x = long, y = lat)) +
   #     geom_point() +
    #    geom_point(data = w2, color = "pink")

    Species <- c("ACPL","UNKNOWN", "UNKNOWN")
    Genus <- c("Acer", "Acer", "UNKNOWN")
    gs <- data.frame(Genus, Species)
    City <- c("Sacramento, CA", "St. Louis, MO")
    gdd <- c(5.41, 4822/1000)
    precip <- c(2.03, 4273/1000)

    nd.clim <- data.frame(City, gdd, precip)

    nd <- expand.grid(City = City, AGE = 1:120)

    nd <- left_join(nd, nd.clim)

    expand.grid.df <- function(...) Reduce(function(...) merge(..., by=NULL), list(...))

    nd <- expand.grid.df(nd, gs)

    pred.nd <- predict(mod, nd, allow_new_levels = T, robust = T, probs = c(0.025, 0.25, .75, .975))
#+end_src

#+begin_src R
pd <- cbind(nd, pred.nd)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/predicting_cities_notB1_unobserved_groups.png :width 1000 :height 800 :res 300
    ggplot(pd, aes(x = AGE, y = Estimate)) +
      geom_line() +
      geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5), alpha = .3) +
      geom_ribbon(aes(ymin = Q25, ymax = Q75), alpha = .3) +
      facet_grid(City~Genus*Species) +
        scale_x_continuous(breaks = c(0,75)) +
      theme_minimal() +
       theme(text = element_text(size = 10),
             panel.border = element_rect(color = "black", fill = NA))

#+end_src

#+RESULTS:
[[file:../figs/predicting_cities_notB1_unobserved_groups.png]]

*** COMMENT genus: many;  species: many; cities: many (not \beta_1); climate: b3linint; hetero: no; family: Gamma  MODEL parameter coreelations | ID | maybe this help with predictions?
**** model R code
#+begin_src R :tangle genus_species_citiesNotB1_b3climate_correlated.R
  library(dplyr)
  library(brms)


  genus <- "many"
  species <- "many"
  cities <- "many_notB1"
  climate <- "b3linint"
  hetero <- "no"
  family <- "Gamma"

  data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
  b0_form <- formula(b0 ~ (1 |cid| City) + (1|gid|Genus) + (1|sid|Genus:Species))
  b1_form <- formula(b1 ~ (1 | gid | Genus) + (1|sid|Genus:Species))
  b2_form <- formula(b2 ~ (1 |cid| City) + (1|gid|Genus) + (1|sid|Genus:Species))
  b3_form <- formula(b3 ~ precip * gdd +  (1 | cid | City) + (1 | gid | Genus) + (1 | sid | Genus:Species))


  form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)


  nlprior <- c(prior(gamma(9, 3), nlpar = "b0",lb = 0),
               prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
               prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
               prior(gamma(16, 26), nlpar = "b3", lb = 0),
               prior(normal(0.01, 0.015), nlpar = "b3", coef = "gdd"),
               prior(normal(0.01, 0.01), nlpar = "b3", coef = "precip"),
               prior(normal(0.005, 0.005), nlpar = "b3", coef = "precip:gdd"),
               prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .3), class = "sd", nlpar = "b0", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "City"),
               prior(normal(0, .4), class = "sd", nlpar = "b0", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b0", group = "Genus:Species"),
               prior(normal(.1, .4), class = "sd", nlpar = "b1", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b1", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b2", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b3", group = "Genus:Species"))


  d <- readRDS("../data/age_dbh_testing_noWARO.rds")


  mod <- brm(form,
             data = d,
             prior = nlprior,
             family = Gamma("identity"),
             chains = 12, cores = 12, init_r = .3, iter = 2000, control = list(adapt_delta = .9))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, "_correlated.rds"))
#+end_src

**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_species_citiesNotB1_b3climate_correlated.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_species_citiesNotB1_b3climate_correlated.R
:
: sent 918 bytes  received 42 bytes  274.29 bytes/sec
: total size is 2557  speedup is 2.66

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_species_citiesNotB1_b3climate_correlated.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_species_citiesNotB1_b3climate_correlated.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated.rds
:
: sent 38 bytes  received 58293114 bytes  4020217.38 bytes/sec
: total size is 58418576  speedup is 1.00
: You have new mail in /var/mail/erker

**** assess model
#+begin_src R
mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated.rds")
mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated
#+end_src

#+RESULTS:


#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | cid | City) + (1 | gid | Genus) + (1 | sid | Genus:Species)
         b1 ~ (1 | gid | Genus) + (1 | sid | Genus:Species)
         b2 ~ (1 | cid | City) + (1 | gid | Genus) + (1 | sid | Genus:Species)
         b3 ~ precip * gdd + (1 | cid | City) + (1 | gid | Genus) + (1 | sid | Genus:Species)
   Data: d (Number of observations: 5381)
Samples: 12 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 12000

Group-Level Effects:
~City (Number of levels: 15)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.87      0.12     0.65     1.14       8697
sd(b2_Intercept)                   0.28      0.04     0.21     0.37       9016
sd(b3_Intercept)                   0.10      0.02     0.07     0.13       7374
cor(b0_Intercept,b2_Intercept)    -0.46      0.16    -0.72    -0.12       7451
cor(b0_Intercept,b3_Intercept)     0.30      0.19    -0.11     0.63       6635
cor(b2_Intercept,b3_Intercept)    -0.87      0.09    -0.97    -0.65       7688
                               Rhat
sd(b0_Intercept)               1.00
sd(b2_Intercept)               1.00
sd(b3_Intercept)               1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b0_Intercept,b3_Intercept) 1.00
cor(b2_Intercept,b3_Intercept) 1.00

~Genus (Number of levels: 17)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.25      0.14     0.02     0.55       2018
sd(b1_Intercept)                   0.46      0.12     0.24     0.72        194
sd(b2_Intercept)                   0.23      0.05     0.15     0.33       3425
sd(b3_Intercept)                   0.10      0.03     0.05     0.16       6645
cor(b0_Intercept,b1_Intercept)     0.26      0.35    -0.48     0.87       1164
cor(b0_Intercept,b2_Intercept)    -0.15      0.33    -0.75     0.56       1253
cor(b1_Intercept,b2_Intercept)    -0.50      0.18    -0.79    -0.09       6951
cor(b0_Intercept,b3_Intercept)    -0.11      0.36    -0.78     0.61       2320
cor(b1_Intercept,b3_Intercept)    -0.42      0.23    -0.79     0.09       9779
cor(b2_Intercept,b3_Intercept)    -0.38      0.23    -0.76     0.13      10415
                               Rhat
sd(b0_Intercept)               1.01
sd(b1_Intercept)               1.04
sd(b2_Intercept)               1.01
sd(b3_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.02
cor(b0_Intercept,b2_Intercept) 1.01
cor(b1_Intercept,b2_Intercept) 1.01
cor(b0_Intercept,b3_Intercept) 1.00
cor(b1_Intercept,b3_Intercept) 1.00
cor(b2_Intercept,b3_Intercept) 1.00

~Genus:Species (Number of levels: 24)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.17      0.08     0.01     0.31       2893
sd(b1_Intercept)                   0.06      0.05     0.00     0.17       2875
sd(b2_Intercept)                   0.07      0.03     0.03     0.13        130
sd(b3_Intercept)                   0.06      0.02     0.03     0.10       3008
cor(b0_Intercept,b1_Intercept)     0.09      0.42    -0.74     0.82      13506
cor(b0_Intercept,b2_Intercept)    -0.36      0.37    -0.91     0.51       4724
cor(b1_Intercept,b2_Intercept)    -0.22      0.43    -0.89     0.69       3787
cor(b0_Intercept,b3_Intercept)    -0.04      0.36    -0.72     0.66       4735
cor(b1_Intercept,b3_Intercept)     0.04      0.42    -0.74     0.81       2488
cor(b2_Intercept,b3_Intercept)    -0.22      0.35    -0.78     0.54        434
                               Rhat
sd(b0_Intercept)               1.01
sd(b1_Intercept)               1.01
sd(b2_Intercept)               1.05
sd(b3_Intercept)               1.01
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.01
cor(b0_Intercept,b3_Intercept) 1.00
cor(b1_Intercept,b3_Intercept) 1.01
cor(b2_Intercept,b3_Intercept) 1.02

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.63      0.26     2.14     3.14        600 1.02
b1_Intercept      1.43      0.14     1.16     1.72        158 1.04
b2_Intercept      1.00      0.08     0.85     1.17       9015 1.00
b3_Intercept      0.92      0.05     0.82     1.01       5770 1.00
b3_precip         0.02      0.01     0.01     0.04      11580 1.00
b3_gdd            0.01      0.00     0.00     0.02      11714 1.00
b3_precip:gdd     0.01      0.00     0.00     0.01       8910 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    14.26      0.28    13.73    14.80      25321 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated.png :height 2000
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated.png]]

**** test some predictions
#+begin_src R
    wg  <-  read.csv("../data/precip_qt_ll.csv")
    wp <-     read.csv("../data/gdd_qt_ll.csv")

    w <- left_join(wg, wp, by = c("station", "lat", "long"))

    stl <- c(lat = 38.6270, long = -90.1994)

    w2 <- filter(w, lat > stl["lat"] - .1,
                 lat < stl["lat"] + .1,
                 long > stl["long"] - .1,
                 long < stl["long"] + .1)


  #  ggplot(w, aes(x = long, y = lat)) +
   #     geom_point() +
    #    geom_point(data = w2, color = "pink")

    Species <- c("ACPL","UNKNOWN", "UNKNOWN")
    Genus <- c("Acer", "Acer", "UNKNOWN")
    gs <- data.frame(Genus, Species)
    City <- c("Sacramento, CA", "St. Louis, MO")
    gdd <- c(5.41, 4822/1000)
    precip <- c(2.03, 4273/1000)

    nd.clim <- data.frame(City, gdd, precip)

    nd <- expand.grid(City = City, AGE = 1:120)

    nd <- left_join(nd, nd.clim)

    expand.grid.df <- function(...) Reduce(function(...) merge(..., by=NULL), list(...))

    nd <- expand.grid.df(nd, gs)

    pred.nd <- predict(mod, nd, allow_new_levels = T, robust = T, probs = c(0.025, 0.25, .75, .975))
#+end_src

#+RESULTS:
: Warning message:
: Column `station` joining factors with different levels, coercing to character vector
: Warning message:
: package ‘bindrcpp’ was built under R version 3.4.4
: Joining, by = "City"
: There were 50 or more warnings (use warnings() to see the first 50)

#+begin_src R
pd <- cbind(nd, pred.nd)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/predicting_cities_notB1_correlated_unobserved_groups.png :width 1000 :height 800 :res 300
    ggplot(pd, aes(x = AGE, y = Estimate)) +
      geom_line() +
      geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5), alpha = .3) +
      geom_ribbon(aes(ymin = Q25, ymax = Q75), alpha = .3) +
      facet_grid(City~Genus*Species) +
        scale_x_continuous(breaks = c(0,75)) +
      theme_minimal() +
       theme(text = element_text(size = 10),
             panel.border = element_rect(color = "black", fill = NA))

#+end_src

#+RESULTS:
[[file:../figs/predicting_cities_notB1_correlated_unobserved_groups.png]]

**** compare to not corellated
#+begin_src R :tangle compare_cor_nocorr.R
  library(loo)
  library(brms)
  mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated <- readRDS("../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated.rds")
  mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma <- readRDS("../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma.rds")

  res <- loo(mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma, mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated, cores = 20)
  saveRDS(res, "../models/corr_nocorr_comparison.rds")
#+end_src
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz compare_cor_nocorr.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: compare_cor_nocorr.R
:
: sent 193 bytes  received 54 bytes  98.80 bytes/sec
: total size is 844  speedup is 3.42

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH compare_cor_nocorr.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_species_citiesNotB1_b3climate_correlated.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_correlated.rds
:
: sent 38 bytes  received 58293114 bytes  4020217.38 bytes/sec
: total size is 58418576  speedup is 1.00
: You have new mail in /var/mail/erker

*** COMMENT compare models
cite:vehtari_e_2017

http://mc-stan.org/loo/
http://mc-stan.org/loo/articles/

https://projecteuclid.org/download/pdfview_1/euclid.ba/1516093227

should I do somekind of model averaging?


#+begin_src R :tangle compare_models.R
  library(brms)
  library(loo)
    models <- c("../models/genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds",
                "../models/genus_no_species_no_cities_yes_climate_no_hetero_no_family_Gamma.rds",
                "../models/genus_yes_species_yes_cities_yes_climate_no_hetero_no_family_Gamma.rds",
                "../models/genus_no_species_no_cities_no_climate_b1_hetero_no_family_Gamma.rds",
                "../models/genus_no_species_no_cities_no_climate_b3_hetero_no_family_Gamma.rds",
                "../models/genus_many_species_many_cities_many_climate_b3linint_hetero_no_family_Gamma.rds",
                "../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma.rds")

  loo.list <- lapply(models, function(m) {
      model <- readRDS(m)
      loo.model <- loo(model)
      })

  comparison <- compare(x = loo.list)

  saveRDS(list(loo.list, comparison), "../models/model_comparison_loo.rds")
#+end_src
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz compare_models.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: compare_models.R
:
: sent 458 bytes  received 42 bytes  200.00 bytes/sec
: total size is 1055  speedup is 2.11
: You have new mail in /var/mail/erker

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH compare_models.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat compare_models.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/model_comparison_loo.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: model_comparison_loo.rds
:
: sent 38 bytes  received 1596463 bytes  456143.14 bytes/sec
: total size is 1595573  speedup is 1.00
: You have new mail in /var/mail/erker

**** look at results
#+begin_src R
#res <- readRDS("../models/model_comparison_loo.rds")
#res
#+end_src

#+begin_src R

#+end_src

*** genus: many;  species: many; cities: many (not \beta_1); climate: b3linint; hetero: no; family: Gamma FULL DATA no Palm
**** model R code
#+begin_src R :tangle genus_species_citiesNotB1_b3climate_fulldata_noPalm.R
  library(dplyr)
  library(brms)


  genus <- "many"
  species <- "many"
  cities <- "many_notB1"
  climate <- "b3linint"
  hetero <- "no"
  family <- "Gamma"

  data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
  b0_form <- formula(b0 ~ (1 | City) + (1 | Genus/Species))
  b1_form <- formula(b1 ~ (1 | Genus/Species))
  b2_form <- formula(b2 ~ (1 | City) + (1 | Genus/Species))
  b3_form <- formula(b3 ~ precip * gdd +  (1 | City) + (1 | Genus / Species))


  form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)


  nlprior <- c(prior(gamma(9, 3), nlpar = "b0",lb = 0),
               prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
               prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
               prior(gamma(16, 26), nlpar = "b3", lb = 0),
               prior(normal(0.01, 0.015), nlpar = "b3", coef = "gdd"),
               prior(normal(0.01, 0.01), nlpar = "b3", coef = "precip"),
               prior(normal(0.005, 0.005), nlpar = "b3", coef = "precip:gdd"),
               prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .3), class = "sd", nlpar = "b0", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "City"),
               prior(normal(0, .4), class = "sd", nlpar = "b0", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b0", group = "Genus:Species"),
               prior(normal(.1, .4), class = "sd", nlpar = "b1", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b1", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b2", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b3", group = "Genus:Species"))


  d <- readRDS("../data/age_dbh_full_noPalms.rds")

  mod <- brm(form,
             data = d,
             prior = nlprior,
             family = Gamma("identity"),
             chains = 12, cores = 12, init_r = .3, iter = 6000, control = list(adapt_delta = .9))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, "_FullData.rds"))
#+end_src

**** tangle
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_species_citiesNotB1_b3climate_fulldata_noPalm.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_species_citiesNotB1_b3climate.R
:
: sent 150 bytes  received 66 bytes  61.71 bytes/sec
: total size is 2450  speedup is 11.34

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_species_citiesNotB1_b3climate_fulldata_noPalm.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_species_citiesNotB1_b3climate_fulldata_noPalm.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.rds
:
: sent 38 bytes  received 552906005 bytes  7323258.85 bytes/sec
: total size is 552791606  speedup is 1.00

**** assess model
#+begin_src R
mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.rds")
mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData
#+end_src

#+RESULTS:


#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ precip * gdd + (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 12156)
Samples: 12 chains, each with iter = 6000; warmup = 3000; thin = 1;
         total post-warmup samples = 36000

Group-Level Effects:
~City (Number of levels: 16)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.86      0.12     0.65     1.11      18222 1.00
sd(b2_Intercept)     0.26      0.04     0.20     0.35      16785 1.00
sd(b3_Intercept)     0.11      0.02     0.08     0.17      14946 1.00

~Genus (Number of levels: 76)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.27      0.09     0.09     0.44       6483 1.00
sd(b1_Intercept)     0.57      0.08     0.43     0.75       8746 1.00
sd(b2_Intercept)     0.22      0.05     0.12     0.32       2613 1.01
sd(b3_Intercept)     0.12      0.02     0.08     0.17       8200 1.00

~Genus:Species (Number of levels: 152)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.20      0.07     0.04     0.33       5491 1.00
sd(b1_Intercept)     0.07      0.04     0.00     0.16       4548 1.00
sd(b2_Intercept)     0.20      0.03     0.16     0.26       6230 1.00
sd(b3_Intercept)     0.10      0.01     0.08     0.12       7096 1.00

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.62      0.23     2.17     3.07       5655 1.00
b1_Intercept      1.50      0.10     1.31     1.71        947 1.02
b2_Intercept      0.98      0.07     0.85     1.12       9704 1.00
b3_Intercept      0.91      0.06     0.79     1.02       9187 1.00
b3_precip         0.02      0.01     0.00     0.03      34489 1.00
b3_gdd            0.01      0.01     0.00     0.03      25159 1.00
b3_precip:gdd     0.01      0.00     0.00     0.01      14563 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    13.36      0.18    13.01    13.70      47958 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 54 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.png :height 1300
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_mainparameters.png :height 250
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[1:4],
             prob = 0.8) +
             plot_title +
    scale_y_discrete(labels = c("beta^0_0", "beta^1_0", "beta^2_0", "beta^3_0"))
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_mainparameters.png]]


#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_climate_effects.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[5:7],
             prob = 0.8) + plot_title +
    scale_y_discrete(labels = c("tau_1", "tau_2", "tau_3"))
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_climate_effects.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_sd_beta0.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[8:10],
             prob = 0.8) + plot_title +
    scale_y_discrete(labels = c("sigma^0_city", "sigma^0_genus", "sigma^0_genus:species"))
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_sd_beta0.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_sd_beta1.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[11:12],
             prob = 0.8) + plot_title +
    scale_y_discrete(labels = c("sigma^1_genus", "sigma^1_genus:species"))
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_sd_beta1.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_sd_beta2.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[13:15],
             prob = 0.8) + plot_title +
    scale_y_discrete(labels = c("sigma^2_city", "sigma^2_genus", "sigma^2_genus:species"))
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_sd_beta2.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_sd_beta3.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[16:18],
             prob = 0.8) + plot_title +
    scale_y_discrete(labels = c("sigma^3_city", "sigma^3_genus", "sigma^3_genus:species"))
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_sd_beta3.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_shape.png :height 100
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[19],
             prob = 0.8) + plot_title +
    scale_y_discrete(labels = c("alpha_y"))
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_shape.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData.png
  marginal_effects(mod, effects = "AGE:gdd")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData.png
  marginal_effects(mod, effects = "AGE:precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_limitedAgeRange.png
#p <-     marginal_effects(mod, effects = "AGE:precip")
plot(p)[[1]] +
        xlim(c(0,120))
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_limitedAgeRange.png]]



#+begin_src R :tangle calc_marginal_effects_fulldata.R
    library(dplyr)
    library(brms)
    mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData <- readRDS("../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.rds")
    mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData
     precip.gdd <-   marginal_effects(mod, effects = "precip:gdd", robust = F, surface = T, resolution = 100, nsamples = 10000, cond = data.frame(AGE = 25))
     saveRDS(precip.gdd, "../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_precip.gdd.surface.rds")


   ##  cond <- expand.grid(City = unique(mod$data$City), Species = unique(mod$data$Species))

   ## cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
   ##  cond <- left_join(cond, unique(select(mod$data, City, precip, gdd)))

   ##  me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "fitted", nsamples = 1000)
   ##  saveRDS(me, "../models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_methodfitted.rds")


  #marginal effect for only those species - city combinations with data:

##   cond <- unique(select(mod$data, Species, Genus, City, precip, gdd))

  ##  me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "fitted", nsamples = 1000)
    ##saveRDS(me, "../models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_methodfitted_observedconditions.rds")

#+end_src

#+RESULTS:

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz calc_marginal_effects_fulldata.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password: 
: building file list ... done
: calc_marginal_effects_fulldata.R
: 
: sent 441 bytes  received 60 bytes  66.80 bytes/sec
: total size is 1742  speedup is 3.48

#+BEGIN_SRC sh

  ssh krusty
  cd allo/code
  nohup R CMD BATCH calc_marginal_effects_fulldata.R &
  cat calc_marginal_effects_fulldata.Rout
  exit

#+END_SRC

#+BEGIN_SRC sh :session a :results verbatim
#rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects.rds ~/git/allo/models/
#rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_City.rds ~/git/allo/models/
#rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_Genus.rds ~/git/allo/models/
#rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_Genus_methodfitted.rds ~/git/allo/models/
#rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_methodfitted.rds ~/git/allo/models/
#rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_methodfitted_observedconditions.rds ~/git/allo/models/
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_precip.gdd.surface.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: 
: sh-3.2$ sh-3.2$ sh-3.2$ sh-3.2$ sh-3.2$ erker@krusty's password: 
: receiving file list ... done
: genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_precip.gdd.surface.rds
: 
: sent 2870 bytes  received 327709 bytes  94451.14 bytes/sec
: total size is 330200  speedup is 1.00

#+begin_src R
precip.gdd <- readRDS("../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_precip.gdd.surface.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData.png
precip.gdd
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData.png]]


I should make these contours and label the contour lines with DBH.

Use the direct label package

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_mean_directlabel.png :res 100
      library(directlabels)


  shifted.city <- unique(select(mod$data, City, gdd, precip))
  shifted.city$gdd[shifted.city$City == "Longview, WA"] <- 4
  shifted.city$gdd[shifted.city$City == "Honolulu, HI"] <- 9.5
  shifted.city$gdd[shifted.city$City == "Minneapolis, MN"] <- 4.2
  shifted.city$gdd[shifted.city$City == "Fort Collins, CO"] <- 4.2

  shifted.city <- shifted.city %>% filter(!City %in% c("Santa Monica, CA", "Modesto, CA"))

       p <-  ggplot(precip.gdd[[1]], aes(x = gdd, y = precip)) +
             scale_fill_continuous(type = "viridis") +
          geom_raster(data = precip.gdd[[1]],aes(fill = estimate__), show.legend = TRUE) +
           geom_contour(aes(z = estimate__, color = ..level..)) +
           scale_colour_gradient(guide = 'none', high = "black", low = "black") +
           theme_bw() +
           theme(text = element_text(size = 13)) +
           scale_y_continuous("Annual Precipitation (10 in)") +
           scale_x_continuous("Growing Degree Days (th)")


    p1 = direct.label(p, list("bottom.pieces", colour='black',  hjust = 1))

      p1 +
            geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = gdd, y = precip), color = "white") +
            geom_label(data = shifted.city, aes(x = gdd, y = precip, label = City), nudge_y = .18) +
  ggtitle("Posterior mean DBH at age 25")

#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_mean_directlabel.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_se.png :res 100
  red <- "#dc322f"
  blue <- "#268bd2"

   p <-       ggplot(precip.gdd[[1]], aes(x = gdd, y = precip)) +
               geom_raster(aes(fill = se__)) +
               geom_contour(aes(z = , z = se__, color = ..level..), breaks = c(15,12,9, 7, 6, 5)) +
               scale_colour_gradient(guide = 'none', high = "black", low = "black") +
              scale_fill_gradient("Standard Error", low = blue, high = red) +
           theme_bw() +
           theme(text = element_text(size = 13)) +
           scale_y_continuous("Annual Precipitation (10 in)") +
           scale_x_continuous("Growing Degree Days (th)")

           p1 = direct.label(p, list("bottom.pieces", colour="black",  hjust = 1, cex = 1.4, vjust = -1))

      p1 +
           geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = gdd, y = precip)) +
          geom_label(data = shifted.city, aes(x = gdd, y = precip, label = City), nudge_y = .15) +
ggtitle("Posterior standard error of DBH at age 25")


#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_se.png]]



#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_IQR_directlabels.png :res 100
  red <- "#dc322f"
  blue <- "#268bd2"

precip.gdd[[1]] <- mutate(precip.gdd[[1]], iqr = upper__ - lower__)

   p <-       ggplot(precip.gdd[[1]], aes(x = gdd, y = precip)) +
               geom_raster(aes(fill = iqr)) +
               geom_contour(aes(z = , z = iqr, color = ..level..), breaks = c(20,25,30,40,50,60)) +
               scale_colour_gradient(guide = 'none', high = "black", low = "black") +
              scale_fill_gradient("Standard Error", low = blue, high = red) +
           theme_bw() +
           theme(text = element_text(size = 13)) +
           scale_y_continuous("Annual Precipitation (10 in)") +
           scale_x_continuous("Growing Degree Days (th)")

           p1 = direct.label(p, list("bottom.pieces", colour="black",  hjust = 1, cex = 1.4, vjust = -1))

      p1 +
           geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = gdd, y = precip)) +
          geom_label(data = shifted.city, aes(x = gdd, y = precip, label = City), nudge_y = .15) +
ggtitle("Posterior 95% IQR of DBH at age 25, name?")

#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_IQR_directlabels.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_lower.png

     p <-  ggplot(precip.gdd[[1]], aes(x = gdd, y = precip)) +
          geom_raster(aes(fill = lower__)) +
          scale_fill_continuous(type = "viridis", limits = c(25.5, 137)) +
         geom_contour(aes(z = , z = lower__, color = ..level..)) +
      scale_colour_gradient(guide = 'none', high = "black", low = "black")

  p1 = direct.label(p, list("bottom.pieces", colour='black',  hjust = 1))

    p1 +
          geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = gdd, y = precip), color = "white") +
          geom_label(data = unique(select(mod$data, City, gdd, precip)), aes(x = gdd, y = precip, label = City), nudge_y = .15)


#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_lower.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_upper.png

     p <-  ggplot(precip.gdd[[1]], aes(x = gdd, y = precip)) +
          geom_raster(aes(fill = upper__)) +
          scale_fill_continuous(type = "viridis", limits = c(25.5, 137)) +
         geom_contour(aes(z = , z = upper__, color = ..level..)) +
      scale_colour_gradient(guide = 'none', high = "black", low = "black")

  p1 = direct.label(p, list("bottom.pieces", colour='black',  hjust = 1))

    p1 +
          geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = gdd, y = precip), color = "white") +
          geom_label(data = unique(select(mod$data, City, gdd, precip)), aes(x = gdd, y = precip, label = City), nudge_y = .15)

#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_upper.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities.png
  plot(precip.gdd, stype = "contour")[[1]] +
      scale_fill_continuous(type = "viridis", limits = c(25.5, 137)) +
      geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = precip, y = gdd)) +
      geom_label(data = unique(select(mod$data, City, gdd, precip)), aes(x = precip, y = gdd, label = City), nudge_y = .15) +
    coord_flip()
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities.png]]


#+begin_src R
me <-readRDS("~/git/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects.rds")
#+end_src

#+RESULTS:

#+begin_src R
me_city <-readRDS("~/git/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_City.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_singlepane_CityEffects_points.png :width 1000 :height 800 :res 170 :bg transparent

      #arrange the cities by precip * gdd
      me2 <- me_city$AGE  %>% mutate(gddprecip = gdd * precip,
                              City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

      dd <- mod$data %>%
          mutate(gddprecip = gdd  * precip,
                 City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

p <-           ggplot(me2) +
              geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__, fill = as.numeric(City), group = City), alpha = .01) +
              geom_line(aes(x = AGE, y = estimate__, color = as.numeric(City), group = City), size = 1, alpha = .2) +
              geom_point(data = dd, aes(x = AGE, y = DBH, color = as.numeric(City)), alpha = 1, size = .2) +
              scale_x_continuous(limits = c(0,150)) +
              scale_y_continuous("DBH", limits = c(0,230)) +
              scale_color_distiller("City\nranked by\n(GDD * Precip)", palette = "Spectral", breaks = 1:16, labels = levels(me2$City)) +
              scale_fill_distiller("City\nranked by\n(GDD * Precip)", palette = "Spectral", breaks = 1:16, labels = levels(me2$City)) +
              theme_minimal() +
          theme(text = element_text(color = "#839496"),
                axis.text = element_text(color = "#839496"),
                rect = element_rect(fill = "transparent"),
                panel.background = element_rect(fill = "transparent"),
                panel.grid = element_blank(), 
                legend.key.height = unit("2.3", "lines"))
p
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_singlepane_CityEffects_points.png]]


#+begin_src R

  nd <- unique(select(mod$data, Species, Genus, City, gdd, precip))

  res <- 30

  nd <- cbind(nd[rep(1:nrow(nd), each = res),], AGE = seq(0,200,length.out = res))

  genus_test <- fitted(mod, newdata = nd, nsamples = 50, re_formula = NULL)

#+end_src

#+RESULTS:


#+begin_src R
dd <- cbind(nd, genus_test)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/genus_test.png :width 1000 :bg transparent  :width 1000 :height 800 :res 170 
#  ggplot(filter(dd, Genus %in% c("Samanea", "Malus"))) + 
  ggplot(dd) + 
#  geom_ribbon(aes(x = AGE, ymin = Q2.5, ymax = Q97.5, fill = Genus, group = interaction(Species, City)), alpha = .3) +
  geom_line(aes(x = AGE, y = Estimate, color = Genus, group = interaction(Species, City))) +
                scale_x_continuous(limits = c(0,150)) +
                scale_y_continuous("DBH") +
                coord_cartesian(c(0,150), c(0,230)) +
                theme_minimal() +
            theme(text = element_text(color = "#839496"),
                  axis.text = element_text(color = "#839496"),
                  rect = element_rect(fill = "transparent"),
                  panel.background = element_rect(fill = "transparent"),
                  panel.grid = element_blank(),
                  legend.position = "none")

#+end_src

#+RESULTS:
[[file:../figs/genus_test.png]]


#+begin_src R
me_genus <-readRDS("~/git/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_Genus_methodfitted.rds")
#me_genus <-readRDS("~/git/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_methodfitted_observedconditions.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_singlepane_GenusEffects_lines.png :width 1000 :height 800 :res 170 :bg transparent
  me2 <- me_genus$AGE

#me2 <- filter(me2, Genus == "Acer")

  #      dd <- mod$data
             blue <- "#268bd2"
       red <- "#dc322f"
             yellow <- "#b58900"
             green <- "#859900"
             cyan <- "#2aa198"
             orange <- "#cb4b16"
            violet <- "#6c71c4"
            magenta <- "#d33682"

  p <-           ggplot(me2) +
#                geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__, group = Genus), fill = "white", alpha = .1) +
                geom_line(aes(x = AGE, y = estimate__, group = interaction(City,Genus)), size = .7, alpha = .5, color = blue) +
   #             geom_point(data = dd, aes(x = AGE, y = DBH, color = as.numeric(City)), alpha = 1, size = .2) +
                scale_x_continuous(limits = c(0,150)) +
                scale_y_continuous("DBH") +
                coord_cartesian(c(0,150), c(0,230)) +
  #              scale_color_distiller("City\nranked by\n(GDD * Precip)", palette = "Spectral", breaks = 1:16, labels = levels(me2$City)) +
  #              scale_fill_distiller("City\nranked by\n(GDD * Precip)", palette = "Spectral", breaks = 1:16, labels = levels(me2$City)) +
                theme_minimal() +
            theme(text = element_text(color = "#839496"),
                  axis.text = element_text(color = "#839496"),
                  rect = element_rect(fill = "transparent"),
                  panel.background = element_rect(fill = "transparent"),
                  panel.grid = element_blank(),
                  legend.position = "none")
        #          legend.key.height = unit("2.3", "lines"))
  p
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_singlepane_GenusEffects_lines.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_singlepane_GenusEffects_ribbons.png :width 1000 :height 800 :res 170 :bg transparent
  me2 <- me_genus$AGE

  #      dd <- mod$data
             blue <- "#268bd2"
       red <- "#dc322f"
             yellow <- "#b58900"
             green <- "#859900"
             cyan <- "#2aa198"
             orange <- "#cb4b16"
            violet <- "#6c71c4"
            magenta <- "#d33682"

  p <-           ggplot(filter(me2, Genus == "Samanea")) +
                geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__, group = Genus), fill = "gray", alpha = .1) +
                geom_line(aes(x = AGE, y = estimate__, color = interaction(City,Genus)), size = .7, alpha = .5) +
   #             geom_point(data = dd, aes(x = AGE, y = DBH, color = as.numeric(City)), alpha = 1, size = .2) +
                scale_x_continuous(limits = c(0,150)) +
                scale_y_continuous("DBH") +
                coord_cartesian(c(0,150), c(0,230)) +
  #              scale_color_distiller("City\nranked by\n(GDD * Precip)", palette = "Spectral", breaks = 1:16, labels = levels(me2$City)) +
  #              scale_fill_distiller("City\nranked by\n(GDD * Precip)", palette = "Spectral", breaks = 1:16, labels = levels(me2$City)) +
                theme_minimal() +
            theme(text = element_text(color = "#839496"),
                  axis.text = element_text(color = "#839496"),
                  rect = element_rect(fill = "transparent"),
                  panel.background = element_rect(fill = "transparent"),
                  panel.grid = element_blank(),
                  legend.position = "none")
        #          legend.key.height = unit("2.3", "lines"))
  p
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_singlepane_GenusEffects_ribbons.png]]




#+begin_src R
  library(plotly)
  library(htmlwidgets)

path <- "../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_singlepane_GenusEffects_lines.html"
  pw <- ggplotly(p)
  saveWidget(pw, path, selfcontained = F)
#+end_src

#+RESULTS:



#+begin_src R
  mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData <- readRDS("../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.rds")
  mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData
  me <-readRDS("~/git/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects_methodfitted_observedconditions.rds")

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_methodfitted.png :width 1000 :height 1000

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE)) %>%
    filter(Genus == "Acer")

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE)) %>%
    filter(Genus == "Acer")

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = lower__, ymax = upper__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = "red") +
          facet_grid(Species~City*gddprecip) +
          coord_cartesian(c(0,150))
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_methodfitted.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full.png :width 1000 :height 20000
me <-readRDS("~/git/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects.rds")

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = "red") +
          facet_grid(Species~City*gddprecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full.png]]

**** Plot Urban Tree Allometric equations on top of data

#+begin_src R
  predict.allo <- function(x, EqName, a, b, c, d, e) {
      if(EqName == "loglogw1") {
          y = exp(a + b*log(log(x + 1) + c/2))
      }
      else if(EqName == "loglogw2") {
          y = exp(a + b*log(log(x + 1))+(sqrt(x) * (c/2)))
      }
      else if (EqName == "loglogw3") {
          y = exp(a + b*log(log(x + 1)) + x * c/2)
      }
      else if (EqName == "loglogw4") {
          y = exp(a + b*log(log(x + 1)) + x^2 * c/2)
      }
      else if (EqName == "expow1") {
          y = exp(a+ b * (x) + (c/2))
      }
      else if (EqName == "lin") {
          y = a + b * x
      }
      else if (EqName == "quad") {
          y = a + b * x + c* x^2
      }
      else if (EqName == "cub") {
          y = a+b * x+c *x^2 + d * x^3
      }
      else if (EqName == "quart") {
          y = a+b * x+c *x^2 + d * x^3 + e * x^4
      }
      return(y)
  }

#+end_src

#+RESULTS:


#+begin_src R

  d <- readRDS("../data/age_dbh_full_noPalms.rds")
    eqn <- read.csv("../data/RDS-2016-0005/Data/TS6_Growth_coefficients_20180326.csv", stringsAsFactors = F) %>%
        mutate(a = as.numeric(a)) %>%
        rename(Species = SpCode)

    city_region <- read.csv("../data/city_climate.csv") %>%
      select(Region, City)

  city_clim <- read.csv("../data/cities_gdd_precip.csv") %>%
    mutate(gdd = gdd / 1000, precip = precip /1000)

  eqn <- left_join(eqn, city_region)
  eqn <- left_join(eqn, city_clim)

    eqn <- eqn %>%
        filter(Predicts.component %in% c("dbh"), Independent.variable == "age")

    age_min_max = d %>%
        group_by(Region, Species) %>%
        summarize(minAGE = min(AGE, na.rm = T),
                  maxAGE = max(AGE, na.rm = T))

    eqn <- left_join(eqn, age_min_max)

    DBH_min_max = d %>%
        group_by(Region, Species) %>%
        summarize(minDBH = min(DBH, na.rm = T),
                  maxDBH = max(DBH, na.rm = T))

    eqn <- left_join(eqn, DBH_min_max)


                                            # fill in the NAs due to equations existing for species in regions where they weren't sampled.
    eqn$minAGE[is.na(eqn$minAGE)] <- 0
    eqn$maxAGE[is.na(eqn$maxAGE)] <- 100

    newdata <- lapply(1:nrow(eqn), function(i) {
        x <- seq(eqn$minAGE[i], eqn$maxAGE[i],  (eqn$maxAGE[i] - eqn$minAGE[i]) / 20)
        cbind(x, eqn[i,])
    })

    newdata <- bind_rows(newdata)

    predictions <- newdata %>% rowwise %>% mutate(predicted_dbh = predict.allo(x = x, EqName = EqName, a = a, b = b, c = c, d = d, e = e))



                                            #filter out predictions that are outside range of data and label those in range of appsmin and appsmax
    predictions_apprange <- predictions %>%
        filter(predicted_dbh > Apps.min & predicted_dbh < Apps.max)

    predictions_datarange <- predictions %>%
        filter(predicted_dbh > minDBH & predicted_dbh < maxDBH)

    predictions_apprange <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh)
#+end_src

#+RESULTS:
: Joining, by = "Region"
: Warning message:
: Column `Region` joining character vector and factor, coercing into character vector
: Joining, by = "City"
: Joining, by = c("Region", "Species")
: Joining, by = c("Region", "Species")
: There were 50 or more warnings (use warnings() to see the first 50)



#+begin_src R
    me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                            City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

    dd <- mod$data %>%
        mutate(gddprecip = gdd  * precip,
               City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

predictions_apprange <- predictions_apprange %>%
        mutate(gddprecip = gdd  * precip,
               City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dsp <- unique(dd$Species)


   me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

me2 <- left_join(me2, unique(select(d, Region, City)))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))


  dd <- left_join(dd, unique(select(d, Region, City)))


predictions_apprange_sub <- predictions_apprange %>% filter(Species %in% unique(me2$Species))

#+end_src

#+RESULTS:
: There were 50 or more warnings (use warnings() to see the first 50)
: Joining, by = "City"
: Warning message:
: Column `City` joining factor and character vector, coercing into character vector
: Joining, by = "City"
: Warning message:
: Column `City` joining factor and character vector, coercing into character vector


#+begin_src R :exports results :results graphics :file ../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_FullData.png :bg transparent  :width 1000 :height 20000

      red <- "#dc322f"
      yellow <- "#b58900"
      blue <- "#268bd2"
      green <- "#859900"
      cyan <- "#2aa198"
      orange <- "#cb4b16"
     violet <- "#6c71c4"
     magenta <- "#d33682"

p <-       ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1, color = blue) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .1, fill = blue) +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = red) +
          facet_grid(Species~City*gddprecip) +
          geom_line(data = predictions_apprange_sub, aes(x = AGE, y = predicted_dbh), size = 1.5, color = green)

p +   theme(axis.text = element_text(size = 18, color = "#839496"))

#+end_src

#+RESULTS:
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_FullData.png]]


#+begin_src R :exports results :results graphics :file ../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_ulam_FullData2.png :height 200 :width 600
      library(ggthemes)
          red <- "#dc322f"
          yellow <- "#b58900"
          blue <- "#268bd2"
          green <- "#859900"
          cyan <- "#2aa198"
          orange <- "#cb4b16"
         violet <- "#6c71c4"
         magenta <- "#d33682"

    sp.subset <- c("ULAM")
    r.subset <- c("NoCalC","PacfNW", "MidWst", "NMtnPr")

    me2.sub <- filter(me2, Species %in% sp.subset, Region %in% r.subset)
    dd.sub <- filter(dd, Species %in% sp.subset, Region %in% r.subset)
    predictions_apprange_sub.sub <- filter(predictions_apprange_sub, Species %in% sp.subset, Region %in% r.subset)

       ggplot(me2.sub) +
           geom_line(aes(x = AGE, y = estimate__), size = 1, color = blue) +
           geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .1, fill = blue) +
           geom_point(data = dd.sub, aes(x = AGE, y = DBH), alpha = .5, size = 1, color = red) +
              facet_grid(Species~City) +
           geom_line(data = predictions_apprange_sub.sub, aes(x = AGE, y = predicted_dbh), size = 1, color = green) +
         scale_x_continuous(breaks = c(0,75), limits = c(0,100)) +
         scale_y_continuous("DBH") +
         theme_minimal() +
       theme(text = element_text(size = 18),
             panel.border = element_rect(color = "black", fill = NA))

#+end_src

#+RESULTS:
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_ulam_FullData2.png]]

#+begin_src R :exports results :results graphics :file ../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_no_UTDpredictions_focus_acpl_FullData.png :height 800 :width 1300 :res 300
            red <- "#dc322f"
            blue <- "#268bd2"
            green <- "#859900"

      sp.subset <- c("ACPL")
      r.subset <- c("MidWst", "NMtnPr", "NoEast", "PacfNW","TpIntW")

##      me2.sub <- filter(me2, Species %in% sp.subset, Region %in% r.subset)
      dd.sub <- filter(dd, Species %in% sp.subset, Region %in% r.subset)
      predictions_apprange_sub.sub <- filter(predictions_apprange_sub, Species %in% sp.subset, Region %in% r.subset)

      ## me3 <- me2.sub %>%
      ##     select(City, estimate__, AGE) %>%
      ##     rename(DBH = estimate__) %>%
      ##     mutate(Acer_platanoides = "prediction (95% PI)")

      dd.sub <- dd.sub %>% select(City, DBH, AGE) %>%
          mutate(Acer_platanoides = "observations")


      utd.pred <- predictions_apprange_sub.sub %>%
          select(City, DBH, AGE) %>%
          mutate(Acer_platanoides = "UTD prediction")

      d.com <- rbind(utd.pred)

    cols <- c("black", red)

      ggplot(d.com, aes(x = AGE, y = DBH)) +
          geom_point(data = dd.sub, aes(x = AGE, y = DBH, color = Acer_platanoides), alpha = .4, size = .75) +
          geom_line(aes(color = Acer_platanoides, group = interaction(Acer_platanoides,City))) +
  #        geom_ribbon(data = me2.sub, aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__,group = City), inherit.aes = F, alpha = .15) +
          facet_wrap(~City) +
          scale_x_continuous(breaks = c(0,75)) +
          scale_color_manual("Acer platanoides", values = cols) +
          theme_minimal() +
          theme(text = element_text(size = 14),
                panel.border = element_rect(color = "black", fill = NA),
                legend.position = c(.84, .2),
                legend.text = element_text(size = 8),
                legend.title = element_text(size = 12))

#+end_src

#+RESULTS:
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_no_UTDpredictions_focus_acpl_FullData.png]]


#+begin_src R :exports results :results graphics :file ../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_acpl_FullData.png :height 800 :width 1300 :res 300
            red <- "#dc322f"
            blue <- "#268bd2"
            green <- "#859900"

    sp.subset <- c("ACPL")
    r.subset <- c("MidWst", "NMtnPr", "NoEast", "PacfNW","TpIntW")

    me2.sub <- filter(me2, Species %in% sp.subset, Region %in% r.subset)
    dd.sub <- filter(dd, Species %in% sp.subset, Region %in% r.subset)
    predictions_apprange_sub.sub <- filter(predictions_apprange_sub, Species %in% sp.subset, Region %in% r.subset)

    me3 <- me2.sub %>%
        select(City, estimate__, AGE) %>%
        rename(DBH = estimate__) %>%
        mutate(Acer_platanoides = "prediction (95% PI)")

    dd.sub <- dd.sub %>% select(City, DBH, AGE) %>%
        mutate(Acer_platanoides = "observations")


    utd.pred <- predictions_apprange_sub.sub %>%
        select(City, DBH, AGE) %>%
        mutate(Acer_platanoides = "UTD prediction")



    d.com <- rbind(utd.pred, me3)

  cols <- c("black", blue, red)

    ggplot(d.com, aes(x = AGE, y = DBH)) +
        geom_point(data = dd.sub, aes(x = AGE, y = DBH, color = Acer_platanoides), alpha = .4, size = .75) +
        geom_line(aes(color = Acer_platanoides, group = interaction(Acer_platanoides,City))) +
        geom_ribbon(data = me2.sub, aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__,group = City), inherit.aes = F, alpha = .15) +
        facet_wrap(~City) +
        scale_x_continuous(breaks = c(0,75), limits = c(0, 120)) +
        scale_color_manual("Acer platanoides", values = cols) +
        theme_minimal() +
        theme(text = element_text(size = 14),
              panel.border = element_rect(color = "black", fill = NA),
              legend.position = c(.84, .2),
              legend.text = element_text(size = 8),
              legend.title = element_text(size = 12))

#+end_src

#+RESULTS:
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_acpl_FullData.png]]

What city is the lower midwest?  Indianapolis.  There is no data for that.

#+begin_src R :exports results :results graphics :file ../figs/list_pred_FullData.png
  ggplot(filter(me2, Species == "LIST")) + geom_line(aes(x = AGE, y = estimate__, color = gddprecip, group = City)) +
    scale_color_distiller(palette = "Spectral")
#+end_src

#+RESULTS:
[[file:../figs/list_pred.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData.png
   pp_check(mod) + xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma.png]]

**** test some predictions

***** acpl in sacramento and STL
#+begin_src R
    wg  <-  read.csv("../data/precip_qt_ll.csv")
    wp <-     read.csv("../data/gdd_qt_ll.csv")

    w <- left_join(wg, wp, by = c("station", "lat", "long"))

    stl <- c(lat = 38.6270, long = -90.1994)

    w2 <- filter(w, lat > stl["lat"] - .1,
                 lat < stl["lat"] + .1,
                 long > stl["long"] - .1,
                 long < stl["long"] + .1)


  #  ggplot(w, aes(x = long, y = lat)) +
   #     geom_point() +
    #    geom_point(data = w2, color = "pink")

    Species <- c("ACPL","UNKNOWN", "UNKNOWN")
    Genus <- c("Acer", "Acer", "UNKNOWN")
    gs <- data.frame(Genus, Species)
    City <- c("Sacramento, CA", "St. Louis, MO")
    gdd <- c(5.41, 4822/1000)
    precip <- c(2.03, 4273/1000)

    nd.clim <- data.frame(City, gdd, precip)

    nd <- expand.grid(City = City, AGE = 1:120)

    nd <- left_join(nd, nd.clim)

    expand.grid.df <- function(...) Reduce(function(...) merge(..., by=NULL), list(...))

    nd <- expand.grid.df(nd, gs)

    pred.nd <- predict(mod, nd, allow_new_levels = T, robust = T, probs = c(0.025, 0.25, .75, .975), nsamples = 5000)
#+end_src

#+RESULTS:
: Warning message:
: Column `station` joining factors with different levels, coercing to character vector
: Joining, by = "City"
: There were 50 or more warnings (use warnings() to see the first 50)

#+begin_src R
pd <- cbind(nd, pred.nd)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/predicting_cities_notB1_unobserved_groups_FullData.png :width 1300 :height 900 :res 300
    ggplot(pd, aes(x = AGE, y = Estimate)) +
      geom_line() +
      geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5), alpha = .3) +
      geom_ribbon(aes(ymin = Q25, ymax = Q75), alpha = .3) +
      facet_grid(City~Genus*Species, labeller = label_both) +
        scale_x_continuous(breaks = c(0,75)) +
        scale_y_continuous("DBH") +
      theme_minimal() +
       theme(text = element_text(size = 10),
             panel.border = element_rect(color = "black", fill = NA),
             strip.text = element_text(size = 7))

#+end_src

#+RESULTS:
[[file:../figs/predicting_cities_notB1_unobserved_groups_FullData.png]]

***** prye
#+begin_src R
      prye <- filter(mod$data, Species == "PRYE")

    nd.prye <- prye %>%
        select(City, Species, Genus, gdd, precip) %>%
        unique() %>%
        cbind(data.frame(AGE = 1:200))

      pred.prye <- predict(mod, nd.prye, robust = T, probs = c(0.025, 0.25, .75, .975), nsamples = 5000)

  pred.prye <- cbind(nd.prye,pred.prye)

#+end_src

#+RESULTS:
: Warning message:
: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R :exports results :results graphics :file ../figs/yoshinocherry.png :res 200 :width 800
  ggplot() + geom_point(data = prye, aes(x = AGE, y = DBH)) +
      geom_line(data = pred.prye, aes(x = AGE, y = Estimate), inherit.aes = F, color = blue) +
      geom_ribbon(data = pred.prye, aes(x = AGE, ymin = Q2.5, ymax = Q97.5), inherit.aes = F, fill = blue, alpha = .3) +
    scale_x_continuous(limits = c(0,100)) +
      coord_cartesian(ylim = c(0,200)) +
    theme_minimal()

#+end_src

#+RESULTS:
[[file:../figs/yoshinocherry.png]]

***** crepe mrytl
#+begin_src R
        lain <- filter(mod$data, Species == "LAIN")

      nd.lain <- lain %>%
          select(City, Species, Genus, gdd, precip) %>%
          unique() %>%
          cbind(data.frame(AGE = rep(1:200, each = 5)))

        pred.lain <- predict(mod, nd.lain, robust = T, probs = c(0.025, 0.25, .75, .975), nsamples = 5000)

    pred.lain <- cbind(nd.lain,pred.lain)

#+end_src

#+RESULTS:
: 
: Warning message:
: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R :exports results :results graphics :file ../figs/lain.png :res 200 :width 800
  ggplot() + geom_point(data = lain, aes(x = AGE, y = DBH, color = City)) +
      geom_line(data = pred.lain, aes(x = AGE, y = Estimate, color = City), inherit.aes = F) +
    scale_x_continuous(limits = c(0,100)) +
    theme_minimal()

#+end_src

#+RESULTS:
[[file:../figs/lain.png]]

#+begin_src R :exports results :results graphics :file ../figs/lain_CA.png :res 200 :width 800
  ggplot() + geom_point(data = filter(lain, !City %in% c("Charleston, SC", "Orlando, FL")) , aes(x = AGE, y = DBH, color = City)) +
      geom_line(data =  filter(pred.lain, !City %in% c("Charleston, SC", "Orlando, FL")), aes(x = AGE, y = Estimate, color = City), inherit.aes = F) +
    scale_x_continuous(limits = c(0,100)) +
    theme_minimal()

#+end_src

#+RESULTS:
[[file:../figs/lain_CA.png]]

***** sweet gum
#+begin_src R

        list <- filter(mod$data, Species == "LIST")

      nd.list <- list %>%
          select(City, Species, Genus, gdd, precip) %>%
          unique() %>%
          cbind(data.frame(AGE = rep(1:200, each = 11)))

        pred.list <- predict(mod, nd.list, robust = T, probs = c(0.025, 0.25, .75, .975), nsamples = 5000)

    pred.list <- cbind(nd.list,pred.list)

#+end_src

#+RESULTS:
: 
: Warning message:
: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R :exports results :results graphics :file ../figs/list.png :res 200 :width 800
  ggplot() + geom_point(data = list, aes(x = AGE, y = DBH, color = City)) +
      geom_line(data = pred.list, aes(x = AGE, y = Estimate, color = City), inherit.aes = F) +
    scale_x_continuous(limits = c(0,100)) +
    theme_minimal()

#+end_src

#+RESULTS:
[[file:../figs/list.png]]

#+begin_src R :exports results :results graphics :file ../figs/list_CA.png :res 200 :width 800
  ggplot() + geom_point(data = filter(list, grepl(".*CA",City)), aes(x = AGE, y = DBH, color = City), size = .5) +
      geom_line(data = filter(pred.list, grepl(".*CA",City)), aes(x = AGE, y = Estimate, color = City), inherit.aes = F) +
    scale_x_continuous(limits = c(0,100)) +
    theme_minimal()

#+end_src

#+RESULTS:
[[file:../figs/list_CA.png]]

***** Camphor
#+begin_src R

        cica <- filter(mod$data, Species == "CICA")

      nd.cica <- cica %>%
          select(City, Species, Genus, gdd, precip) %>%
          unique() %>%
          cbind(data.frame(AGE = rep(1:200, each = 6)))

        pred.cica <- predict(mod, nd.cica, robust = T, probs = c(0.025, 0.25, .75, .975), nsamples = 5000)

    pred.cica <- cbind(nd.cica,pred.cica)

#+end_src

#+RESULTS:
: 
: Warning message:
: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R :exports results :results graphics :file ../figs/cica.png :res 200 :width 800
  ggplot() + geom_point(data = cica, aes(x = AGE, y = DBH, color = City)) +
      geom_line(data = pred.cica, aes(x = AGE, y = Estimate, color = City), inherit.aes = F) +
    scale_x_continuous(limits = c(0,100)) +
    theme_minimal()

#+end_src

#+RESULTS:
[[file:../figs/cica.png]]

#+begin_src R :exports results :results graphics :file ../figs/cica_CA.png :res 200 :width 800
  ggplot() + geom_point(data = filter(cica, grepl(".*CA",City)), aes(x = AGE, y = DBH, color = City), size = .5) +
      geom_line(data = filter(pred.cica, grepl(".*CA",City)), aes(x = AGE, y = Estimate, color = City), inherit.aes = F) +
    scale_x_continuous(limits = c(0,100)) +
    theme_minimal()

#+end_src

#+RESULTS:
[[file:../figs/cica_CA.png]]

***** Black Locust  rops

#+begin_src R
      rops <- filter(d, Species == "ROPS")

    nd.rops <- rops %>%
        select(City, Species, Genus, gdd, precip) %>%
        unique() %>%
        cbind(data.frame(AGE = 1:200))

      pred.rops <- predict(mod, nd.rops, robust = T, probs = c(0.025, 0.25, .75, .975), nsamples = 5000)

  pred.rops <- cbind(nd.rops,pred.rops)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/robiniapsuedoacacia.png
      ggplot() +
          geom_point(data = rops, aes(x = AGE, y = DBH, color = City)) +
          geom_line(data = pred.rops, aes(x = AGE, y = Estimate, color = City), inherit.aes = F)

#+end_src

#+RESULTS:
[[file:../figs/robiniapsuedoacacia.png]]

***** Monkey Pod,  PISA2, Albizia Saman, Samanea Saman

#+begin_src R
  pisa2 <- filter(mod$data, Genus == "Samanea")

    nd.pisa2 <- pisa2 %>%
        select(City, Species, Genus, gdd, precip) %>%
        unique() %>%
        cbind(data.frame(AGE = 1:200))

#      pred.pisa2 <- posterior_predict(mod, nd.pisa2, robust = T, probs = c(0.025, 0.25, .75, .975), nsamples = 5000)
      pred.pisa2 <- fitted(mod, nd.pisa2, robust = T, probs = c(0.025, 0.25, .75, .975), nsamples = 5000, summary = T)

  pred.pisa2 <- cbind(nd.pisa2,pred.pisa2)

#+end_src

#+RESULTS:
: 
: Warning message:
: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R :exports results :results graphics :file ../figs/monkeypod.png
      ggplot() +
          geom_point(data = pisa2, aes(x = AGE, y = DBH, color = City)) +
          geom_ribbon(data = pred.pisa2, aes(x = AGE, ymin = Q2.5, ymax = Q97.5, fill = City), inherit.aes = F, alpha = .3) +
          geom_line(data = pred.pisa2, aes(x = AGE, y = Estimate, color = City), inherit.aes = F) 

#+end_src

#+RESULTS:
[[file:../figs/monkypod.png]]

**** posterior predictive check

#+begin_src R
library(dplyr)
library(brms)
#+end_src

#+RESULTS:


#+begin_src R
mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.rds")
mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData
#+end_src

#+RESULTS:

#+begin_src R
  p <- pp_check(mod, type = "dens_overlay", nsamples = 30) +
      scale_x_continuous(limits = c(0,200), breaks = c(0,25,50,100,150,200))
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/pp_check_dens_bmod.png :width 800 :res 130
      p +
        scale_color_manual(labels = c(expression(italic(DBH)), expression(italic(DBH)[rep])), values = c("black", "light gray")) +
          theme(legend.title=element_blank(),
                legend.position = c(.85, .85))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_dens_bmod.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_bmod_ecdf.png :width 1000 :res 100
  pp_check(mod, type = "ecdf_overlay") +
    scale_x_continuous(limits = c(0,200))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_bmod_ecdf.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_bmod_stat_max.png
  pp_check(mod, type = "stat", stat = "max", nsamples = 100)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_bmod_stat_max.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_bmod_stat_mean.png
  pp_check(mod, type = "stat", stat = "mean", nsamples = 100)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_bmod_stat_mean.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_bmod_stat_mean.png
  pp_check(mod, type = "stat", stat = "mean", nsamples = 100)
#+end_src


#+begin_src R :exports results :results graphics :file ../figs/age_dbh_alldata_maybeoutliers.png
ggplot(mod$data, aes(x = AGE, y = DBH)) + geom_point(alpha = .3)
#+end_src

#+RESULTS:
[[file:../figs/age_dbh_alldata_maybeoutliers.png]]

#+begin_src R :exports results :results graphics :file ../figs/age_dbh_alldata_maybeoutliers_alpha1.png
ggplot(mod$data, aes(x = AGE, y = DBH)) + geom_point(alpha = .01)
#+end_src

#+RESULTS:
[[file:../figs/age_dbh_alldata_maybeoutliers_alpha1.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_hist.png
  pp_check(mod, type = "hist", nsamples = 8) +
    xlim(c(0,200))
#+end_src

#+RESULTS:
[[file:../figs/pp_hist.png]]

**** COMMENT model stan code
#+begin_src R
mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.rds")
mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData
#+end_src

#+begin_src R :results stan
stancode(mod)
#+end_src


#+BEGIN_SRC stan :tangle nil

// generated with brms 2.4.3
functions { 
} 
data { 
  int<lower=1> N;  // total number of observations 
  vector[N] Y;  // response variable 
  int<lower=1> K_b0;  // number of population-level effects 
  matrix[N, K_b0] X_b0;  // population-level design matrix 
  int<lower=1> K_b1;  // number of population-level effects 
  matrix[N, K_b1] X_b1;  // population-level design matrix 
  int<lower=1> K_b2;  // number of population-level effects 
  matrix[N, K_b2] X_b2;  // population-level design matrix 
  int<lower=1> K_b3;  // number of population-level effects 
  matrix[N, K_b3] X_b3;  // population-level design matrix 
  // covariate vectors 
  vector[N] C_1;
  // data for group-level effects of ID 1
  int<lower=1> J_1[N];
  int<lower=1> N_1;
  int<lower=1> M_1;
  vector[N] Z_1_b0_1;
  // data for group-level effects of ID 2
  int<lower=1> J_2[N];
  int<lower=1> N_2;
  int<lower=1> M_2;
  vector[N] Z_2_b0_1;
  // data for group-level effects of ID 3
  int<lower=1> J_3[N];
  int<lower=1> N_3;
  int<lower=1> M_3;
  vector[N] Z_3_b0_1;
  // data for group-level effects of ID 4
  int<lower=1> J_4[N];
  int<lower=1> N_4;
  int<lower=1> M_4;
  vector[N] Z_4_b1_1;
  // data for group-level effects of ID 5
  int<lower=1> J_5[N];
  int<lower=1> N_5;
  int<lower=1> M_5;
  vector[N] Z_5_b1_1;
  // data for group-level effects of ID 6
  int<lower=1> J_6[N];
  int<lower=1> N_6;
  int<lower=1> M_6;
  vector[N] Z_6_b2_1;
  // data for group-level effects of ID 7
  int<lower=1> J_7[N];
  int<lower=1> N_7;
  int<lower=1> M_7;
  vector[N] Z_7_b2_1;
  // data for group-level effects of ID 8
  int<lower=1> J_8[N];
  int<lower=1> N_8;
  int<lower=1> M_8;
  vector[N] Z_8_b2_1;
  // data for group-level effects of ID 9
  int<lower=1> J_9[N];
  int<lower=1> N_9;
  int<lower=1> M_9;
  vector[N] Z_9_b3_1;
  // data for group-level effects of ID 10
  int<lower=1> J_10[N];
  int<lower=1> N_10;
  int<lower=1> M_10;
  vector[N] Z_10_b3_1;
  // data for group-level effects of ID 11
  int<lower=1> J_11[N];
  int<lower=1> N_11;
  int<lower=1> M_11;
  vector[N] Z_11_b3_1;
  int prior_only;  // should the likelihood be ignored? 
} 
transformed data { 
} 
parameters { 
  vector<lower=0>[K_b0] b_b0;  // population-level effects 
  vector<lower=0>[K_b1] b_b1;  // population-level effects 
  vector<lower=0>[K_b2] b_b2;  // population-level effects 
  vector<lower=0>[K_b3] b_b3;  // population-level effects 
  real<lower=0> shape;  // shape parameter 
  vector<lower=0>[M_1] sd_1;  // group-level standard deviations
  vector[N_1] z_1[M_1];  // unscaled group-level effects
  vector<lower=0>[M_2] sd_2;  // group-level standard deviations
  vector[N_2] z_2[M_2];  // unscaled group-level effects
  vector<lower=0>[M_3] sd_3;  // group-level standard deviations
  vector[N_3] z_3[M_3];  // unscaled group-level effects
  vector<lower=0>[M_4] sd_4;  // group-level standard deviations
  vector[N_4] z_4[M_4];  // unscaled group-level effects
  vector<lower=0>[M_5] sd_5;  // group-level standard deviations
  vector[N_5] z_5[M_5];  // unscaled group-level effects
  vector<lower=0>[M_6] sd_6;  // group-level standard deviations
  vector[N_6] z_6[M_6];  // unscaled group-level effects
  vector<lower=0>[M_7] sd_7;  // group-level standard deviations
  vector[N_7] z_7[M_7];  // unscaled group-level effects
  vector<lower=0>[M_8] sd_8;  // group-level standard deviations
  vector[N_8] z_8[M_8];  // unscaled group-level effects
  vector<lower=0>[M_9] sd_9;  // group-level standard deviations
  vector[N_9] z_9[M_9];  // unscaled group-level effects
  vector<lower=0>[M_10] sd_10;  // group-level standard deviations
  vector[N_10] z_10[M_10];  // unscaled group-level effects
  vector<lower=0>[M_11] sd_11;  // group-level standard deviations
  vector[N_11] z_11[M_11];  // unscaled group-level effects
} 
transformed parameters { 
  // group-level effects 
  vector[N_1] r_1_b0_1 = sd_1[1] * (z_1[1]);
  // group-level effects 
  vector[N_2] r_2_b0_1 = sd_2[1] * (z_2[1]);
  // group-level effects 
  vector[N_3] r_3_b0_1 = sd_3[1] * (z_3[1]);
  // group-level effects 
  vector[N_4] r_4_b1_1 = sd_4[1] * (z_4[1]);
  // group-level effects 
  vector[N_5] r_5_b1_1 = sd_5[1] * (z_5[1]);
  // group-level effects 
  vector[N_6] r_6_b2_1 = sd_6[1] * (z_6[1]);
  // group-level effects 
  vector[N_7] r_7_b2_1 = sd_7[1] * (z_7[1]);
  // group-level effects 
  vector[N_8] r_8_b2_1 = sd_8[1] * (z_8[1]);
  // group-level effects 
  vector[N_9] r_9_b3_1 = sd_9[1] * (z_9[1]);
  // group-level effects 
  vector[N_10] r_10_b3_1 = sd_10[1] * (z_10[1]);
  // group-level effects 
  vector[N_11] r_11_b3_1 = sd_11[1] * (z_11[1]);
} 
model { 
  vector[N] nlp_b0 = X_b0 * b_b0;
  vector[N] nlp_b1 = X_b1 * b_b1;
  vector[N] nlp_b2 = X_b2 * b_b2;
  vector[N] nlp_b3 = X_b3 * b_b3;
  vector[N] mu;
  for (n in 1:N) { 
    nlp_b0[n] += r_1_b0_1[J_1[n]] * Z_1_b0_1[n] + r_2_b0_1[J_2[n]] * Z_2_b0_1[n] + r_3_b0_1[J_3[n]] * Z_3_b0_1[n];
    nlp_b1[n] += r_4_b1_1[J_4[n]] * Z_4_b1_1[n] + r_5_b1_1[J_5[n]] * Z_5_b1_1[n];
    nlp_b2[n] += r_6_b2_1[J_6[n]] * Z_6_b2_1[n] + r_7_b2_1[J_7[n]] * Z_7_b2_1[n] + r_8_b2_1[J_8[n]] * Z_8_b2_1[n];
    nlp_b3[n] += r_9_b3_1[J_9[n]] * Z_9_b3_1[n] + r_10_b3_1[J_10[n]] * Z_10_b3_1[n] + r_11_b3_1[J_11[n]] * Z_11_b3_1[n];
    // compute non-linear predictor 
    mu[n] = shape / (nlp_b0[n] + 100 * nlp_b1[n] * (1 - exp( - (nlp_b2[n] / 100) * C_1[n] ^ (nlp_b3[n]))));
  } 
  // priors including all constants 
  target += gamma_lpdf(b_b0 | 9, 3)
    - 1 * gamma_lccdf(0 | 9, 3); 
  target += gamma_lpdf(b_b1 | 34, 19.4)
    - 1 * gamma_lccdf(0 | 34, 19.4); 
  target += gamma_lpdf(b_b2 | 69.4, 55.5)
    - 1 * gamma_lccdf(0 | 69.4, 55.5); 
  target += gamma_lpdf(b_b3[1] | 16, 26)
    - 1 * gamma_lccdf(0 | 16, 26); 
  target += normal_lpdf(b_b3[2] | 0.01, 0.01)
    - 1 * normal_lccdf(0 | 0.01, 0.01); 
  target += normal_lpdf(b_b3[3] | 0.01, 0.015)
    - 1 * normal_lccdf(0 | 0.01, 0.015); 
  target += normal_lpdf(b_b3[4] | 0.005, 0.005)
    - 1 * normal_lccdf(0 | 0.005, 0.005); 
  target += gamma_lpdf(shape | 20, 1); 
  target += normal_lpdf(sd_1 | 0, 0.3)
    - 1 * normal_lccdf(0 | 0, 0.3); 
  target += normal_lpdf(z_1[1] | 0, 1);
  target += normal_lpdf(sd_2 | 0, 0.4)
    - 1 * normal_lccdf(0 | 0, 0.4); 
  target += normal_lpdf(z_2[1] | 0, 1);
  target += normal_lpdf(sd_3 | 0, 0.1)
    - 1 * normal_lccdf(0 | 0, 0.1); 
  target += normal_lpdf(z_3[1] | 0, 1);
  target += normal_lpdf(sd_4 | 0.1, 0.4)
    - 1 * normal_lccdf(0 | 0.1, 0.4); 
  target += normal_lpdf(z_4[1] | 0, 1);
  target += normal_lpdf(sd_5 | 0, 0.1)
    - 1 * normal_lccdf(0 | 0, 0.1); 
  target += normal_lpdf(z_5[1] | 0, 1);
  target += normal_lpdf(sd_6 | 0, 0.1)
    - 1 * normal_lccdf(0 | 0, 0.1); 
  target += normal_lpdf(z_6[1] | 0, 1);
  target += normal_lpdf(sd_7 | 0, 0.1)
    - 1 * normal_lccdf(0 | 0, 0.1); 
  target += normal_lpdf(z_7[1] | 0, 1);
  target += normal_lpdf(sd_8 | 0, 0.05)
    - 1 * normal_lccdf(0 | 0, 0.05); 
  target += normal_lpdf(z_8[1] | 0, 1);
  target += normal_lpdf(sd_9 | 0, 0.1)
    - 1 * normal_lccdf(0 | 0, 0.1); 
  target += normal_lpdf(z_9[1] | 0, 1);
  target += normal_lpdf(sd_10 | 0, 0.1)
    - 1 * normal_lccdf(0 | 0, 0.1); 
  target += normal_lpdf(z_10[1] | 0, 1);
  target += normal_lpdf(sd_11 | 0, 0.05)
    - 1 * normal_lccdf(0 | 0, 0.05); 
  target += normal_lpdf(z_11[1] | 0, 1);
  // likelihood including all constants 
  if (!prior_only) { 
    target += gamma_lpdf(Y | shape, mu);
  } 
} 
generated quantities { 
}

#+END_SRC 

**** Minneapolis
#+begin_src R
mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData.rds")
mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData

#+end_src

#+begin_src R
    d <- mod$data %>%
      filter(City %in% c("Minneapolis, MN", "Charlotte, NC"),
             Species %in% c("ACRU", "ACSA1", "ACSA2","MA2","QURU"),
             Species %in% c("ACSA1", "ACSA2"))
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/MN.png :height 500 :width 600 :res 150 :bg transparent
  blue <- "#268bd2"

    ggplot(d, aes(x = AGE, y = DBH)) + 
        geom_point(color = blue, size = .7) +
        facet_grid(City~Species) +
                  theme_minimal() +
              theme(text = element_text(color = "#839496"),
                    axis.text = element_text(color = "#839496"),
                    rect = element_rect(fill = "transparent"),
                    panel.background = element_rect(fill = "transparent"),
                    panel.grid = element_blank(),
                    legend.position = "none",
                    strip.text = element_text(color = "#839496"))
#+end_src

#+RESULTS:
[[file:../figs/MN.png]]

* Statistical Inference
** Model fitting in Stan
Stan is a probabilistic programming language for bayesian inference
citep:carpenter_e_2017.  It uses No-U-Turn sampler, an adaptive form of
Hamiltonian Monte Carlo sampling, to effectively draw samples from the
specified log posterior density.  Here, we access Stan via the R
package =brms= citep:buerkner_2017. =brms= allows the user to specify
the likelihood and priors in syntax similar to the R package lme4
commonly used for frequentist multilevel (mixed effects) models.  This
makes using Stan much simpler and concise because it frees the user
from the need to optimize Stan code (=brms= is already very efficient)
and can convert a few lines of R code into many lines of Stan.  =brms=
is not as flexible as Stan, but still can be used to fit many types of
models including nonlinear multilevel regression models, such as ours
here.  Some of the key advantages of fitting a model in Stan via
=brms= include relatively simple syntax and efficient posterior
sampling for multilevel non-linear models.  The bayesian approach
gives better estimates of parameter uncertainty and provides a formal
way to include prior information.

Posterior distributions with 80% interval and median for parameters
are shown in figures [[fig:main_effects_posterior]],
[[fig:climate_effects_posterior]], [[fig:sd_beta0_posterior]],
[[fig:sd_beta1_posterior]], [[fig:sd_beta2_posterior]],
[[fig:sd_beta3_posterior]], [[fig:shape_posterior]].

** Model Comparisons
Our approach increased model complexity at each step, first fitting a
single weibull curve to all trees, and then allowing all parameters to
vary by city, genus, and climate.  Table [[tab:model_descriptions]]
provides short descriptions of the models tested and the brms sytax
used.  Note, in the code used parameters were rescaled so that all
parameters would be on roughly the same order of magnitude.  This
scaling was omitted from table [[tab:model_descriptions]] for clarity.
After fitting a complex model where all of the \beta's could vary by city,
genus, and species, we sought a slightly simpler model and dropped the
variation of the asymptote by city (model 6).

#+begin_src R :exports none :eval no :colnames yes :results org
library(ascii)
options(asciiType = "org")
org <- function(x,...) {
                                          #op <- options(warn = -1)
                                          #      on.exit(options(op))

      suppressWarnings(print(ascii(x,...)))

  }
org(data.frame(res[[2]]))
#+end_src

#+RESULTS:
#+BEGIN_SRC org
  |        | elpd_diff |  elpd_loo | se_elpd_loo |  p_loo | se_p_loo |    looic | se_looic |
  |--------+-----------+-----------+-------------+--------+----------+----------+----------|
  | model6 |      0.00 | -18845.41 |       95.85 | 163.62 |    14.47 | 37690.82 |   191.71 |
  | model7 |   -130.97 | -18976.38 |       93.66 | 142.43 |     9.70 | 37952.77 |   187.31 |
  | model3 |   -143.83 | -18989.24 |       94.11 | 185.85 |    12.23 | 37978.49 |   188.22 |
  | model2 |   -919.06 | -19764.48 |       88.69 |  47.64 |     3.83 | 39528.95 |   177.38 |
  | model5 |  -1334.99 | -20180.41 |       82.75 |   6.76 |     0.33 | 40360.81 |   165.50 |
  | model4 |  -1349.80 | -20195.21 |       82.60 |   6.97 |     0.35 | 40390.43 |   165.20 |
  | model1 |  -1667.70 | -20513.12 |       81.57 |   4.93 |     0.23 | 41026.23 |   163.14 |
#+END_SRC

#+begin_src R :exports none
loo::compare(res[[1]][[6]], res[[1]][[7]])
#+end_src

#+RESULTS:
: elpd_diff        se
:    -131.0      21.4

Table [[tab:model_comparison]] shows the models ranked by the approximate
leave-one-out expected log pointwise predictive density
citep:vehtari_e_2017. Lower values indicate better model predictive
performance. The standard error for the elpd difference of 131 between
model 6 and model 7 is 21.4, giving strong evidence that model 6 is
superior to the other models.

*** COMMENT old way to resize table
##+latex: \resizebox*{!}{\textheight}{%
##+latex: }


#+ATTR_LATEX: :environment longtable :align |l|l{10cm}|l|
*** COMMENT elpd loo
[[file:../../../org/attachments/Results/p_2018-10-30_19-36-31.png]]

* Results
** Climate Effects on Growth Rate
There is a positive effect of growing degree days (gdd) and annual
precipitation (precip) on tree diameter (dbh), and a postive
interaction between the two.  Marginal effects of climate on posterior
mean of DBH for a tree 25 years after planting are shown in
figure [[fig:marginal_effects_climate_25AGE_mean_labels]], standard error of this
mean is in figure [[fig:marginal_effects_climate_25AGE_se_labels]].  There is an
estimated 40cm difference in dbh between an average tree in Orlando,
FL and one in Boise, ID.
** Comparing to Existing Equations
Figure
[[fig:acpl_predictions_dbh_bySpeciesCity_wData_wUTDpredictions_ACPL]]
compares our model to existing UTD equations for /Acer platanoides/
(Comparisons for all species and cities are in supplementary figures).
In the case of Fort Collins, UTD and our equations have high
agreement.  Similarly in Minneapolis, however we are able to provide
more reasonable extrapolation.  In the case of Boise, UTD predicts
declining DBH at large ages, and in Longview it predicts rapidly
increasing DBH at large ages.  Our model does not fit the sample of
data from those individual cities as well, but it shares information
across all cities so that it will likely make a better out of sample
prediction and extrapolates more reasonably.  In the case of Queens,
there were only two observations and so the UTD growth equation was a
straight line (there may be a missing point used to fit the line which
is not in the data and would explain why the line doesn't connect the
two observations).  By borrowing information across all cities, we are
able to make a more reasonable prediction even with only two
observations in that city.

*** COMMENT all comparisons for model
#+name: fig:all_predictions_dbh_bySpeciesCity_wData_wUTDpredictions
#+caption: red points are observations, blue lines are predictions of the model and shading indicates 95% prediction interval, green lines show UTD equations
[[file:../figs/predictions_dbh_bySpeciesCity_wData_wUTDpredictions.png]]
** Uncertainty increases when predicting out of sample cities, genera, and species
It is also possible to make predictions to unsampled cities and
species while accounting for the increased uncertainty.  Figure
[[fig:predicting_ubobserved_groups]] shows how the predictive interval for
DBH increases for an unknown species of /Acer/ (second column) and
increases even more for an unknown genus and unknown species (third
column).  For an unsampled city, such as St. Louis, MO (second row),
uncertainty is higher than for a sampled city, Sacramento, CA (first
row).  The large 95% predictive intervals for a tree of unknown genus
and species shows how great the genetic variablility is across trees.

** COMMENT Model Checking
*** Posterior predictive check
#+name:posterior_predictive_density_overlay
#+caption: Comparison of the distribution of the observed DBH (black line) with the kernel density estimate of 30 simulated draws from the posterior predictive distribution (light blue lines).
[[file:../figs/pp_check_dens_bmod.png]]
** COMMENT ideas
summary figure showing parameter marginal posterior distributions.  Or
maybe just mean and a couple confidence intervals

figure showing the age versus dbh for several species and city
combinations.  overlay our models and the existing models for
comparison.

figure showing the marginal effects smooth plot of gdd versus precip,
with a contour showing in what climate space 50%, 75%, and 95% of the
US population lives.
The marginal effects and the uncertainty in them could also be mapped back into geographic space
and the map could show that.  That would be neat.


comparison to old method

show predicitive intervals for
- known genus/species in known city,
- known genus, unknown species in known city
- unknown genus, unknown species in unknown city
-

An extension on this.  Rather than showing the predictive intervals, I
could make draws for random species, genus, city from the posterior
and plot the estimates.  Imagine sampling 30 new genera, 4 species for
each genera, and a couple cities.  Then making spaghetti plot of these.

Show how the equations vary continuously across geographic space,
show the equations for a variety of unsampled cities.

* Discussion

Our selected model provides biologically realistic estimates of tree
diameter growth for all species and cities observed, and also a way to
make predictions for species with little or no data while
appropriately reporting uncertainty.  Our model will make better out
of sample predictions than the existing UTC equations which are
overfit to single species by cities combinations.  We found the growth
curve parameters, \beta_0, \beta_2, \beta_3, vary more across cities, than they do
across genera, and there is much less varation due to species within
genera.  This suggests that management practices and other factors
that vary across cities can have a stronger impact on growth than the
genetic potential of trees.  This result is not surprising for \beta_0, the
diameter of trees when they are transplanted, since it is almost
completely determined by management decisions about when a tree is
large enough to withstand the urban environment.  Differences in other
growth parameters across cities have been found before.  As noted by
cite:peper_2001a, differences in the dimensions of sweetgum and
camphor in Modesto and in Santa Monica were due to different pruning
regimes and cultural practices.  While including more information at
the genus level such as leaf foliar traits or wood characteristics
(e.g. citealt:dietze_e_2008) could certainly help explain variation in
growth, our results show that an information on city-level management
practices would do more to improve predictive performance, especially
in unsampled cities.

There is evidence that growth rate (\beta_3) varies with climatic differences across
cities, but there is still considerable uncertainty in these effects
due largely to the relatively small sample size of cities and their
uneven distribution in climate space.  25 years after planting, the
model predicts that trees in warm and wet climates (e.g. central
florida) will be about 60 cm greater in DBH than trees grown in cool
dry climates (e.g. Fort Collins).  While this is physically possible,
the high uncertainty qualifies this estimate.  Orlando is the only
city sampled from a very warm and wet climate, its large influence in
the model and the high uncertainty suggests more cities need to be
sampled in places like Louisiana and eastern Texas.

The mean asymptote for diameter growth of common urban species (\beta_1) is
about 150 cm (95% CI: 131 - 171).  This varies considerably by genus
and at times in unrealistic ways due to data limitations.  For
example, the estimated mean asymptotic DBH for Prunus (cherry), a
small tree is 194 cm, while for Robinina psuedoacacia, a larger tree,
it is 107 cm.  Prunus has such a large estimated asymptote because
there are several trees younger than 30 with a DBH greater than 80 cm,
but the oldest tree sampled was just 30 years old.  Extrapolation and
the interpretion of \beta_1 as the asymptotic DBH should be used with
caution depending on the presence of observations at large ages.  Half
of the species observed have an oldest tree of less than 55 years.
While our method improves upon existing methods, extrapolation to ages
great than those sampled should be done with caution.  To make better
predictions of diameter at large ages, older and larger trees are
needed.  Since finding large old trees in urban environments would
require more challenging work, one alternative could be to create
constraints on maximum DBH based on the largest individuals (called
champion trees) of the species found anywhere (not just in urban areas).

Extimates of uncertainty reveal where new observations are most
needed.  Sampling older trees would improve extrapolation to century
scales, new cities in warm and wet climates will improve extrapolation
to more regions across the country, sampling less common species will
improve estimates of how all (not just common) urban trees grow, and
repeated measures on individual tree would improve predictions for
trees that are already planted (not just those at age 0).

There are also a number of modeling extensions that could improve
either predictive performance or quantification of uncertainty.
Additional covariates at the level of individuals (e.g. location
relative to street, sidewalk, and utilities) and at the level of a
city or species could improve prediction.  The age of trees in the
dataset is actually highly uncertain.  The bayesian approach allows
the modeling of age as a random variable and including age as a part
of the posterior could give a more honest quantification of the
uncertainty in tree diameter growth.  Other dimensions of trees, such
as height and crown width could also be included in a multivariate
model.

** COMMENT comments

We have
modeling extensions
phylo distance
uncertainty in age
individual tree level covariates like utility poles, sidewalk etc
model more than just diameter, also height and crown.

new data:
more cities
less common species
older trees
management practices
within individuals


cite:peper_2001a - tested modified weibull following
cite:frelich_1992, but went with logarithm regression model because it
had the best in-sample fit.  We think weibull would have
the best out of sample fit.


age
#+begin_src R :exports none
d %>% group_by(Species) %>% summarize(maxAGE = max(AGE)) %>% pull(maxAGE) %>% summary()
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
:   23.00   43.75   55.00   68.04   94.00  350.00

several trees
- what is the distribution of maximum age by species?  many have very
  young
- or the distribution of apps max?
- We need to be able to predict to older ages if we want to make
  realistic predictions.


bayesian approach where age can be treated as a random variable.

make better
- more data, duh, perhaps used results to identify where to sample
- more cities, this is important for interpolation across climate
  space. Could allow for nonlinear relationships and for more variables.
- better climate predictors

- interactions between climate and species.
- use phylogenetic distance, gaussian process, instead of multiple
  levels of taxonomy.
- an easy one is to nest genus with tree functional type (broad leaf
  deciduous, evergreen conifer, etc.)
- extend species with species level predictors (leaf morphology, wood
  characteristics, shade tolerance, etc).

- smarter priors (e.g. max dbh based on champion trees?)  is this
  possible?  I think it would be a very neat extension, but need to
  think about how these champions are not urban trees most the time.
  They provide the upper limit on the asymptote, but for urban trees
  the asymptote could be quite lower.
- incorporate uncertainty in AGE
- There were only 4 trees in Queens NY sampled.
- repeat measures on the same individuals would help much.
- Get more trees in the database, UFIA effort?
- add varying intercept for location of tree in
  sidewalk/underpowerlines etc.
- There are some funny things with minneapolis data.  is it from the
  same individual for each species?
- challenges of separating \beta_1 and \beta_3 without old trees.
- urban trees don't live very long
- our sample of species is not representative.


this different?  Well the urban part, management practices like
topping, pollarding, pruning, drastically alter growth and tree
dimensions.  Others have discussed the difference between forest and
urban/open grown trees a fair bit.

because of the richness of the dataset, the geographic range of that
these equations can be applied to is larger than many other equations
which are usually for a particular speices in a particular region.

 Unlike many past studies we do
not have repeat measures on individual trees, but it would be
straightforward to incorporate such data in the model.

* Conclusion

We have demonstrated the usefulness of the bayesian multilevel
approach for urban tree diameter growth modeling.  We make more
biologically realistic estimates of growth than the existing approach
and we have improved predictions of older trees, and trees in cities
or species with little or no data.  Our model can be applied to trees
in cities across the US by adjusting growth parameters based on the
number of growing degree days and annual precipitation and uncertainty
is accounted for.  The use of =brms= as an interface to Stan makes
fitting the model relatively easy, however selecting appropriate
priors required considerable thinking to select biologically appropriate
values.  The model along with the data and relevant code are published
online and are available for scientists and managers to use as an
input into ecosystem services modeling.

* Bibliography                                                       :ignore:
bibliography:allo.bib
bibliographystyle:apa

* Figures and Tables
#+name: fig:City_Species_Ntrees
#+caption: Number of trees sampled of each species and city combination in the urban tree database.
#+attr_latex: :width 7in
[[../figs/CityScientificNameData_CityCentric_n_splits.png]]

#+name: fig:utd_climate
#+caption: 16 climate regions and 17 representative cities in the UTD citep:mcpherson_e_2016.
[[file:../figs/ClimateRegions_UTD.png]]

#+name: fig:utd_gdd_precip_space_map
#+caption: US census tract centroids with UTD reference cities overlaid in growing degree day (GDD) and precipitation climate space and matching color gradient in geographic space.  The reference cities cover climate space well, and variation in precipitation and growing degree days is continuous.
[[file:../figs/climate_space_wMap_labels.png]]

#+name: fig:main_effects_posterior
#+caption: Marginal posterior distributions of \beta^{(j)}_0
[[file:../figs/posterior_distributions_model_FullData_mainparameters.png]]

#+name: fig:climate_effects_posterior
#+caption: Marginal posterior distributions of \tau's
[[file:../figs/posterior_distributions_model_FullData_climate_effects.png]]

#+name: fig:sd_beta0_posterior
#+caption: Marginal posterior distributions of \sigma^{(0)}'s
[[file:../figs/posterior_distributions_model_FullData_sd_beta0.png]]

#+name: fig:sd_beta1_posterior
#+caption: Marginal posterior distributions of \sigma^{(1)}'s
[[file:../figs/posterior_distributions_model_FullData_sd_beta1.png]]

#+name: fig:sd_beta2_posterior
#+caption: Marginal posterior distributions of \sigma^{(2)}'s
[[file:../figs/posterior_distributions_model_FullData_sd_beta2.png]]

#+name: fig:sd_beta3_posterior
#+caption: Marginal posterior distributions of \sigma^{(3)}'s
[[file:../figs/posterior_distributions_model_FullData_sd_beta3.png]]

#+name: fig:shape_posterior
#+caption: Marginal posterior distributions of \alpha_y
[[file:../figs/posterior_distributions_model_FullData_shape.png]]

#+name: fig:marginal_effects_climate_25AGE_mean_labels
#+caption: Posterior median DBH at 25 years after planting.
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_directlabel.png]]

#+name: fig:marginal_effects_climate_25AGE_se_labels
#+caption: Posterior standard error of DBH at 25 years after planting.
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities_se.png]]

#+name: fig:acpl_predictions_dbh_bySpeciesCity_wData_wUTDpredictions_ACPL
#+caption: red points are observations, blue lines are predictions of the model and shading indicates 95% prediction interval, green lines show UTD equations
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_acpl.png]]

#+name: fig:predicting_ubobserved_groups
#+caption: Uncertainty in mean diameter growth increases for unsampled genera, species, and cities.  DBH estimate shown in black, 50% predictive interval in dark gray and 95% predictive interval in gray.
[[file:../figs/predicting_cities_notB1_unobserved_groups_FullData.png]]

#+name: tab:model_descriptions
#+caption: Model numbers, short descriptions, and brms formula syntax.  \beta^{(j)}'s are recoded as /bj/ for conciseness.
#+attr_latex: :align l{.5cm}ll :font \small
| Model | Description                                  | brms formula syntax                                             |
|-------+----------------------------------------------+-----------------------------------------------------------------|
|     1 | No varying parameters                        | DBH \sim b0 + b1 * (1 - exp(-b2 * AGE^b3))                      |
|       |                                              | b0 \sim 1                                                       |
|       |                                              | b1 \sim 1                                                       |
|       |                                              | b2 \sim 1                                                       |
|       |                                              | b3 \sim 1                                                       |
|-------+----------------------------------------------+-----------------------------------------------------------------|
|     2 | Parameters vary by city                      | DBH \sim b0 + b1 * (1 - exp(-b2 * AGE^b3))                      |
|       |                                              | b0 \sim (1 \vert City)                                          |
|       |                                              | b1 \sim (1 \vert City)                                          |
|       |                                              | b2 \sim (1 \vert City)                                          |
|       |                                              | b3 \sim (1 \vert City)                                          |
|-------+----------------------------------------------+-----------------------------------------------------------------|
|     3 | Parameters vary by genus and species         | DBH \sim b0 + b1 * (1 - exp(-b2 * AGE^b3))                      |
|       | Species is nested in genus                   | b0 \sim (1 \vert Genus / Species)                               |
|       |                                              | b1 \sim (1 \vert Genus / Species)                               |
|       |                                              | b2 \sim (1 \vert Genus / Species)                               |
|       |                                              | b3 \sim (1 \vert Genus / Species)                               |
|-------+----------------------------------------------+-----------------------------------------------------------------|
|     4 | Asymptote (\beta_1) varies by climate        | DBH \sim b0 + b1 * (1 - exp(-b2 * AGE^b3))                      |
|       |                                              | b0 \sim 1                                                       |
|       |                                              | b1 \sim gdd * precip                                            |
|       |                                              | b2 \sim 1                                                       |
|       |                                              | b3 \sim 1                                                       |
|-------+----------------------------------------------+-----------------------------------------------------------------|
|     5 | Growth rate (\beta_3) varies by climate      | DBH \sim b0 + b1 * (1 - exp(-b2 * AGE^b3))                      |
|       |                                              | b0 \sim 1                                                       |
|       |                                              | b1 \sim 1                                                       |
|       |                                              | b2 \sim 1                                                       |
|       |                                              | b3 \sim gdd * precip                                            |
|-------+----------------------------------------------+-----------------------------------------------------------------|
|     6 | Parameters vary by city, genus, and species  | DBH \sim b0 + b1 * (1 - exp(-b2 * AGE^b3))                      |
|       | (but asymptote does not vary by city).       | b0 \sim (1 \vert City) + (1 \vert Genus/Species)                |
|       | Growth rate varies by climate.               | b1 \sim (1 \vert Genus/Species)                                 |
|       |                                              | b2 \sim (1 \vert City) + (1 \vert Genus/Species)                |
|       |                                              | b3 \sim precip * gdd + (1 \vert City) + (1 \vert Genus/Species) |
|-------+----------------------------------------------+-----------------------------------------------------------------|
|     7 | Parameters vary by city, genus, and species. | DBH \sim b0 + b1 * (1 - exp(-b2 * AGE^b3))                      |
|       | Growth rate varies by climate.               | b0 \sim (1 \vert City) + (1 \vert Genus/Species)                |
|       |                                              | b1 \sim (1 \vert City) + (1 \vert Genus/Species)                |
|       |                                              | b2 \sim (1 \vert City) + (1 \vert Genus/Species)                |
|       |                                              | b3 \sim precip * gdd + (1 \vert City) + (1 \vert Genus/Species) |

#+name: tab:model_comparison
#+caption: \widehat{elpd}_{loo} is the estimated expected log pointwise predictive density. elpd_{diff} is the difference from the \widehat{elpd}_{loo} of the top model. See cite:vehtari_e_2017 for details of elpd_{loo}.
|       | Model | \widehat{elpd}_{loo} | elpd_{diff} |
|-------+-------+----------------------+-------------|
| Best  |     6 |            -18845.41 |        0.00 |
|       |     7 |            -18976.38 |     -130.97 |
|       |     3 |            -18989.24 |     -143.83 |
|       |     2 |            -19764.48 |     -919.06 |
|       |     5 |            -20180.41 |    -1334.99 |
|       |     4 |            -20195.21 |    -1349.80 |
| Worst |     1 |            -20513.12 |    -1667.70 |

* COMMENT supplemental figures
#+name: fig:ulam_predictions_dbh_bySpeciesCity_wData_wUTDpredictions_ULAM
#+caption: red points are observations, blue lines are predictions of the model and shading indicates 95% prediction interval, green lines show UTD equations
[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_focus_ulam.png]]

[[file:../figs/predictions_cities_notB1_dbh_bySpeciesCity_wData_wUTDpredictions_FullData.png]]

** fort collins versus cheyenne
[[file:../figs/ftcollins_cheyenne_ash.png]]

* COMMENT to address
- fitting multilevel models in the frequentist way (lme4) seems quite
  complex and is much over my head.  Talk to Jun about this concern.
- why model correlations of parameters within groups?



- an extension
  - model diameter increment, rather than diameter
  - for each increment, use that year's precip and gdd, rather than
    the climate normals.
  - Could core trees near uhi sensors and use the temp to predict
  - this type of modeling could allow for climate change/ uhi change predictions.

- move figures and tables to end
- put parentheses around the betas exponenents.
- description of stan
*  COMMENT Bibtex entries

#+BEGIN_SRC bibtex :tangle allo.bib
@article{lappi_bailey_1988,
author = {Lappi, Juha and Bailey, Robert L.},
title = {A Height Prediction Model with Random Stand and Tree Parameters: An Alternative to Traditional Site Index Methods},
journal = {Forest Science},
volume = {34},
number = {4},
pages = {907-927},
year = {1988},
doi = {10.1093/forestscience/34.4.907},
URL = {http://dx.doi.org/10.1093/forestscience/34.4.907},
eprint = {/oup/backfile/content_public/journal/forestscience/34/4/10.1093_forestscience_34.4.907/1/forestscience0907.pdf}
}



@article{carpenter_e_2017,
  author =       {Bob Carpenter and Andrew Gelman and Matthew
                  D. Hoffman and Daniel Lee and Ben Goodrich and
                  Michael Betancourt and Marcus Brubaker and Jiqiang
                  Guo and Peter Li and Allen Riddell},
  title =        {Stan: A Probabilistic Programming Language},
  journal =      {Journal of Statistical Software},
  volume =       76,
  number =       1,
  pages =        {nil},
  year =         2017,
  doi =          {10.18637/jss.v076.i01},
  url =          {https://doi.org/10.18637/jss.v076.i01},
  DATE_ADDED =   {Fri Oct 26 14:14:48 2018},
}




@article{buerkner_2017,
  author =       {Paul-Christian B{\"u}rkner},
  title =        {Brms: An R Package for Bayesian Multilevel Models
                  Using Stan},
  journal =      {Journal of Statistical Software},
  volume =       80,
  number =       1,
  pages =        {nil},
  year =         2017,
  doi =          {10.18637/jss.v080.i01},
  url =          {https://www.jstatsoft.org/article/view/v080i01},
  DATE_ADDED =   {Tue Jul 17 11:36:43 2018},
}



@misc{utd_2016,
  author={McPherson, E Gregory and van Doorn, Natalie S and Peper, Paula J},
  title = {Urban Tree Database},
  year = {2016},
  city = {Fort Collins, CO},
  institution = {Forest Service Research Data Archive},
  url = {https://doi.org/10.2737/RDS-2016-0005},
}



@misc{mcpherson_e_2016,
  title={Urban tree database and allometric equations},
  author={McPherson, E Gregory and van Doorn, Natalie S and Peper, Paula J},
  year=2016
}



@misc{frelich_1992,
  title={Predicting dimensional relationships for Twin Cities shade trees},
  author={Frelich, Lee E},
  year=1992,
  publisher={University of Minnesota, Department of Forest Resources St. Paul}
}



@article{mcpherson_simpson_99,
  title={Carbon dioxide reduction through urban forestry},
  author={McPherson, E Gregory and Simpson, James R},
  journal={Gen. Tech. Rep. PSW-171, USDA For. Serv., Pacific Southwest Research Station, Albany, CA},
  year={1999}
}



@article{peper_2001a,
  title={Equations for predicting diameter, height, crown width, and leaf area of San Joaquin Valley street trees},
  author={Peper, Paula J and McPherson, E Gregory and Mori, Sylvia M},
  journal={Journal of Arboriculture},
  volume=27,
  number=6,
  pages={306--317},
  year=2001,
  publisher={INTERNATIONAL SOCIETY OF ARBORICULTURE},
}



@article{peper_2001b,
  title={Predictive equations for dimensions and leaf area of coastal Southern California street trees},
  author={Peper, Paula J and McPherson, E Gregory and Mori, Sylvia M},
  journal={Journal of Arboriculture},
  volume=27,
  number=4,
  pages=169,
  year=2001,
  publisher={INTERNATIONAL SOCIETY OF ARBORICULTURE},
}



@Manual{r_lang,
  address =      {Vienna, Austria},
  author =       {{R Core Team}},
  organization = {R Foundation for Statistical Computing},
  title =        {R: A Language and Environment for Statistical
                  Computing},
  url =          {https://www.R-project.org/},
  year =         2016,
}



@article{hall_bailey_2001,
  title={Modeling and prediction of forest growth variables based on multilevel nonlinear mixed models},
  author={Hall, Daniel B and Bailey, Robert L},
  journal={Forest science},
  volume={47},
  number={3},
  pages={311--321},
  year={2001},
  publisher={Oxford University Press}
}




@article{nothdurft_e_2006,
  author =       {Arne Nothdurft and Edgar Kublin and Juha Lappi},
  title =        {A Non-Linear Hierarchical Mixed Model To Describe
                  Tree Height Growth},
  journal =      {European Journal of Forest Research},
  volume =       125,
  number =       3,
  pages =        {281-289},
  year =         2006,
  doi =          {10.1007/s10342-006-0118-6},
  url =          {https://doi.org/10.1007/s10342-006-0118-6},
  DATE_ADDED =   {Mon Aug 27 15:46:01 2018},
}



@article{li_e_2011,
  author =       {R. Li and B. Stewart and A. Weiskittel},
  title =        {A Bayesian Approach for Modelling Non-Linear
                  Longitudinal/hierarchical Data With Random Effects
                  in Forestry},
  journal =      {Forestry},
  volume =       85,
  number =       1,
  pages =        {17-25},
  year =         2011,
  doi =          {10.1093/forestry/cpr050},
  url =          {https://doi.org/10.1093/forestry/cpr050},
  DATE_ADDED =   {Wed Nov 7 14:10:40 2018},
}



@article{peper_e_2014,
  author =       {Paula J. Peper and Claudia P. Alzate and John
                  W. McNeil and Jalil Hashemi},
  title =        {Allometric Equations for Urban Ash Trees (Fraxinus
                  spp.) in Oakville, Southern Ontario, Canada},
  journal =      {Urban Forestry \& Urban Greening},
  volume =       13,
  number =       1,
  pages =        {175-183},
  year =         2014,
  doi =          {10.1016/j.ufug.2013.07.002},
  url =          {https://doi.org/10.1016/j.ufug.2013.07.002},
  DATE_ADDED =   {Wed Nov 7 11:40:24 2018},
}




@book{weiskittel_e_2011,
  author =       {Aaron R. Weiskittel and David W. Hann and John
                  A. Kershaw and Jerome K. Vanclay},
  title =        {Forest Growth and Yield Modeling},
  year =         2011,
  publisher =    {John Wiley \& Sons, Ltd},
  url =          {https://doi.org/10.1002/9781119998518},
  DATE_ADDED =   {Wed Apr 25 10:21:16 2018},
  doi =          {10.1002/9781119998518},
  pages =        {nil},
  series =       {[]},
}



@article{manso_e_2015,
  author =       {Rub{\'e}n Manso and Fran{\c{c}}ois Morneau and
                  Fran{\c{c}}ois Ningre and Mathieu Fortin},
  title =        {Effect of Climate and Intra- and Inter-Specific
                  Competition on Diameter Increment in Beech and Oak
                  Stands},
  journal =      {Forestry},
  volume =       88,
  number =       5,
  pages =        {540-551},
  year =         2015,
  doi =          {10.1093/forestry/cpv020},
  url =          {https://doi.org/10.1093/forestry/cpv020},
  DATE_ADDED =   {Wed Nov 7 14:15:45 2018},
}



@article{dietze_e_2008,
  author =       {Michael C. Dietze and Michael S. Wolosin and James
                  S. Clark},
  title =        {Capturing Diversity and Interspecific Variability in
                  Allometries: A Hierarchical Approach},
  journal =      {Forest Ecology and Management},
  volume =       256,
  number =       11,
  pages =        {1939-1948},
  year =         2008,
  doi =          {10.1016/j.foreco.2008.07.034},
  url =          {https://doi.org/10.1016/j.foreco.2008.07.034},
  DATE_ADDED =   {Wed Apr 25 16:05:22 2018},
}



@article{sirkia_e_2015,
  author =       {Seija Sirki{\"a} and Jaakko Heinonen and Jari Miina
                  and Kalle Eerik{\"a}inen},
  title =        {Subject-Specific Prediction Using a Nonlinear Mixed
                  Model: Consequences of Different Approaches},
  journal =      {Forest Science},
  volume =       61,
  number =       2,
  pages =        {205-212},
  year =         2015,
  doi =          {10.5849/forsci.13-142},
  url =          {https://doi.org/10.5849/forsci.13-142},
  DATE_ADDED =   {Wed Nov 7 14:25:32 2018},
}




@article{yang_e_2009,
  author =       {Yuqing Yang and Shongming Huang and Shawn X. Meng
                  and Guillermo Trincado and Curtis L. VanderSchaaf},
  title =        {A Multilevel Individual Tree Basal Area Increment
                  Model for Aspen in Boreal Mixedwood Stands},
  journal =      {Canadian Journal of Forest Research},
  volume =       39,
  number =       11,
  pages =        {2203-2214},
  year =         2009,
  doi =          {10.1139/x09-123},
  url =          {https://doi.org/10.1139/x09-123},
  DATE_ADDED =   {Mon Aug 27 15:42:21 2018},
}



@article{troxel_e_2013,
  title={Relationships between bole and crown size for young urban trees in the northeastern USA},
  author={Troxel, Blake and Piana, Max and Ashton, Mark S and Murphy-Dunning, Colleen},
  journal={Urban forestry \& urban greening},
  volume={12},
  number={2},
  pages={144--153},
  year={2013},
  publisher={Elsevier}
}



@article{vehtari_e_2017,
  author =       {Aki Vehtari and Andrew Gelman and Jonah Gabry},
  title =        {Practical Bayesian Model Evaluation Using
                  Leave-One-Out Cross-Validation and Waic},
  journal =      {Statistics and Computing},
  volume =       27,
  number =       5,
  pages =        {1413-1432},
  year =         2017,
  doi =          {10.1007/s11222-016-9696-4},
  url =          {https://doi.org/10.1007/s11222-016-9696-4},
  DATE_ADDED =   {Tue Oct 30 14:49:26 2018},
}




@article{garcia_2005,
  title={Unifying sigmoid univariate growth equations},
  author={Garcia, OSCAR},
  journal={Forest biometry, modelling and information sciences},
  volume={1},
  pages={63--68},
  year={2005}
}



@article{garcia_2005,
  title={Unifying sigmoid univariate growth equations},
  author={Garcia, OSCAR},
  journal={Forest biometry, modelling and information sciences},
  volume={1},
  pages={63--68},
  year={2005}
}



@article{zeide_2004,
  author =       {Boris Zeide},
  title =        {Intrinsic Units in Growth Modeling},
  journal =      {Ecological Modelling},
  volume =       175,
  number =       3,
  pages =        {249-259},
  year =         2004,
  doi =          {10.1016/j.ecolmodel.2003.10.017},
  url =          {https://doi.org/10.1016/j.ecolmodel.2003.10.017},
  DATE_ADDED =   {Thu May 17 21:33:42 2018},
}



#+END_SRC
