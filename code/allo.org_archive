#    -*- mode: org -*-


Archived entries from file /Users/erker/git/allo/code/allo.org


* some old modelling ideas.
  :PROPERTIES:
  :ARCHIVE_TIME: 2018-07-17 Tue 10:26
  :ARCHIVE_FILE: ~/git/allo/code/allo.org
  :ARCHIVE_OLPATH: Methods/Data
  :ARCHIVE_CATEGORY: allo
  :ARCHIVE_ITAGS: work allo
  :END:
test different functions:
1) linear; y = a + bx
2) quadratic; y = a + bx + cx^2
3) log-log; log(y) = log(a + bx)

Allow none, some, or all of the parameters of these functions to vary
by species and with climate.  Use AIC to select the best model.

Palms are so different, it doesn't make much sense to pool them with
the other species.

model form:
cite:Weiskittel_ForestGrowthAndYieldModeling:
"This reality should lead to model forms that are complex enough to
accurately and adequately characterize the expected major behaviors of
the population, but simple enough to avoid being overly influenced by
the sampleâ€™s peculiarities."

see notes on bayesian approach in cite:Weiskittel_ForestGrowthAndYieldModeling

** priors

think about looking at champion tree datasets to get maximum sizes.

** COMMENT monotonic quadratic
https://stats.stackexchange.com/questions/197509/how-to-smooth-data-and-force-monotonicity

I wonder if I could find a way to do this for a multilevel model.
biometry project implementing this monotonic constraint in stan?


* constrain -b/2a >= max(x) in quadratic model
:PROPERTIES:
:ARCHIVE_TIME: 2018-07-30 Mon 16:29
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
#+begin_src R
  acpl = readRDS("data/ACPL.rds") %>%
    select(-Leaf, -AGE, -SpCode, -TreeID) %>%
    mutate(Age2 = Age^2)
#+end_src

#+RESULTS:

** just TpIntW
*** unconstrained
#+begin_src R
  a <- filter(acpl, Region == "TpIntW") %>%
      arrange(Age) %>%
      .[seq(10,60,10),]


#+end_src

#+RESULTS:
: Error in filter(acpl, Region == "TpIntW") %>% arrange(Age) %>% .[seq(10,  :
:   could not find function "%>%"

#+begin_src R
m <- lm(DBH ~ Age + Age2 - 1, data = a)
unconstrained_model <- m
#+end_src

#+RESULTS:

#+begin_src R
  pdf <- data.frame(Age = seq(0,105, 5)) %>%
      mutate(Age2 = Age^2)

pdf$DBH <- predict(m, pdf)

#+end_src

#+RESULTS:


#+begin_src R
    y <- c(15, 34.5, 39.6, 51.6, 91.7, 73.7)
    x <- c(10L, 20L, 25L, 40L, 75L, 100L)

  a <- data.frame(y = y, x = x)

    m <- lm(y ~ x + I(x^2) - 1)

    p <- data.frame(x = seq(0,105, 5))

    p$y <- predict(m, p)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/acpl_tpintw_quadfit_nodash.pdf :height 3 :width 3
theme_set(theme_classic(base_size = 16))
ggplot(a, aes(x = x, y = y))  +
geom_point() +
geom_line(data = p) +
ggtitle("unconstrained fit")
#+end_src

#+RESULTS:
[[file:../figs/acpl_tpintw_quadfit_nodash.pdf]]

The predictions decrease at the high end, which cannot be correct.
Trying to constrain the curve so that it cannot decrease within the
range of the data.

\[
DBH = a(Age)^2 + b(Age)


\[
DBH = a(Age)^2 + b(Age)
\]

\[
y = ax^2 + bx + \epsilon
\]

\[
\epsilon \sim N(0,\sigma^2)
\]


\[
2ax + b > 0
\]
*** constrained
https://stats.stackexchange.com/questions/220614/linear-regression-polynomial-slope-constraint-in-r?rq=1
y = ax^2 + bx

The positive part of the curve.
2ax + b > 0
b > 0 also


max(x) > -b/2a


#+begin_src R
maxage <- 105
unconstrained_model <- m
#+end_src

#+RESULTS:

#+begin_src R
  library(limSolve)

  A <- matrix(ncol = 2, c(x, x^2))
  B <- y
  G <- matrix(nrow = 1, ncol = 2, byrow = T, data = c(1,200))
  H <- c(0)

  constrained_model <- lsei(A = A,B = B, G = G, H = H, type = 2)

      my_predict <- function(x,coefficients){
      X <- cbind(x,x^2)
      predictions <- X%*%coefficients
      }

      # compute predictions
      xpred <- seq(0,105,5)
      predictions_constrained <- my_predict(xpred,constrained_model$X)
  df2 <- data.frame(xpred,predictions_constrained)
#+end_src

#+RESULTS:

#+begin_src R :eval no
  zhiwei.coef <- c(1.7, -0.0085)
  predictions_constrained <- my_predict(xpred,zhiwei.coef)
    df2 <- data.frame(xpred, predictions_constrained)
#+end_src

#+RESULTS:

#+begin_src R
(200* constrained_model$X[2]) + constrained_model$X[1]
-constrained_model$X[1] / (2* constrained_model$X[2])
#+end_src

#+RESULTS:
: [1] 0
: [1] 100

#+begin_src R :exports results :results graphics :file figs/constrained_quad.pdf :height 3 :width 3
theme_set(theme_classic(base_size = 12))
  ggplot(a, aes(x = x, y = y))  +
  geom_point() +
  geom_line(data = df2, aes(x = xpred, y = predictions_constrained)) +
ggtitle("constrained")
#+end_src

#+RESULTS:
[[file:../figs/constrained_quad.pdf]]

pcls
#+begin_src R
x <-
#+end_src

https://stats.stackexchange.com/questions/220614/linear-regression-polynomial-slope-constraint-in-r?rq=1
#+begin_src R
  x <- c(0.01041667, 0.30208333, 0.61458333, 0.65625000, 0.83333333)
  y <- c(772, 607, 576, 567, 550)

  unconstrained_model <- lm(y ~ x + I(x^2) +I(x^3))

  df <- data.frame(x,y)
  library(ggplot2)
  (p <- ggplot(data=df,aes(x=x,y=y)) + geom_line()+geom_point()+geom_smooth())


  library(limSolve)
  A <- cbind(rep(1,length(x)),x,x^2,x^3)
  b <- y
  G <- matrix(nrow=3,ncol=4,byrow = TRUE,data = c(0, -1,-2,-3,0,-1,-2,0,0,-1,0,0))
  h <- rep(0,3)
  constrained_model <- lsei(A = A, B = b, G = G, H = h, type=2)


  my_predict <- function(x,coefficients){
  X <- cbind(rep(1,length(x)),x,x^2,x^3)
  predictions <- X%*%coefficients
  }
                                          # compute predictions
  xpred <- seq(0,1,len=100)
  predictions_constrained <- my_predict(xpred,constrained_model$X)
  predictions_unconstrained <-    my_predict(xpred,unconstrained_model$coefficients)
  df2 <- data.frame(xpred,predictions_unconstrained,predictions_constrained)

  # plot results
  p <- ggplot(data = df,aes(x = x, y = y,color = "data")) +
  geom_point() +
  geom_line(data = df2, aes(x = xpred, y = predictions_unconstrained, color = "unconstrained fit")) +
  geom_line(data = df2, aes(x = xpred, y = predictions_constrained, color = "constrained fit"))
  p

#+end_src

#+RESULTS:

*** so question
There are many questions on this site about restricted or constrained regression parameters.
https://stats.stackexchange.com/questions/206058/regularized-linear-regression-with-specific-parameter-constraints-in-r, https://stats.stackexchange.com/questions/61733/linear-regression-with-slope-constraint, https://stats.stackexchange.com/questions/228750/1d-linear-regression-with-inequality-constraint, https://stats.stackexchange.com/questions/32641/is-there-an-r-package-for-constrained-regression-that-has-both-a-formula-and-pre, https://stats.stackexchange.com/questions/172748/sparse-coding-with-constraints-in-the-optimization, https://stats.stackexchange.com/questions/123930/linear-regression-with-an-inequality-constraint, https://math.stackexchange.com/questions/60610/polynomial-fitting-where-polynomial-must-be-monotonically-increasing, and more I'm sure.

I've read these and am trying to fit a quadratic relationship that is constrained to be monotonic increasing over the range of my data:

$$y = ax^2 + bx + \epsilon$$   (the $c$ term is zero, $\epsilon$ ~ iid
$N(0,\sigma)$)

To constrain $f(x)$ to be increasing over all values of $x$:
$2ax + b > 0$

Sadly I am not having success implementing this, so this may be more of a "what am I doing wrong question".  My apologies if that's not appropriate here.

Here is the data and the unconstrained fit.  I'm following the approach from this question: https://stats.stackexchange.com/questions/220614/linear-regression-polynomial-slope-constraint-in-r

    y <- c(15, 34.5, 39.6, 51.6, 91.7, 73.7)
    x <- c(10L, 20L, 25L, 40L, 75L, 100L)

    a <- data.frame(y = y, x = x)

    m <- lm(y ~ x + I(x^2) - 1)

    p <- data.frame(x = seq(0,105, 5))

    p$y <- predict(m, p)

    library(ggplot2)
    theme_set(theme_classic(base_size = 24))
    ggplot(a, aes(x = x, y = y))  +
    geom_point() +
    geom_line(data = p)

[![enter image description here][1]][1]

Now trying to fit the curve with inequality constraint.

    library(limSolve)
    A <- matrix(ncol = 2, c(x, x^2))
    B <- y
    G <- matrix(nrow = 1, ncol = 2, byrow = T, data = c(1,2)) # corresponding to 2ax + b
    H <- c(0)

    constrained_model <- lsei(A = A,B = B, G = G, H = H, type = 2)

    my_predict <- function(x,coefficients){
        X <- cbind(x,x^2)
        predictions <- X%*%coefficients
    }

     # compute predictions
     xpred <- seq(0,105,5)
     predictions_constrained <- my_predict(xpred,constrained_model$X)
     df2 <- data.frame(xpred,predictions_constrained)


    ggplot(a, aes(x = x, y = y))  +
      geom_point() +
      geom_line(data = df2, aes(x = xpred, y = predictions_constrained)) +
      ggtitle("constrained fit")

[![enter image description here][2]][2]

As the figure shows, the constraint is having no effect.

Am I not entering the constraint correctly?  Do I have the wrong constraint?

I know there are other packages like mgcv to fit monotonic increasing curves, maybe that would be a better choice?  I'd like to stick with the simple quadratic relationship.

Update: A friend fit this curve in Julia using the same constraints and got a proper curve.  b = 1.7, a = -0.0085.  Here's the curve with those values.  As you can see the function is increasing over the range of x, as desired.
[![proper][3]][3]


  [1]: https://i.stack.imgur.com/IlLJB.png
  [2]: https://i.stack.imgur.com/SBXV0.png
  [3]: https://i.stack.imgur.com/Kq3bK.png


* Full model
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-03 Fri 15:39
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

\[
DBH \sim N(\beta_0 * (1 - \exp(-\beta_1 * AGE ^ {\beta_2})), \sigma)

#\b_0, \b

\]

species within genus within ...


* fit model to real data
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-17 Fri 14:55
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling/genus: none;  species: single; cities: single; climate: none; hetero: no
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

#+begin_src R
d <- readRDS("../data/tidy_age_dbh.rds")
fram <- filter(d, SpCode == "FRAM")
fram_ftcollins <- filter(d, SpCode == "FRAM", City == "Fort Collins, CO")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/fram_age_dbh.png
ggplot(fram, aes(x = AGE, y = DBH,color = City)) + geom_point() + facet_wrap(~City)
#+end_src

#+RESULTS:
[[file:../figs/fram_age_dbh.png]]

I divide b0 by 100 and multiply b1 by 100 to get the parameters on the same scale ish, with
the hopes that this speeds things up a bit.


#+begin_src R
              form <- bf(DBH ~ (b0*100) * (1 - exp(-(b1/100) * AGE ^ b2)),
                         b0 ~ 1,
                         b1 ~ 1,
                         b2 ~ 1,
                         nl = T)

       nlprior <- c(prior(gamma(1, 2), nlpar = "b0", lb = 0),
                    prior(gamma(1, 2), nlpar = "b1", lb = 0),
                    prior(gamma(1, 2), nlpar = "b2", lb = 0))


       model_fram_ftcollins_homo <- brm(form, chains = 4, cores = 2, data = fram_ftcollins,
  #                                     init_r = 1,
                                       prior = nlprior,  control = list(adapt_delta = 0.8))
#+end_src

#+RESULTS:
#+begin_example
Compiling the C++ model
Start sampling

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 1).

Gradient evaluation took 0.000362 seconds
1000 transitions using 10 leapfrog steps per transition would take 3.62 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 2).

Gradient evaluation took 0.000308 seconds
1000 transitions using 10 leapfrog steps per transition would take 3.08 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 9.83651 seconds (Warm-up)
               10.6709 seconds (Sampling)
               20.5074 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 10.1129 seconds (Warm-up)
               9.95994 seconds (Sampling)
               20.0729 seconds (Total)


SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 3).

Gradient evaluation took 0.000924 seconds
1000 transitions using 10 leapfrog steps per transition would take 9.24 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 4).

Gradient evaluation took 0.000323 seconds
1000 transitions using 10 leapfrog steps per transition would take 3.23 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 10.9297 seconds (Warm-up)
               10.449 seconds (Sampling)
               21.3787 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 10.341 seconds (Warm-up)
               10.9421 seconds (Sampling)
               21.2831 seconds (Total)
#+end_example


* look at duplicates
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-20 Mon 11:36
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Data/tidy data, age and dbh
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
#+begin_src R
d <- readRDS("../data/age_dbh_testing.rds")
dupID <- d$TreeID[duplicated(interaction(d$TreeID, d$City))]
dups <- d %>% filter(TreeID %in% dupID)
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/duplicates.png
  ggplot(dups, aes( x = AGE, y = DBH, color = factor(TreeID))) + geom_point() +
    facet_wrap(~City)
#+end_src

#+RESULTS:
[[file:../figs/duplicates.png]]


* genus: none;  species: single; cities: single; climate: none; hetero: smooth3
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_smooth3.R
:ARCHIVE_TIME: 2018-08-30 Thu 18:43
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "smooth3"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 4, cores = 4, data = d, init_r = .3, prior = nlprior, iter = 2000)

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_smooth3.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: Permission denied, please try again.
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth3.R
:
: sent 663 bytes  received 42 bytes  128.18 bytes/sec
: total size is 1146  speedup is 1.63

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_smooth3.R &
  exit
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results raw
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth3.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
erker@krusty's password:
receiving file list ... done
genus_none_species_single_cities_single_climate_none_hetero_smooth3.rds

sent 21302 bytes  received 12404826 bytes  1911712.00 bytes/sec
total size is 12505253  speedup is 1.01
erker@krusty's password:
receiving file list ... done
genus_none_species_single_cities_single_climate_none_hetero_smooth3.rds

sent 38 bytes  received 12405422 bytes  1305837.89 bytes/sec
total size is 12501434  speedup is 1.01
erker@krusty's password:
receiving file list ... done

sent 16 bytes  received 145 bytes  46.00 bytes/sec
total size is 12029334  speedup is 74716.36
You have new mail in /var/mail/erker
erker@krusty's password:
receiving file list ... done
genus_none_species_single_cities_single_climate_none_hetero_no.rds

sent 20666 bytes  received 11936322 bytes  2173997.82 bytes/sec
total size is 12029334  speedup is 1.01

** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth3.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         sigma ~ s(AGE, k = 3)
   Data: d (Number of observations: 2272)
Samples: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 4000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)    14.81      8.72     3.84    34.54        193 1.03

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.45      0.02     2.42     2.48       1573 1.00
b0_Intercept        1.11      0.06     1.01     1.24       1208 1.00
b1_Intercept        1.65      0.08     1.50     1.81       1470 1.00
b2_Intercept        1.03      0.02     0.98     1.07       1063 1.01
sigma_sAGE_1       -0.21      0.02    -0.24    -0.17       1881 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 346 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_smooth3s_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png
  marginal_smooths(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooth3s_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth3.png]]


* genus: none;  species: single; cities: single; climate: none; hetero: smooth5
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_smooth5.R
:ARCHIVE_TIME: 2018-08-30 Thu 18:43
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "smooth5"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 4, cores = 4, data = d, init_r = .3, prior = nlprior, iter = 2000)

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_smooth5.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth5.R
:
: sent 182 bytes  received 54 bytes  67.43 bytes/sec
: total size is 1146  speedup is 4.86

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_smooth5.R &
  exit
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth5.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth5.rds
:
: sent 21398 bytes  received 12530484 bytes  2282160.36 bytes/sec
: total size is 12627223  speedup is 1.01


** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth5.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         sigma ~ s(AGE, k = 5)
   Data: d (Number of observations: 2272)
Samples: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 4000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     6.78      4.06     2.37    16.74         16 1.32

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.43      0.01     2.40     2.46        157 1.03
b0_Intercept        1.23      0.08     1.09     1.41        110 1.03
b1_Intercept        1.58      0.07     1.45     1.72        788 1.02
b2_Intercept        1.00      0.02     0.96     1.05        217 1.02
sigma_sAGE_1        0.76      0.11     0.59     0.99         50 1.08

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 301 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_smooth5s_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png
  marginal_smooths(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooth5s_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png
  pp_check(mod) +xlim(c(-20,130))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth5.png]]


* genus: none;  species: single; cities: single; climate: none; hetero: smooth7
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_smooth7.R
:ARCHIVE_TIME: 2018-08-30 Thu 18:43
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "smooth7"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 4, cores = 4, data = d, init_r = .3, prior = nlprior, iter = 2000)

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_smooth7.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth7.R
:
: sent 663 bytes  received 42 bytes  201.43 bytes/sec
: total size is 1146  speedup is 1.63

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_smooth7.R &
  exit
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth7.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth7.rds
:
: sent 21476 bytes  received 12656193 bytes  2305030.73 bytes/sec
: total size is 12752049  speedup is 1.01


** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth7.rds")
mod7 <- mod
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         sigma ~ s(AGE, k = 7)
   Data: d (Number of observations: 2272)
Samples: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 4000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     4.83      2.03     2.19    10.23        743 1.00

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.42      0.02     2.39     2.45       3588 1.00
b0_Intercept        1.27      0.09     1.12     1.48       1748 1.00
b1_Intercept        1.56      0.08     1.40     1.71       2287 1.00
b2_Intercept        0.99      0.02     0.95     1.03       2232 1.00
sigma_sAGE_1        1.09      0.22     0.69     1.55       1683 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 36 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_smooth7s_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png
  marginal_smooths(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooth7s_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth7.png]]


* genus: none;  species: single; cities: single; climate: none; hetero: smooth8
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_smooth8.R
:ARCHIVE_TIME: 2018-08-30 Thu 18:43
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "smooth8"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 4, cores = 4, data = d, init_r = .3, prior = nlprior, iter = 2000)

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_smooth8.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth8.R
:
: sent 663 bytes  received 42 bytes  282.00 bytes/sec
: total size is 1146  speedup is 1.63

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_smooth8.R &
  exit
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth8.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth8.rds
:
: sent 38 bytes  received 12708937 bytes  2824216.67 bytes/sec
: total size is 12810335  speedup is 1.01
: You have new mail in /var/mail/erker


** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth8.rds")
mod8 <- mod
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         sigma ~ s(AGE, k = 8)
   Data: d (Number of observations: 3403)
Samples: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 4000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     3.48      1.38     1.74     7.22        741 1.01

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.41      0.01     2.38     2.43       3127 1.00
b0_Intercept        1.40      0.09     1.24     1.60       2023 1.00
b1_Intercept        1.50      0.07     1.36     1.63       2448 1.00
b2_Intercept        0.97      0.02     0.94     1.01       2392 1.00
sigma_sAGE_1        1.65      0.29     1.11     2.23       1588 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 29 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_smooth8s_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png
  marginal_smooths(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooth8s_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth8.png]]


* genus: many;  species: many; cities: many; climate: none; hetero: smooth
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_none_hetero_smooth.R
:ARCHIVE_TIME: 2018-08-30 Thu 21:07
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "none"
  hetero <- "smooth"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 4, cores = 4, data = d, init_r = .3, prior = nlprior, iter = 2000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

#+RESULTS:
: Error: The following priors do not correspond to any model parameter:
: sds_sigma ~ normal(1, 0.3)
: Intercept_sigma ~ normal(0, 1)
: Function 'get_prior' might be helpful to you.

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_none_hetero_smooth.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_none_hetero_smooth.R
:
: sent 658 bytes  received 42 bytes  280.00 bytes/sec
: total size is 1140  speedup is 1.63

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_none_hetero_smooth.R &
  exit
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results raw
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_none_hetero_smooth.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
erker@krusty's password:
receiving file list ... done
genus_many_species_many_cities_many_climate_none_hetero_smooth.rds

sent 38 bytes  received 19807824 bytes  1886463.05 bytes/sec
total size is 19967158  speedup is 1.01
erker@krusty's password:
receiving file list ... done
genus_many_species_many_cities_many_climate_none_hetero_smooth.rds

sent 20666 bytes  received 11936322 bytes  2173997.82 bytes/sec
total size is 12029334  speedup is 1.01

** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_none_hetero_smooth.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_none_hetero_smooth.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_none_hetero_smooth.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 2272)
Samples: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 4000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     1.30      0.23     0.85     1.76       4000 1.00

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.69      0.23     0.34     1.23         11 1.09
sd(b1_Intercept)     0.26      0.08     0.15     0.46         25 1.04
sd(b2_Intercept)     0.13      0.04     0.07     0.21         12 1.08

~Genus (Number of levels: 6)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.15      0.16     0.00     0.60       1590 1.00
sd(b1_Intercept)     0.11      0.09     0.00     0.35        610 1.01
sd(b2_Intercept)     0.07      0.04     0.01     0.17        120 1.02

~Genus:Species (Number of levels: 10)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.55      0.21     0.27     1.03       2462 1.00
sd(b1_Intercept)     0.20      0.09     0.06     0.40         40 1.03
sd(b2_Intercept)     0.04      0.03     0.00     0.11         41 1.03

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.07      0.02     2.04     2.11       4000 1.01
b0_Intercept        2.13      0.35     1.45     2.86        619 1.01
b1_Intercept        0.92      0.14     0.67     1.21        203 1.02
b2_Intercept        1.00      0.06     0.89     1.11       2305 1.00
sigma_sAGE_1        1.00      0.18     0.65     1.36       4000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 16 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_none_hetero_smooth.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_none_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_many_species_many_cities_many_climate_none_hetero_smooth.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_many_species_many_cities_many_climate_none_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_smooths_genus_many_species_many_cities_many_climate_none_hetero_smooth.png
  marginal_smooths(mod, spaghetti = T, nsamples = 100)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooths_genus_many_species_many_cities_many_climate_none_hetero_smooth.png]]



#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no.png :width 800
  cond <- data.frame(Species = unique(mod$data$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL, method = "predict")

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpeciesCity_none_species_many_cities_single_climate_none_hetero_no_predict.png :width 1000 :height 1000
#  cond <- expand.grid(Species = unique(mod$data$Species), City = unique(mod$data$City))
  cond <- unique(select(mod$data, Genus, Species, City))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL, method = "predict")

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3) +
      facet_grid(City~Species)
#+end_src




[[file:../figs/marginal_effects_BySpeciesCity_none_species_many_cities_single_climate_none_hetero_no.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_none_hetero_smooth.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_none_hetero_smooth.png]]


* genus: many;  species: many; cities: many; climate: none; hetero: linear
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_none_hetero_linear.R
:ARCHIVE_TIME: 2018-08-30 Thu 21:07
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "none"
  hetero <- "linear"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 4, cores = 4, data = d, init_r = .3, prior = nlprior, iter = 2000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

#+RESULTS:
: Error: The following priors do not correspond to any model parameter:
: sds_sigma ~ normal(1, 0.3)
: Intercept_sigma ~ normal(0, 1)
: Function 'get_prior' might be helpful to you.

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_none_hetero_linear.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_none_hetero_linear.R
:
: sent 657 bytes  received 42 bytes  199.71 bytes/sec
: total size is 1140  speedup is 1.63
: You have new mail in /var/mail/erker

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_none_hetero_linear.R &
  exit
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results raw
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_none_hetero_linear.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
erker@krusty's password:
receiving file list ... done
genus_many_species_many_cities_many_climate_none_hetero_linear.rds

sent 38 bytes  received 19807824 bytes  1886463.05 bytes/sec
total size is 19967158  speedup is 1.01
erker@krusty's password:
receiving file list ... done
genus_many_species_many_cities_many_climate_none_hetero_linear.rds

sent 20666 bytes  received 11936322 bytes  2173997.82 bytes/sec
total size is 12029334  speedup is 1.01

** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_none_hetero_linear.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_none_hetero_linear.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_none_hetero_linear.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 2272)
Samples: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 4000

Linear Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     1.30      0.23     0.85     1.76       4000 1.00

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.69      0.23     0.34     1.23         11 1.09
sd(b1_Intercept)     0.26      0.08     0.15     0.46         25 1.04
sd(b2_Intercept)     0.13      0.04     0.07     0.21         12 1.08

~Genus (Number of levels: 6)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.15      0.16     0.00     0.60       1590 1.00
sd(b1_Intercept)     0.11      0.09     0.00     0.35        610 1.01
sd(b2_Intercept)     0.07      0.04     0.01     0.17        120 1.02

~Genus:Species (Number of levels: 10)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.55      0.21     0.27     1.03       2462 1.00
sd(b1_Intercept)     0.20      0.09     0.06     0.40         40 1.03
sd(b2_Intercept)     0.04      0.03     0.00     0.11         41 1.03

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.07      0.02     2.04     2.11       4000 1.01
b0_Intercept        2.13      0.35     1.45     2.86        619 1.01
b1_Intercept        0.92      0.14     0.67     1.21        203 1.02
b2_Intercept        1.00      0.06     0.89     1.11       2305 1.00
sigma_sAGE_1        1.00      0.18     0.65     1.36       4000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 16 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_none_hetero_linear.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_none_hetero_linear.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_many_species_many_cities_many_climate_none_hetero_linear.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_many_species_many_cities_many_climate_none_hetero_linear.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_linears_genus_many_species_many_cities_many_climate_none_hetero_linear.png
  marginal_linears(mod, spaghetti = T, nsamples = 100)
#+end_src

#+RESULTS:
[[file:../figs/marginal_linears_genus_many_species_many_cities_many_climate_none_hetero_linear.png]]



#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no.png :width 800
  cond <- data.frame(Species = unique(mod$data$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL, method = "predict")

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpeciesCity_none_species_many_cities_single_climate_none_hetero_no_predict.png :width 1000 :height 1000
#  cond <- expand.grid(Species = unique(mod$data$Species), City = unique(mod$data$City))
  cond <- unique(select(mod$data, Genus, Species, City))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL, method = "predict")

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3) +
      facet_grid(City~Species)
#+end_src




[[file:../figs/marginal_effects_BySpeciesCity_none_species_many_cities_single_climate_none_hetero_no.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_none_hetero_linear.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_none_hetero_linear.png]]



* FULL DATA genus: many;  species: many; cities: many; climate: b0; hetero: smooth
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.R
:ARCHIVE_TIME: 2018-08-30 Thu 21:08
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b0"
  hetero <- "smooth"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_full.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 12000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

#+RESULTS:

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.R
:
: sent 664 bytes  received 42 bytes  282.40 bytes/sec
: total size is 1136  speedup is 1.61

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.R &
  exit
#+END_SRC

** pull back from krusty


#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.rds ~/git/allo/models/
#+END_SRC


** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ t2(Precip, HDD) + (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 3403)
Samples: 6 chains, each with iter = 8000; warmup = 4000; thin = 1;
         total post-warmup samples = 24000

Smooth_fulldata Terms:
                      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(b0_t2PrecipHDD_1)     0.36      0.20     0.03     0.79      24000 1.00
sds(b0_t2PrecipHDD_2)     0.40      0.24     0.03     0.90         24 1.15
sds(b0_t2PrecipHDD_3)     0.36      0.20     0.03     0.80      24000 1.00
sds(sigma_sAGE_1)         1.30      0.21     0.93     1.74        158 1.03

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     1.24      0.47     0.16     2.24         46 1.14
sd(b1_Intercept)     0.31      0.08     0.19     0.49       8936 1.00
sd(b2_Intercept)     0.14      0.03     0.09     0.22         75 1.03

~Genus (Number of levels: 8)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.11      0.11     0.00     0.40        117 1.04
sd(b1_Intercept)     0.07      0.06     0.00     0.23         72 1.07
sd(b2_Intercept)     0.03      0.03     0.00     0.09        107 1.06

~Genus:Species (Number of levels: 16)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.36      0.10     0.21     0.60       2877 1.01
sd(b1_Intercept)     0.17      0.05     0.09     0.29       6972 1.00
sd(b2_Intercept)     0.05      0.02     0.02     0.09        871 1.01

Population-Level Effects:
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept      2.11      0.01     2.09     2.14         48 1.12
b0_Intercept         1.67      0.38     0.92     2.35         12 1.15
b0_t2PrecipHDD_1     0.58      0.21     0.25     1.07        825 1.01
b0_t2PrecipHDD_2     0.54      0.19     0.23     0.99        554 1.01
b0_t2PrecipHDD_3     0.47      0.17     0.19     0.89       2772 1.00
b1_Intercept         0.96      0.11     0.75     1.20        101 1.03
b2_Intercept         0.99      0.05     0.89     1.08        109 1.05
sigma_sAGE_1         1.11      0.16     0.79     1.45      11714 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 2511 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b0_hetero_smooth_fulldata.png]]


* FULL DATA genus: many;  species: many; cities: many; climate: b0linint; hetero: linear
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b0linint_hetero_linear_fulldata.R
:ARCHIVE_TIME: 2018-08-30 Thu 21:08
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b0linint"
  hetero <- "linear"
niter <- 10000
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_full.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = niter)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_niter_",niter,"_fulldata.rds"))
#+end_src

#+RESULTS:

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b0linint_hetero_linear_fulldata.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b0linint_hetero_linear_fulldata.R
:
: sent 687 bytes  received 42 bytes  291.60 bytes/sec
: total size is 1190  speedup is 1.63
: You have new mail in /var/mail/erker

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b0linint_hetero_linear_fulldata.R &
  exit
#+END_SRC

** pull back from krusty


#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b0linint_hetero_linear_niter_10000_fulldata.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b0linint_hetero_linear.rds
:
: sent 38 bytes  received 21077175 bytes  1204412.17 bytes/sec
: total size is 21230471  speedup is 1.01
: You have new mail in /var/mail/erker

** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b0linint_hetero_linear.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ Precip * GDD + (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ AGE - 1
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 3000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.48      0.20     0.21     0.93          6 1.37
sd(b1_Intercept)     0.33      0.10     0.18     0.55         17 1.13
sd(b2_Intercept)     0.10      0.02     0.07     0.15        737 1.01

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     3.48      1.42     1.68     6.98         11 1.23
sd(b1_Intercept)     0.20      0.11     0.02     0.46         15 1.14
sd(b2_Intercept)     0.11      0.03     0.04     0.18         61 1.05

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.36      0.23     0.13     0.94          5 1.53
sd(b1_Intercept)     0.17      0.13     0.02     0.44          4 1.88
sd(b2_Intercept)     0.06      0.03     0.02     0.13         12 1.16

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      1.87      0.61     0.79     3.12         22 1.11
b0_Precip         0.98      0.47     0.33     1.96          5 1.61
b0_GDD            0.65      0.19     0.36     1.06          6 1.45
b0_Precip:GDD     0.98      0.31     0.49     1.68          7 1.29
b1_Intercept      0.97      0.17     0.68     1.33         26 1.11
b2_Intercept      0.86      0.04     0.77     0.95        273 1.01
sigma_AGE         0.08      0.00     0.08     0.08       1032 1.01

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 51 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEGDD_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  marginal_effects(mod, effects = "AGE:GDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEGDD_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipGDD_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  marginal_effects(mod, effects = "Precip:GDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipGDD_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png :width 800 :height 800
  cond <- unique(select(mod$data, Genus, Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 4)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  pp_check(mod) + xlim(c(-20,150))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]





* genus: many;  species: many; cities: many; climate: b0linint; hetero: linear
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b0linint_hetero_linear.R
:ARCHIVE_TIME: 2018-08-30 Thu 21:08
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b0linint"
  hetero <- "linear"
niter <- 10000
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = niter)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_niter_",niter,".rds"))
#+end_src

#+RESULTS:

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b0linint_hetero_linear.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b0linint_hetero_linear.R
:
: sent 181 bytes  received 54 bytes  67.14 bytes/sec
: total size is 1184  speedup is 5.04

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b0linint_hetero_linear.R &
  exit
#+END_SRC

** pull back from krusty


#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b0linint_hetero_linear_niter_10000.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b0linint_hetero_linear_niter_10000.rds
:
: sent 38 bytes  received 100354524 bytes  4460202.76 bytes/sec
: total size is 100464111  speedup is 1.00

** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b0linint_hetero_linear_niter_10000.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ Precip * GDD + (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ AGE - 1
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 10000; warmup = 5000; thin = 1;
         total post-warmup samples = 30000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.46      0.16     0.23     0.84         19 1.08
sd(b1_Intercept)     0.40      0.13     0.18     0.68          7 1.31
sd(b2_Intercept)     0.10      0.02     0.07     0.16         54 1.03

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     2.90      1.26     1.51     6.45          7 1.32
sd(b1_Intercept)     0.27      0.11     0.05     0.49          8 1.25
sd(b2_Intercept)     0.11      0.04     0.02     0.18        137 1.02

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.26      0.13     0.11     0.59         10 1.17
sd(b1_Intercept)     0.09      0.09     0.01     0.38          6 1.37
sd(b2_Intercept)     0.08      0.03     0.02     0.15          9 1.21

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      1.96      0.60     0.83     3.12         15 1.11
b0_Precip         1.21      0.42     0.40     2.03          7 1.33
b0_GDD            0.81      0.20     0.42     1.20          7 1.33
b0_Precip:GDD     1.27      0.38     0.58     2.02          6 1.37
b1_Intercept      1.01      0.17     0.68     1.36         17 1.09
b2_Intercept      0.87      0.04     0.78     0.96        192 1.02
sigma_AGE         0.08      0.00     0.08     0.08      30000 1.01

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 9 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEGDD_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  marginal_effects(mod, effects = "AGE:GDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEGDD_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipGDD_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  marginal_effects(mod, effects = "Precip:GDD", surface = T)
#+end_src


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png :width 800 :height 800
  cond <- unique(select(mod$data, Genus, Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 4)
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png
  pp_check(mod) + xlim(c(-20,150))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b0linint_hetero_linear.png]]




* single species, single location, heteroskedasticity
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:08
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
no sigma at low ages.  the width of a twig is genetically controlled.
There will be very little variation at age 1.
** a simple linear model test
#+begin_src R
  n <- 1000
  a <- 1
  b <- 2
  x <- seq(1,100,length.out = n)
  sigma <- .3 * x
  y <- a + b * x + rnorm(n,0,sigma)
  smpl <- data.frame(x,y)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/test.png
  plot(x,y)
#+end_src

#+RESULTS:
[[file:../figs/test.png]]

#+begin_src R
  form <- bf(y ~ x,
             sigma ~ x - 1)

  m_smpl <- brm(form, chains = 2, cores = 2, data = smpl, init_r = 1)
#+end_src

#+RESULTS:
#+begin_example
Compiling the C++ model
Start sampling

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 1).

Gradient evaluation took 0.000411 seconds
1000 transitions using 10 leapfrog steps per transition would take 4.11 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 2).

Gradient evaluation took 0.000398 seconds
1000 transitions using 10 leapfrog steps per transition would take 3.98 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 5.64912 seconds (Warm-up)
               4.88615 seconds (Sampling)
               10.5353 seconds (Total)

Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 6.5288 seconds (Warm-up)
               4.50444 seconds (Sampling)
               11.0332 seconds (Total)
#+end_example

#+begin_src R
  summary(m_smpl)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: y ~ x
         sigma ~ x - 1
   Data: smpl (Number of observations: 1000)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Population-Level Effects:
          Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
Intercept     1.01      0.15     0.72     1.30       1147 1.00
x             1.99      0.01     1.97     2.01        602 1.00
sigma_x       0.05      0.00     0.05     0.05        851 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

** a super simple linear model test
#+begin_src R
  n <- 100
  x <- rep(seq(1,100,length.out = n/2),2)
  my_sigma_x <- 1.2
  sigma <- my_sigma_x * x
  y <- rnorm(n,0,sigma)
  simple <- data.frame(x,y)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/test.png
  plot(x,y)
#+end_src

#+RESULTS:
[[file:../figs/test.png]]

#+begin_src R
  form <- bf(y ~ 1,
             sigma ~ x - 1)

  m_simple <- brm(form, chains = 2, cores = 2, data = simple, family = brmsfamily("gaussian", link_sigma = "identity"))
  m_simple <- brm(form, chains = 2, cores = 2, data = simple, family = brmsfamily("gaussian", link_sigma = "identity"))
#+end_src

#+RESULTS:
#+begin_example
Compiling the C++ model
Start sampling

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 1).

Gradient evaluation took 0.000339 seconds
1000 transitions using 10 leapfrog steps per transition would take 3.39 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 2).
Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: normal_lpdf: Scale parameter[1] is -0.884546, but must be > 0!  (in 'model54b442f488a_file54b470de14ea' at line 26)


Gradient evaluation took 0.000349 seconds
1000 transitions using 10 leapfrog steps per transition would take 3.49 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 1.17937 seconds (Warm-up)
               1.12264 seconds (Sampling)
               2.30201 seconds (Total)

Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 1.6869 seconds (Warm-up)
               1.29451 seconds (Sampling)
               2.98141 seconds (Total)
#+end_example

#+begin_src R
  summary(m_simple)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: y ~ 1
         sigma ~ x - 1
   Data: simple (Number of observations: 100)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Population-Level Effects:
          Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
Intercept    -0.96      0.71    -2.32     0.41       1491 1.00
sigma_x       1.08      0.07     0.95     1.24       1444 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R
  my_sigma_x <- c(.0001, .001,.05,.1,.3, .5, .6,.9,1.2,1.5, 2.5, 5)
  stan_sigma_x <- c(-0.056, -0.03, .017, .02617, .05202, 0.0640, .076358, .0879, .10, .116, .14, .19)
  d <- data.frame(my_sigma_x, stan_sigma_x)
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/f.png
  qplot(my_sigma_x, stan_sigma_x, d)
#+end_src

#+RESULTS:
[[file:../figs/f.png]]

#+begin_src R :exports results :results graphics :file ../figs/f_sqrtMysigmaX.png
  qplot(my_sigma_x, log(stan_sigma_x), d)
#+end_src

#+RESULTS:
[[file:../figs/f_sqrtMysigmaX.png]]


hmmmmm......

#+begin_src R
  linm <- lm(stan_sigma_x ~ sqrt(my_sigma_x), data = d[3:12,])
  summary(linm)
#+end_src

#+RESULTS:
#+begin_example

Call:
lm(formula = stan_sigma_x ~ sqrt(my_sigma_x), data = d[3:12,
    ])

Residuals:
       Min         1Q     Median         3Q        Max
-0.0064192 -0.0037903  0.0005439  0.0022707  0.0067205

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)
(Intercept)      0.003750   0.003014   1.244    0.249
sqrt(my_sigma_x) 0.086164   0.002680  32.153 9.54e-10 ***
---
Signif. codes:  0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1

Residual standard error: 0.004888 on 8 degrees of freedom
Multiple R-squared:  0.9923,	Adjusted R-squared:  0.9914
F-statistic:  1034 on 1 and 8 DF,  p-value: 9.536e-10
#+end_example

#+begin_src R
  stancode(m_simple)
#+end_src

#+RESULTS:


#+BEGIN_SRC stan :tangle simple.stan
  // generated with brms 2.3.1
  functions {
  }
  data {
    int<lower=1> N;  // total number of observations
    vector[N] Y;  // response variable
    int<lower=1> K_sigma;  // number of population-level effects
    matrix[N, K_sigma] X_sigma;  // population-level design matrix
    int prior_only;  // should the likelihood be ignored?
  }
  transformed data {
  }
  parameters {
    real temp_Intercept;  // temporary intercept
    vector[K_sigma] b_sigma;  // population-level effects
  }
  transformed parameters {
  }
  model {
    vector[N] mu = rep_vector(0, N) + temp_Intercept;
    vector[N] sigma = X_sigma * b_sigma;
    // priors including all constants
    target += student_t_lpdf(temp_Intercept | 3, -3, 43);
    // likelihood including all constants
    if (!prior_only) {
      target += normal_lpdf(Y | mu, sigma);
    }
  }
  generated quantities {
    // actual population-level intercept
    real b_Intercept = temp_Intercept;
  }

#+END_SRC

#+begin_src R
  m2 <- stan("simple.stan", data = standata(m_simple))
#+end_src

#+RESULTS:
#+begin_example
SYNTAX ERROR, MESSAGE(S) FROM PARSER:

Cannot assign to variable outside of declaration block; left-hand-side variable origin=parameter
  error in 'model54b46729212d_simple' at line 22, column 10
  -------------------------------------------------
    20: model {
    21:   vector[N] mu = rep_vector(0, N) + temp_Intercept;
    22:   sigma = X_sigma * b_sigma;
                 ^
    23:   for (n in 1:N) {
  -------------------------------------------------

PARSER EXPECTED: <expression assignable to left-hand side>
Error in stanc(file = file, model_code = model_code, model_name = model_name,  :
  failed to parse Stan model 'simple' due to the above error.
#+end_example

#+begin_src R
  m2
#+end_src

#+RESULTS:
#+begin_example
Inference for Stan model: simple.
4 chains, each with iter=2000; warmup=1000; thin=1;
post-warmup draws per chain=1000, total post-warmup draws=4000.

                  mean se_mean   sd    2.5%     25%     50%     75%   97.5%
temp_Intercept   -0.96    0.01 0.70   -2.29   -1.43   -0.94   -0.48    0.43
b_sigma[1]        1.08    0.00 0.08    0.95    1.03    1.08    1.13    1.24
b_Intercept      -0.96    0.01 0.70   -2.29   -1.43   -0.94   -0.48    0.43
lp__           -514.52    0.02 0.99 -517.11 -514.92 -514.22 -513.79 -513.52
               n_eff Rhat
temp_Intercept  3074    1
b_sigma[1]      2818    1
b_Intercept     3074    1
lp__            1739    1

Samples were drawn using NUTS(diag_e) at Thu Aug  2 13:46:58 2018.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at
convergence, Rhat=1).
#+end_example

** generate data
I should make the generated data have the exact same structure as the
real data, and just create one model..

#+begin_src R
  n <- 30
  b0 <- 1.2
  b1 <- 1  #2
  b2 <- 1
  sigma_x <- 0.05

  w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))

  AGE <- rep(seq(0,150,length.out = n/2),each = 2)
                                          #cumsum(rep((150 - 0) / n, n))

  sigma <- sigma_x * AGE

  DBH <- w(b0,b1,b2, AGE) + rnorm(n, 0, sigma)

  dt <- data.frame(AGE, DBH)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/generated_data_singleSpeciesLocation.png
  ggplot(dt, aes(x = AGE, y = DBH)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/test_data_1.png]]

** test model on generated data

#+begin_src R :results output
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ 1,
             b1 ~ 1,
             b2 ~ 1,
             sigma ~ AGE - 1,
             nl = T)

  nlprior <- c(prior(gamma(2, 1), nlpar = "b0",lb = 0),
               prior(gamma(2, 1), nlpar = "b1",lb = 0),
               prior(gamma(2, 1), nlpar = "b2",lb = 0))

  m <- brm(form, chains = 2, cores = 2, data = dt, prior = nlprior)

#+end_src

#+RESULTS:
#+begin_example

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 1).
Rejecting initial value:
  Gradient evaluated at the initial value is not finite.
  Stan can't start sampling from this initial value.
Rejecting initial value:
  Gradient evaluated at the initial value is not finite.
  Stan can't start sampling from this initial value.

Gradient evaluation took 0.00017 seconds
1000 transitions using 10 leapfrog steps per transition would take 1.7 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 2).

Gradient evaluation took 0.000493 seconds
1000 transitions using 10 leapfrog steps per transition would take 4.93 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 11.2416 seconds (Warm-up)
               12.0861 seconds (Sampling)
               23.3277 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 12.8443 seconds (Warm-up)
               13.1528 seconds (Sampling)
               25.9971 seconds (Total)
#+end_example

#+begin_src R
  summary(m)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         sigma ~ AGE - 1
   Data: dt (Number of observations: 30)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.65      0.46     1.12     2.90        259 1.00
b1_Intercept     0.94      0.13     0.65     1.19        467 1.00
b2_Intercept     0.92      0.05     0.82     1.03        310 1.00
sigma_AGE        0.02      0.00     0.01     0.02       1149 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/test_1_plot.png
  plot(m)
#+end_src

#+RESULTS:
[[file:../figs/test_1_plot.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_1.png
  me <-   marginal_effects(m)
  me

#+end_src

#+RESULTS:
[[file:../figs/marginal_1.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_pts.png
                                          #  me <-   marginal_effects(m)
  ggplot() + geom_line(data = me$AGE, aes(x = AGE, y = estimate__)) +
      geom_ribbon(data = me$AGE, alpha = .2, aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__)) +
      geom_point(data = dt, aes(x = AGE, y = DBH))

#+end_src

#+RESULTS:
[[file:../figs/marginal_pts.png]]


#+begin_src R :exports results :results graphics :file ../figs/pairs_1.png
  pairs(m)
#+end_src

#+RESULTS:
[[file:../figs/pairs_1.png]]

*** posterior transform to get back original sigma

Extract the posterior samples via posterior_samples, transform them
via exp and then summarize via posterior_summary. But keep in mind
that a linear effect on the log scale becomes multiplicative effect
after back-transforming on the identity scale.

#+begin_src R
  posterior_samples(
#+end_src

** fit model to real data
#+begin_src R
  d <- readRDS("../data/tidy_age_dbh.rds")
  fram <- filter(d, SpCode == "FRAM")
  fram_ftcollins <- filter(d, SpCode == "FRAM", City == "Fort Collins, CO")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/fram_age_dbh.png
  ggplot(fram, aes(x = AGE, y = DBH,color = City)) + geom_point() + facet_wrap(~City)
#+end_src

#+RESULTS:
[[file:../figs/fram_age_dbh.png]]

I divide b0 by 100 and multiply b1 by 100 to get the parameters on the same scale ish, with
the hopes that this speeds things up a bit.

#+begin_src R :exports results :results graphics :file ../figs/fasdfa.png
  ggplot(mapping = aes(x = AGE, y = DBH)) + geom_point(data = dt, color = "red") + geom_point(data = fram_ftcollins, color = "blue")
#+end_src

#+RESULTS:
[[file:../figs/fasdfa.png]]

#+begin_src R
  model_fram_ftcollins_hetero <- update(m, newdata = fram_ftcollins)
#+end_src

#+RESULTS:
#+begin_example
Start sampling

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 1).

Gradient evaluation took 0.000278 seconds
1000 transitions using 10 leapfrog steps per transition would take 2.78 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 10.9521 seconds (Warm-up)
               13.461 seconds (Sampling)
               24.4132 seconds (Total)


SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 2).

Gradient evaluation took 0.000189 seconds
1000 transitions using 10 leapfrog steps per transition would take 1.89 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 10.8105 seconds (Warm-up)
               11.6145 seconds (Sampling)
               22.4249 seconds (Total)
#+end_example

** diagnostics
#+begin_src R :exports results :results graphics :file ../figs/model_fram_ftcollins_hetero_pairs.png
  pairs(model_fram_ftcollins_hetero)
#+end_src

#+RESULTS:
[[file:../figs/model_fram_ftcollins_hetero_pairs.png]]

#+begin_src R
  summary(model_fram_ftcollins_hetero)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         sigma ~ AGE - 1
   Data: fram_ftcollins (Number of observations: 31)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.82      0.85     0.83     3.97        432 1.00
b1_Intercept     0.77      0.26     0.32     1.34        568 1.00
b2_Intercept     1.10      0.07     0.98     1.26        535 1.01
sigma_AGE        0.05      0.00     0.05     0.06        982 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/model_fram_ftcollins_hetero.png
  plot(model_fram_ftcollins_hetero)
#+end_src

#+RESULTS:
[[file:../figs/model_fram_ftcollins_hetero.png]]

#+begin_src R :exports results :results graphics :file ../figs/model_fram_ftcollins_hetero_marginal_effects.png
  marginal_effects(model_fram_ftcollins_hetero)
#+end_src

#+RESULTS:
[[file:../figs/model_fram_ftcollins_hetero_marginal_effects.png]]

** stan code for model
#+begin_src R
  stancode(model_fram_ftcollins_homo)
#+end_src

#+RESULTS:


* single species, multiple locations, homoskedasticyt..sysgnsy
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:08
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** generate data

#+begin_src R
  k <- 4
  n <- 80
  breaks <- c(0,sort(sample(1:n,(k-1))),n)
  nk <- sapply(1:k, function(i) breaks[i+1] - breaks[i])
  nk

  mu_b0 <- 1.2
  sigma_b0 <- .2
  mu_b1 <- 2
  sigma_b1 <- .2
  mu_b2 <- 1
  sigma_b2 <- .2

  sigma <- 3

  b0 <- rnorm(k, mu_b0, sigma_b0)
  b1 <- rnorm(k, mu_b1, sigma_b1)
  b2 <- rnorm(k, mu_b2, sigma_b2)

  w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))


  AGE <- rep(seq(0,150,length.out = n/2),each = 2) %>%
      sample  #to randomly shuffle

  DBH <- sapply(1:k, function(i) w(b0[i], b1[i], b2[i], AGE[seq(breaks[i]+1,breaks[i+1])]) + rnorm(nk[i], 0, sigma)) %>% unlist

  City <- rep(letters[1:k], times = nk)

  dt <- data.frame(AGE, DBH, City)
#+end_src

#+RESULTS:
: [1] 20 17 20 23

#+begin_src R :exports results :results graphics :file ../figs/test_data_1.png
  ggplot(dt, aes(x = AGE, y = DBH, color = City)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/test_data_1.png]]

** fit to generated data

#+begin_src R :results output
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ (1 | ID | City),
             b1 ~ (1 | ID | City),
             b2 ~ (1 | ID | City),
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.3), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b2"))


  m_generated_singleSpecies_multipleLocations_homo <- brm(form, chains = 2, cores = 2, data = dt, prior = nlprior, init_r = .3)

#+end_src

#+begin_src R :results output
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ (1 | City),
             b1 ~ (1 | City),
             b2 ~ (1 | City),
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.3), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b2"))


  m_generated_singleSpecies_multipleLocations_homo_nocor <- brm(form, chains = 2, cores = 2, data = dt, prior = nlprior, init_r = .3)

#+end_src

#+begin_src R
  summary(m_generated_singleSpecies_multipleLocations_homo_nocor)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ (1 | City)
         b1 ~ (1 | City)
         b2 ~ (1 | City)
   Data: dt (Number of observations: 80)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 4)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.36      0.17     0.16     0.80        827 1.00
sd(b1_Intercept)     0.20      0.16     0.01     0.63       1095 1.00
sd(b2_Intercept)     0.09      0.07     0.01     0.27        650 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.19      0.20     0.77     1.61        735 1.00
b1_Intercept     1.73      0.20     1.38     2.17       1359 1.00
b2_Intercept     0.95      0.07     0.81     1.08        818 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     2.77      0.24     2.36     3.30       2000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 13 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R
  summary(m_generated_singleSpecies_multipleLocations_homo_cor)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ (1 | ID | City)
         b1 ~ (1 | ID | City)
         b2 ~ (1 | ID | City)
   Data: dt (Number of observations: 80)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 4)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.39      0.21     0.16     0.95        565
sd(b1_Intercept)                   0.21      0.19     0.01     0.71        895
sd(b2_Intercept)                   0.10      0.07     0.01     0.29        418
cor(b0_Intercept,b1_Intercept)    -0.22      0.45    -0.89     0.75       1047
cor(b0_Intercept,b2_Intercept)    -0.01      0.44    -0.79     0.78        672
cor(b1_Intercept,b2_Intercept)    -0.03      0.48    -0.88     0.84       1141
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.18      0.22     0.75     1.60        325 1.01
b1_Intercept     1.74      0.21     1.40     2.21       1002 1.00
b2_Intercept     0.95      0.07     0.79     1.07        530 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     2.76      0.23     2.36     3.24       1609 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 52 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/pairs_m_generated_singleSpecies_multipleLocations_homo.png
  pairs(m_generated_singleSpecies_multipleLocations_homo)
#+end_src

#+RESULTS:
[[file:../figs/pairs_m_generated_singleSpecies_multipleLocations_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/plot_m_generated_singleSpecies_multipleLocations_homo.png
  library(bayesplot)
  mcmc_trace(as.matrix(m_generated_singleSpecies_multipleLocations_homo))
#+end_src

#+RESULTS:
[[file:../figs/plot_m_generated_singleSpecies_multipleLocations_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal2_m_generated_singleSpecies_multipleLocations_homo.png
  cond <- data.frame(City = c("a","b","c","d"))

  me <- marginal_effects(m_generated_singleSpecies_multipleLocations_homo,
                         effects = c("AGE"), conditions = cond, re_formula = NULL)


  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = m_generated_singleSpecies_multipleLocations_homo$data, aes(x = AGE, y = DBH), alpha = .2) +
      facet_wrap(~City)

#+end_src

#+RESULTS:
[[file:../figs/marginal2_m_generated_singleSpecies_multipleLocations_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_nocor_m_generated_singleSpecies_multipleLocations_homo.png
  cond <- data.frame(City = c("a","b","c","d"))

  me <- marginal_effects(m_generated_singleSpecies_multipleLocations_homo_nocor,
                         effects = c("AGE"), conditions = cond, re_formula = NULL)


  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = m_generated_singleSpecies_multipleLocations_homo$data, aes(x = AGE, y = DBH), alpha = .2) +
      facet_wrap(~City)

#+end_src

#+RESULTS:
[[file:../figs/marginal_nocor_m_generated_singleSpecies_multipleLocations_homo.png]]


#+begin_src R
  LOO(m_generated_singleSpecies_multipleLocations_homo_cor,m_generated_singleSpecies_multipleLocations_homo_nocor)
#+end_src

#+RESULTS:
:                                                                                                                LOOIC
: m_generated_singleSpecies_multipleLocations_homo_cor                                                          398.40
: m_generated_singleSpecies_multipleLocations_homo_nocor                                                        399.28
: m_generated_singleSpecies_multipleLocations_homo_cor - m_generated_singleSpecies_multipleLocations_homo_nocor  -0.88
:                                                                                                                  SE
: m_generated_singleSpecies_multipleLocations_homo_cor                                                          10.51
: m_generated_singleSpecies_multipleLocations_homo_nocor                                                        10.73
: m_generated_singleSpecies_multipleLocations_homo_cor - m_generated_singleSpecies_multipleLocations_homo_nocor  0.54

#+begin_src R :exports results :results graphics :file ../figs/marginal_pts_all.png
  ggplot() +
      geom_ribbon(data = me$AGE, alpha = .3, aes(x = AGE, ymin = estimate__ - se__,  ymax = estimate__ + se__, group = City)) +
      geom_line(data = me$AGE, aes(x = AGE, y = estimate__, color = City)) +
      geom_point(data = dt, aes(x = AGE, y = DBH, color = City))

#+end_src

#+RESULTS:
[[file:../figs/marginal_pts_all.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_pred.png
  pp_check(m_generated_singleSpecies_multipleLocations_homo)
#+end_src

#+RESULTS:
[[file:../figs/posterior_pred.png]]

#+begin_src R
  stancode(m_generated_singleSpecies_multipleLocations_homo)
#+end_src

#+RESULTS:

#+BEGIN_SRC stan
  // generated with brms 2.3.1
  functions {
  }
  data {
    int<lower=1> N;  // total number of observations
    vector[N] Y;  // response variable
    int<lower=1> K_b0;  // number of population-level effects
    matrix[N, K_b0] X_b0;  // population-level design matrix
    int<lower=1> K_b1;  // number of population-level effects
    matrix[N, K_b1] X_b1;  // population-level design matrix
    int<lower=1> K_b2;  // number of population-level effects
    matrix[N, K_b2] X_b2;  // population-level design matrix
    // covariate vectors
    vector[N] C_1;
    // data for group-level effects of ID 1
    int<lower=1> J_1[N];
    int<lower=1> N_1;
    int<lower=1> M_1;
    vector[N] Z_1_b0_1;
    vector[N] Z_1_b1_2;
    vector[N] Z_1_b2_3;
    int<lower=1> NC_1;
    int prior_only;  // should the likelihood be ignored?
  }
  transformed data {
  }
  parameters {
    vector<lower=0>[K_b0] b_b0;  // population-level effects
    vector<lower=0>[K_b1] b_b1;  // population-level effects
    vector<lower=0>[K_b2] b_b2;  // population-level effects
    real<lower=0> sigma;  // residual SD
    vector<lower=0>[M_1] sd_1;  // group-level standard deviations
    matrix[M_1, N_1] z_1;  // unscaled group-level effects
    // cholesky factor of correlation matrix
    cholesky_factor_corr[M_1] L_1;
  }
  transformed parameters {
    // group-level effects
    matrix[N_1, M_1] r_1 = (diag_pre_multiply(sd_1, L_1) * z_1)';
    vector[N_1] r_1_b0_1 = r_1[, 1];
    vector[N_1] r_1_b1_2 = r_1[, 2];
    vector[N_1] r_1_b2_3 = r_1[, 3];
  }
  model {
    vector[N] mu_b0 = X_b0 * b_b0;
    vector[N] mu_b1 = X_b1 * b_b1;
    vector[N] mu_b2 = X_b2 * b_b2;
    vector[N] mu;
    for (n in 1:N) {
      mu_b0[n] += r_1_b0_1[J_1[n]] * Z_1_b0_1[n];
      mu_b1[n] += r_1_b1_2[J_1[n]] * Z_1_b1_2[n];
      mu_b2[n] += r_1_b2_3[J_1[n]] * Z_1_b2_3[n];
      // compute non-linear predictor
      mu[n] = 100 * mu_b0[n] * (1 - exp( - (mu_b1[n] / 100) * C_1[n] ^ mu_b2[n]));
    }
    // priors including all constants
    target += gamma_lpdf(b_b0 | 4, 3)
      - 1 * gamma_lccdf(0 | 4, 3);
    target += gamma_lpdf(b_b1 | 4, 3)
      - 1 * gamma_lccdf(0 | 4, 3);
    target += gamma_lpdf(b_b2 | 4, 3)
      - 1 * gamma_lccdf(0 | 4, 3);
    target += student_t_lpdf(sigma | 3, 0, 49)
      - 1 * student_t_lccdf(0 | 3, 0, 49);
    target += student_t_lpdf(sd_1 | 3, 0, 49)
      - 3 * student_t_lccdf(0 | 3, 0, 49);
    target += normal_lpdf(to_vector(z_1) | 0, 1);
    target += lkj_corr_cholesky_lpdf(L_1 | 1);
    // likelihood including all constants
    if (!prior_only) {
      target += normal_lpdf(Y | mu, sigma);
    }
  }
  generated quantities {
    corr_matrix[M_1] Cor_1 = multiply_lower_tri_self_transpose(L_1);
    vector<lower=-1,upper=1>[NC_1] cor_1;
    // take only relevant parts of correlation matrix
    cor_1[1] = Cor_1[1,2];
    cor_1[2] = Cor_1[1,3];
    cor_1[3] = Cor_1[2,3];
  }
#+END_SRC

** fit to real data
#+begin_src R
  d <- readRDS("../data/tidy_age_dbh.rds")
  fram <- filter(d, SpCode == "FRAM")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/fram_age_dbh.png
  ggplot(fram, aes(x = AGE, y = DBH,color = City)) + geom_point() + facet_wrap(~City)
#+end_src

#+RESULTS:
[[file:../figs/fram_age_dbh.png]]

#+begin_src R

  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ (1 | ID | City),
             b1 ~ (1 | ID | City),
             b2 ~ (1 | ID | City),
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.3), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b2"))


  model_fram <- brm(form, chains = 2, cores = 2, data = fram, prior = nlprior, init_r = .3)


#+end_src

#+begin_src R
  model_fram
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ (1 | ID | City)
         b1 ~ (1 | ID | City)
         b2 ~ (1 | ID | City)
   Data: fram (Number of observations: 129)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 4)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.18      0.16     0.01     0.60       1317
sd(b1_Intercept)                   0.21      0.19     0.01     0.70        771
sd(b2_Intercept)                   0.08      0.06     0.00     0.22        723
cor(b0_Intercept,b1_Intercept)    -0.02      0.51    -0.90     0.89       1150
cor(b0_Intercept,b2_Intercept)    -0.09      0.50    -0.91     0.85       1378
cor(b1_Intercept,b2_Intercept)    -0.07      0.51    -0.91     0.86       1372
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.35      0.27     0.97     1.99        997 1.00
b1_Intercept     1.30      0.23     0.91     1.79       1007 1.01
b2_Intercept     1.05      0.08     0.89     1.21       1058 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     6.45      0.42     5.72     7.35       2000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 24 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

** diagnostics
#+begin_src R :exports results :results graphics :file ../figs/trace_model_fram_homo.png
  mcmc_trace(as.matrix(model_fram))
#+end_src

#+RESULTS:
[[file:../figs/trace_model_fram_homo.png]]

** marginal effects

#+begin_src R :exports results :results graphics :file ../figs/marginal_fram_homo_Cities.png
  cond <- data.frame(City = unique(fram$City))
  marginal_effects(model_fram, re_formula = NULL, conditions = cond)
#+end_src

#+RESULTS:
[[file:../figs/marginal_fram_homo_Cities.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_fram_homo_city_wPoints.png
  cond <- data.frame(City = unique(fram$City))
  me <- marginal_effects(model_fram, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = fram, aes(x = AGE, y = DBH)) +
      facet_wrap(~City)
#+end_src

#+RESULTS:
[[file:../figs/marginal_fram_homo_city_wPoints.png]]


* single species, multiple locations, precipitation predictors for locations, homoskedasticy
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:09
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** generate data
#+begin_src R
  k <- 12
  expect_nk <- 30
  n <- k * expect_nk
  breaks <- c(0,sort(sample(1:n,(k-1))),n)
  nk <- sapply(1:k, function(i) breaks[i+1] - breaks[i])
  nk

  precip <- c(200, 100, 1500, 600, 700, 500, 1400, 600, 400, 400, 250, 800) / 1000
  precip <- precip - mean(precip)

  u_precip_b0 <- .4
  u_precip_b1 <- -.2
  u_precip_b2 <- .2

                                          #with centered city level predictors this is the mean
  u_intercept_b0 <- 1.5
  u_intercept_b1 <- 2
  u_intercept_b2 <- 1

  mu_b0 <- u_intercept_b0 + u_precip_b0 * precip
  sigma_b0 <- .2
  mu_b1 <-  u_intercept_b1 + u_precip_b1 * precip
  sigma_b1 <- .2
  mu_b2 <-  u_intercept_b2 + u_precip_b2 * precip
  sigma_b2 <- .2

  sigma <- 3

  b0 <- rnorm(k, mu_b0, sigma_b0)
  b1 <- rnorm(k, mu_b1, sigma_b1)
  b2 <- rnorm(k, mu_b2, sigma_b2)

  w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))


  AGE <- rep(seq(0,100,length.out = n/2),each = 2) %>%
      sample  #to randomly shuffle

  DBH <- sapply(1:k, function(i) w(b0[i], b1[i], b2[i], AGE[seq(breaks[i]+1,breaks[i+1])]) + rnorm(nk[i], 0, sigma)) %>% unlist

  City <- rep(letters[1:k], times = nk)
  Precip <- rep(precip, times = nk)


  dt <- data.frame(AGE, DBH, City, Precip)
#+end_src

#+RESULTS:
:
: [1]  19   8  35   6  16  19  21  47 112  32  29  16

#+begin_src R :exports results :results graphics :file ../figs/test_data_singleSpecies_multipleLocations_PrecipCityPred.png :height 200
  library(gridExtra)
  pc <-   ggplot(dt, aes(x = AGE, y = DBH, color = City)) + geom_point()
  pp <-   ggplot(dt, aes(x = AGE, y = DBH, color = Precip)) + geom_point()
  grid.arrange(pc,pp, nrow =1)
#+end_src

#+RESULTS:
[[file:../figs/test_data_singleSpecies_multipleLocations_PrecipCityPred.png]]

** fit to generated data
linear fit for test
#+begin_src R
  form <- bf(DBH ~ AGE * Precip + (AGE + 1 | City))

  linfit <- brm(form, chains = 2, cores = 2, data = dt)

#+end_src

#+begin_src R
  linfit
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ AGE * Precip + (AGE + 1 | City)
   Data: dt (Number of observations: 150)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 5)
                   Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(Intercept)          7.58      7.17     0.30    26.96        433 1.01
sd(AGE)                0.16      0.11     0.01     0.45         76 1.02
cor(Intercept,AGE)     0.13      0.56    -0.87     0.97        159 1.03

Population-Level Effects:
           Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
Intercept     14.42      4.96     3.47    25.13        458 1.01
AGE            0.49      0.09     0.25     0.66         65 1.04
Precip        49.73     21.62     2.57    88.20        354 1.00
AGE:Precip     1.25      0.60     0.27     3.32         31 1.06

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma    12.00      0.74    10.66    13.46        135 1.02

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 109 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example


#+begin_src R :exports results :results graphics :file ../figs/linfit.png
  marginal_effects(linfit, "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/linfit.png]]

#+begin_src R
  stancode(linfit)
#+end_src

#+RESULTS:

#+begin_src R :results output


  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ Precip + (1 | City),
             b1 ~ Precip + (1 | City),
             b2 ~ Precip + (1 | City),
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(4, 3), nlpar = "b1",lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0))

  m_generated_singleSpecies_multipleLocations_GroupPred_homo <- brm(form, chains = 2, cores = 2, data = dt, prior = nlprior)

#+end_src

#+begin_src R
  summary(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ Precip + (1 | City)
         b1 ~ Precip + (1 | City)
         b2 ~ Precip + (1 | City)
   Data: dt (Number of observations: 150)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 5)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.15      0.18     0.00     0.69        479 1.00
sd(b1_Intercept)     0.24      0.26     0.01     0.92        814 1.00
sd(b2_Intercept)     0.07      0.09     0.00     0.29        536 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     0.98      0.15     0.75     1.35        608 1.00
b0_Precip        1.06      0.36     0.45     1.80       1521 1.00
b1_Intercept     0.99      0.18     0.68     1.39        939 1.00
b1_Precip        0.82      0.39     0.25     1.71       2000 1.00
b2_Intercept     0.92      0.06     0.80     1.04        908 1.00
b2_Precip        0.57      0.21     0.25     1.09        929 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     3.00      0.18     2.67     3.38       2000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 16 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

It recovered the true values pretty well, though there is definitely
more uncertainty.


#+begin_src R :exports results :results graphics :file ../figs/pairs_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png :width 1000 :height 1000
  pairs(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

#+RESULTS:
[[file:../figs/pairs_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/plot_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png
  library(bayesplot)
  mcmc_trace(as.matrix(m_generated_singleSpecies_multipleLocations_GroupPred_homo))
#+end_src

#+RESULTS:
[[file:../figs/plot_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png
  me <- marginal_effects(m_generated_singleSpecies_multipleLocations_GroupPred_homo, effects = c("AGE:Precip"))
  me

#+end_src

#+RESULTS:
[[file:../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo_Precip.png

  me <- marginal_effects(m_generated_singleSpecies_multipleLocations_GroupPred_homo, effects = c("Precip"))
  me


#+end_src

#+RESULTS:
[[file:../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo_Precip.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo_City.png
  cond <- data.frame(City = unique(dt$City))
  me <- marginal_effects(m_generated_singleSpecies_multipleLocations_GroupPred_homo,
                         conditions = cond,
                         effects = "AGE",
                         re_formula = NULL)
  me

#+end_src

#+RESULTS:
[[file:../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo_City.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_pred.png
  pp_check(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

#+RESULTS:
[[file:../figs/posterior_pred.png]]

#+begin_src R
  stancode(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

#+BEGIN_SRC stan
  // generated with brms 2.3.1
  functions {
  }
  data {
    int<lower=1> N;  // total number of observations
    vector[N] Y;  // response variable
    int<lower=1> K_b0;  // number of population-level effects
    matrix[N, K_b0] X_b0;  // population-level design matrix
    int<lower=1> K_b1;  // number of population-level effects
    matrix[N, K_b1] X_b1;  // population-level design matrix
    int<lower=1> K_b2;  // number of population-level effects
    matrix[N, K_b2] X_b2;  // population-level design matrix
    // covariate vectors
    vector[N] C_1;
    // data for group-level effects of ID 1
    int<lower=1> J_1[N];
    int<lower=1> N_1;
    int<lower=1> M_1;
    vector[N] Z_1_b0_1;
    // data for group-level effects of ID 2
    int<lower=1> J_2[N];
    int<lower=1> N_2;
    int<lower=1> M_2;
    vector[N] Z_2_b1_1;
    // data for group-level effects of ID 3
    int<lower=1> J_3[N];
    int<lower=1> N_3;
    int<lower=1> M_3;
    vector[N] Z_3_b2_1;
    int prior_only;  // should the likelihood be ignored?
  }
  transformed data {
  }
  parameters {
    vector<lower=0>[K_b0] b_b0;  // population-level effects
    vector<lower=0>[K_b1] b_b1;  // population-level effects
    vector<lower=0>[K_b2] b_b2;  // population-level effects
    real<lower=0> sigma;  // residual SD
    vector<lower=0>[M_1] sd_1;  // group-level standard deviations
    vector[N_1] z_1[M_1];  // unscaled group-level effects
    vector<lower=0>[M_2] sd_2;  // group-level standard deviations
    vector[N_2] z_2[M_2];  // unscaled group-level effects
    vector<lower=0>[M_3] sd_3;  // group-level standard deviations
    vector[N_3] z_3[M_3];  // unscaled group-level effects
  }
  transformed parameters {
    // group-level effects
    vector[N_1] r_1_b0_1 = sd_1[1] * (z_1[1]);
    // group-level effects
    vector[N_2] r_2_b1_1 = sd_2[1] * (z_2[1]);
    // group-level effects
    vector[N_3] r_3_b2_1 = sd_3[1] * (z_3[1]);
  }
  model {
    vector[N] mu_b0 = X_b0 * b_b0;
    vector[N] mu_b1 = X_b1 * b_b1;
    vector[N] mu_b2 = X_b2 * b_b2;
    vector[N] mu;
    for (n in 1:N) {
      mu_b0[n] += r_1_b0_1[J_1[n]] * Z_1_b0_1[n];
      mu_b1[n] += r_2_b1_1[J_2[n]] * Z_2_b1_1[n];
      mu_b2[n] += r_3_b2_1[J_3[n]] * Z_3_b2_1[n];
      // compute non-linear predictor
      mu[n] = 100 * mu_b0[n] * (1 - exp( - (mu_b1[n] / 100) * C_1[n] ^ mu_b2[n]));
    }
    // priors including all constants
    target += gamma_lpdf(b_b0 | 4, 3)
      - 2 * gamma_lccdf(0 | 4, 3);
    target += gamma_lpdf(b_b1 | 4, 3)
      - 2 * gamma_lccdf(0 | 4, 3);
    target += gamma_lpdf(b_b2 | 4, 3)
      - 2 * gamma_lccdf(0 | 4, 3);
    target += student_t_lpdf(sigma | 3, 0, 33)
      - 1 * student_t_lccdf(0 | 3, 0, 33);
    target += student_t_lpdf(sd_1 | 3, 0, 33)
      - 1 * student_t_lccdf(0 | 3, 0, 33);
    target += normal_lpdf(z_1[1] | 0, 1);
    target += student_t_lpdf(sd_2 | 3, 0, 33)
      - 1 * student_t_lccdf(0 | 3, 0, 33);
    target += normal_lpdf(z_2[1] | 0, 1);
    target += student_t_lpdf(sd_3 | 3, 0, 33)
      - 1 * student_t_lccdf(0 | 3, 0, 33);
    target += normal_lpdf(z_3[1] | 0, 1);
    // likelihood including all constants
    if (!prior_only) {
      target += normal_lpdf(Y | mu, sigma);
    }
  }
  generated quantities {
  }
#+END_SRC

** fit to real data
#+begin_src R :var clim=city_climate
  d <- readRDS("../data/tidy_age_dbh.rds")
  list <- filter(d, SpCode == "LIST")
  list_clim <- left_join(list,clim) %>%
      mutate(Precip = (Precip - mean(Precip))/ 1000)
#+end_src

#+RESULTS:
: Joining, by = c("Region", "City")

#+begin_src R :exports results :results graphics :file ../figs/list_clim.png :height 200 :width 700
  pc <-   ggplot(list_clim, aes(x = AGE, y = DBH, color = City)) + geom_point()
  pp <-   ggplot(list_clim, aes(x = AGE, y = DBH, color = Precip)) + geom_point()
  grid.arrange(pc,pp, nrow =1)
#+end_src

#+RESULTS:
[[file:../figs/list_clim.png]]

#+begin_src R
  model_list_precip_homo <- update(m_generated_singleSpecies_multipleLocations_GroupPred_homo, chains = 2, cores = 2, newdata = list_clim)
#+end_src

#+RESULTS:
#+begin_example
Joining, by = c("Region", "City")
Start sampling

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 1).
Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: normal_lpdf: Location parameter[1] is -inf, but must be finite!  (in 'model54b426e2cace_file54b451782573' at line 86)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: normal_lpdf: Location parameter[34] is -inf, but must be finite!  (in 'model54b426e2cace_file54b451782573' at line 86)

Rejecting initial value:
  Gradient evaluated at the initial value is not finite.
  Stan can't start sampling from this initial value.

Gradient evaluation took 0.000772 seconds
1000 transitions using 10 leapfrog steps per transition would take 7.72 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gaussian brms-model' NOW (CHAIN 2).
Rejecting initial value:
  Gradient evaluated at the initial value is not finite.
  Stan can't start sampling from this initial value.

Gradient evaluation took 0.000689 seconds
1000 transitions using 10 leapfrog steps per transition would take 6.89 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 202.195 seconds (Warm-up)
               158.382 seconds (Sampling)
               360.577 seconds (Total)

Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 240.758 seconds (Warm-up)
               207.24 seconds (Sampling)
               447.998 seconds (Total)

Warning messages:
1: There were 113 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help. See
http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
2: Examine the pairs() plot to diagnose sampling problems
#+end_example


#+begin_src R
  model_fram_precip_homo
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ Precip + (1 | City)
         b1 ~ Precip + (1 | City)
         b2 ~ Precip + (1 | City)
   Data: fram_clim (Number of observations: 129)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 4)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.62      0.74     0.01     2.64        478 1.00
sd(b1_Intercept)     0.40      0.37     0.01     1.34        556 1.00
sd(b2_Intercept)     0.36      0.28     0.04     1.12        213 1.01

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.44      0.41     0.78     2.46        764 1.01
b0_Precip        1.20      0.60     0.36     2.68       1262 1.00
b1_Intercept     1.13      0.28     0.62     1.70        546 1.00
b1_Precip        1.25      0.59     0.37     2.68       1483 1.00
b2_Intercept     1.08      0.19     0.67     1.47        298 1.00
b2_Precip        0.96      0.52     0.25     2.23        288 1.01

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     6.39      0.42     5.66     7.28        904 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 113 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

** diagnostics
#+begin_src R :exports results :results graphics :file ../figs/mcmctrace_fram_precip_homo.png
  mcmc_trace(as.matrix(model_fram_precip_homo))
#+end_src

#+RESULTS:
[[file:../figs/mcmctrace_fram_precip_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_fram_precip_homo.png
  pp_check(model_fram_precip_homo)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_fram_precip_homo.png]]
Not great.  I think the problem arises because the effect of Precip on
the parameters may not be linear.  Also, I may need to include
Temperature related covariates

** marginal effects
#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_fram_ageprecip_homo.png
  marginal_effects(model_fram_precip_homo, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_fram_ageprecip_homo.png]]


Very cool, as precip increases, so does dbh.  But there is high uncertainty.

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_fram_ageprecip_homo_Points.png
  conditions <- data.frame(Precip = unique(fram_clim$Precip))
  me <- marginal_effects(model_fram_precip_homo, effects = "AGE", conditions = conditions, re_formula = NA)
                                          #me
  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = fram_clim, aes(x = AGE, y = DBH)) +
      facet_wrap(~Precip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_fram_ageprecip_homo_Points.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_fram_precip_homo.png
  marginal_effects(model_fram_precip_homo, effects = "Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_fram_precip_homo.png]]


* single species, multiple locations, multiple climate predictors for locations, homoskedasticy
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:09
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** generate data
#+begin_src R
  k <- 5
  expect_nk <- 30
  n <- k * expect_nk
  breaks <- c(0,sort(sample(1:100,(k-1))),n)
  nk <- sapply(1:k, function(i) breaks[i+1] - breaks[i])
  nk

  clim.gen <- filter(clim, Region %in% c("GulfCo", "SWDsrt", "MidWst","NMtnPr", "NoCalC")) %>%
      mutate(CDD = (CDD - mean(CDD)) / 1000,
             HDD = (HDD - mean(HDD)) / 1000,
             Precip = (Precip - mean(Precip)) / 1000)

  precip <- c(0.8816, -0.0514, -0.2214, -0.1094, -0.4994)
  hdd <- c(-1.0614, 2.1536, 1.0496, -0.4964, -1.6454)
  cdd <- c(0.325, -0.444, -0.45, -0.76, 1.329)


  u_precip_b0 <- .5
  u_precip_b1 <- .1
  u_precip_b2 <- -.1

  u_hdd_b0 <- -.2
  u_hdd_b1 <- -.05
  u_hdd_b2 <- .05

  u_hdd_precip_b0 <- -1
  u_hdd_precip_b1 <- -.2
  u_hdd_precip_b2 <- .2

                                          #with centered city level predictors this is the mean
  u_intercept_b0 <- 1.5
  u_intercept_b1 <- 1
  u_intercept_b2 <- 1

  mu_b0 <- u_intercept_b0 + u_precip_b0 * precip + u_hdd_b0 * hdd + u_hdd_precip_b0 * hdd * precip
  sigma_b0 <- .01
  mu_b1 <- u_intercept_b1 + u_precip_b1 * precip + u_hdd_b1 * hdd + u_hdd_precip_b1 * hdd * precip
  sigma_b1 <- .01
  mu_b2 <- u_intercept_b2 + u_precip_b2 * precip + u_hdd_b2 * hdd + u_hdd_precip_b2 * hdd * precip
  sigma_b2 <- .01

  sigma <- 3

  b0 <- rnorm(k, mu_b0, sigma_b0)
  b1 <- rnorm(k, mu_b1, sigma_b1)
  b2 <- rnorm(k, mu_b2, sigma_b2)

  w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))


  AGE <- rep(seq(0,150,length.out = n/2),each = 2) %>%
      sample  #to randomly shuffle

  DBH <- sapply(1:k, function(i) w(b0[i], b1[i], b2[i], AGE[seq(breaks[i]+1,breaks[i+1])]) + rnorm(nk[i], 0, sigma)) %>% unlist

  City <- rep(letters[1:k], times = nk)
  Precip <- rep(precip, times = nk)
  HDD <- rep(hdd, times = nk)

  dt <- data.frame(AGE, DBH, City, Precip, HDD)
#+end_src

#+RESULTS:
: [1] 32 44 19  3 52

#+begin_src R :exports results :results graphics :file ../figs/test_data_singleSpecies_multipleLocations_PrecipCityPred.png
  pc <-   ggplot(dt, aes(x = AGE, y = DBH, color = City)) + geom_point()
  pp <-   ggplot(dt, aes(x = AGE, y = DBH, color = Precip)) + geom_point()
  ph <-   ggplot(dt, aes(x = AGE, y = DBH, color = HDD)) + geom_point()
  pph <-   ggplot(dt, aes(x = AGE, y = DBH, color = HDD*Precip)) + geom_point()
  grid.arrange(pc,pp,ph, pph, nrow =2)
#+end_src

#+RESULTS:
[[file:../figs/test_data_singleSpecies_multipleLocations_PrecipCityPred.png]]

** fit to generated data

#+begin_src R :results output
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ Precip * HDD + (1 | City),
             b1 ~ Precip * HDD + (1 | City),
             b2 ~ Precip * HDD + (1 | City),
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.3), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b2"))

  m_generated_singleSpecies_multipleLocations_GroupPred_homo <- brm(form, chains = 2, cores = 2, data = dt, prior = nlprior, init_r = .3)

#+end_src

#+begin_src R
  summary(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

** fit to real data
#+begin_src R :var clim=city_climate
  d <- readRDS("../data/tidy_age_dbh.rds")
  lg <- filter(d, SpCode %in% c("LIST","GLTR","ACRU","MAGR","PYCA"))

  lg_clim <- left_join(lg,clim) %>%
      mutate(Precip = round((Precip - mean(Precip))/ 1000, 4),
             HDD = round((HDD - mean(HDD))/ 1000, 4),
             CDD = round((CDD - mean(CDD))/ 1000, 4))

#+end_src

#+RESULTS:
: Joining, by = c("Region", "City")

#+begin_src R :exports results :results graphics :file ../figs/lg_clim.png :height 200 :width 1000
  pc <-   ggplot(lg_clim, aes(x = AGE, y = DBH, color = City)) + geom_point()
  pp <-   ggplot(lg_clim, aes(x = AGE, y = DBH, color = Precip)) + geom_point()
  ph <-   ggplot(lg_clim, aes(x = AGE, y = DBH, color = HDD)) + geom_point()
  grid.arrange(pc,pp, ph, nrow =1)
#+end_src

#+RESULTS:
[[file:../figs/lg_clim.png]]

#+begin_src R :exports results :results graphics :file ../figs/list_clim_sepcities.png
  pc <-   ggplot(lg_clim, aes(x = AGE, y = DBH, color = CDD, shape = SpCode)) + geom_point() +
      facet_grid(City~SpCode)
  pc
#+end_src

#+RESULTS:
[[file:../figs/list_clim_sepcities.png]]


#+begin_src R
  lg_clim <- select(lg_clim, DBH, AGE, City, Precip, HDD)
#+end_src

#+RESULTS:

#+begin_src R
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ Precip * HDD + (1 | City),
             b1 ~ Precip * HDD + (1 | City),
             b2 ~ Precip * HDD + (1 | City),
             nl = T)


  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ t2(Precip, HDD) + (1 | City),
             b1 ~ (1 | City),
             b2 ~ (1 | City) + ( 1 | SpCode),
             nl = T)


  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.1), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.1), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.1), class = "sd", nlpar = "b2"),
               prior(cauchy(0,.1), class = "sds", nlpar = "b0"))
                                          #                 prior(cauchy(0,.1), class = "sds", nlpar = "b1"),
                                          #                prior(cauchy(0,.1), class = "sds", nlpar = "b2"))

  model_lg_climate <- brm(form, chains = 2, cores = 2, data = lg_clim, prior = nlprior, init_r = .1)

#+end_src

uncertainty seems low, esp for combinations without observations.
are betas really drawn from normal??
should there be correlations?
I expect \beta_1 and \beta_2 to be negatively correlated.
how to write?  often I see something like:


\[
\beta \sim N(\mu_{\beta}, \sigma_{\beta})
\]

pg 163 of https://www.casact.org/pubs/forum/08fforum/7Guszcza.pdf

\begin{pmatrix}
       \beta_{1} \\
       \beta_{2} \\
\end{pmatrix} \sim N
\begin{pmatrix}
\begin{matrix}
     \mu_{\beta_1} \\
     \mu_{\beta_2}
\end{matrix},
\Sigma
\end{pmatrix}


\Sigma = \begin{pmatrix}
\sigma^2_\beta_1, \
\end{pmatrix}

\[

\begin{bmatrix}
ax_{0} + bx_{1} \\
\vdots \\
ax_{n-1}+bx_{n}
\end{bmatrix} -

\]

#+begin_src R
  model_lg_climate
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ t2(Precip, HDD) + (1 | City)
         b1 ~ Precip * HDD + (1 | City)
         b2 ~ Precip * HDD + (1 | City)
   Data: lg_clim (Number of observations: 1485)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Smooth Terms:
                      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(b0_t2PrecipHDD_1)     0.66      0.56     0.01     1.58          2 1.39
sds(b0_t2PrecipHDD_2)     0.69      0.86     0.01     1.07          3 1.15
sds(b0_t2PrecipHDD_3)     0.69      0.63     0.01     1.17          2 1.33

Group-Level Effects:
~City (Number of levels: 14)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b0_Intercept)     0.61      0.45     0.01     1.04          1  4.26
sd(b1_Intercept)     1.14      0.37     0.73     2.16          2  1.25
sd(b2_Intercept)     0.55      0.41     0.08     0.96          1 11.70

Population-Level Effects:
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
b0_Intercept         1.64      0.74     0.93     2.94          1  3.71
b0_t2PrecipHDD_1     1.01      0.23     0.67     1.61          3  1.20
b0_t2PrecipHDD_2     0.66      0.25     0.18     0.87          1  2.09
b0_t2PrecipHDD_3     1.04      0.28     0.40     1.74       1101  1.00
b1_Intercept         1.33      0.51     0.92     2.52          1  1.86
b1_Precip            1.44      0.73     0.75     3.48          2  1.27
b1_HDD               1.02      0.27     0.53     1.72        336  1.01
b1_Precip:HDD        1.72      0.92     1.01     4.05          2  1.46
b2_Intercept         1.02      0.05     0.96     1.15          2  1.21
b2_Precip            0.62      0.33     0.15     0.93          1  4.78
b2_HDD               0.59      0.39     0.12     0.98          1 11.08
b2_Precip:HDD        0.72      0.39     0.16     1.10          1  4.85

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sigma     5.18      4.13     1.04     9.61          1 38.69

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 1051 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

** diagnostics
#+begin_src R :exports results :results graphics :file ../figs/mcmctrace_fram_climate_homo.png :height 1000 :width 1000
  mcmc_trace(as.matrix(model_lg_climate))
#+end_src

#+RESULTS:
[[file:../figs/mcmctrace_fram_climate_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_fram_climate_homo.png
  pp_check(model_lg_climate)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_fram_climate_homo.png]]
Not great.

** marginal effects
#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_lg_age_homo.png
  marginal_effects(model_lg_climate, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_lg_age_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_lg_age_HDD_homo.png
  marginal_effects(model_lg_climate, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_lg_age_HDD_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_lg_surface_homo.png
  marginal_effects(model_lg_climate, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_lg_surface_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_lg_climate_homo_Points.png
  conditions <- unique(select(lg_clim, Precip, HDD))

  me <- marginal_effects(model_lg_climate, effects = "AGE", conditions = conditions, re_formula = NA)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = lg_clim, aes(x = AGE, y = DBH)) +
      facet_wrap(~Precip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_lg_climate_homo_Points.png]]


* species ignorant, multiple locations, multiple climate predictors for locations, homoskedasticy
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:09
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** generate data
#+begin_src R :var clim=city_climate
  clim
#+end_src

#+RESULTS:
#+begin_example
   Region             City  CDD  HDD Precip
1  CenFla      Orlando, FL 1806  289   1367
2  GulfCo   Charleston, SC 1124 1221   1555
3  InlEmp    Claremont, CA  134  872    523
4  InlVal      Modesto, CA 1052 1439    315
5  SacVal   Sacramento, CA  773 1718    470
6  InterW  Albuquerque, NM  677 2416    250
7  LoMidW Indianapolis, IN  510 3153    392
8  MidWst  Minneapolis, MN  355 4436    622
9  NMtnPr Fort Collins, CO  349 3332    452
10 NoCalC     Berkeley, CA   39 1786    564
11 NoEast       Queens, NY  560 2819   1041
12 PacfNW     Longview, WA  157 2468   1059
13 Piedmt    Charlotte, NC  847 1891   1426
14 SacVal Santa Monica, CA  266  710    570
15 SWDsrt     Glendale, AZ 2128  637    174
16 TpIntW        Boise, ID  387 3325    417
17 Tropic     Honolulu, HI 2416    0   2206
#+end_example


#+begin_src R

  k <- 17
  expect_nk <- 30
  n <- k * expect_nk
  breaks <- c(0,sort(sample(1:100,(k-1))),n)
  nk <- sapply(1:k, function(i) breaks[i+1] - breaks[i])
  nk

  clim.gen <- filter(clim, Region %in% c("GulfCo", "SWDsrt", "MidWst","NMtnPr", "NoCalC")) %>%
      mutate(CDD = (CDD - mean(CDD)) / 1000,
             HDD = (HDD - mean(HDD)) / 1000,
             Precip = (Precip - mean(Precip)) / 1000)

  precip <- clim.gen$Precip
  hdd <- clim.gen$HDD
  cdd <- clim.gen$CDD

  u_precip_b0 <- 1
  u_precip_b1 <- .5
  u_precip_b2 <- .5

                                          #with centered city level predictors this is the mean
  u_intercept_b0 <- 1
  u_intercept_b1 <- 1
  u_intercept_b2 <- 1

  mu_b0 <- u_intercept_b0 + u_precip_b0 * precip
  sigma_b0 <- .1
  mu_b1 <-  u_intercept_b1 + u_precip_b1 * precip
  sigma_b1 <- .1
  mu_b2 <-  u_intercept_b2 + u_precip_b2 * precip
  sigma_b2 <- .1

  sigma <- 3

  b0 <- rnorm(k, mu_b0, sigma_b0)
  b1 <- rnorm(k, mu_b1, sigma_b1)
  b2 <- rnorm(k, mu_b2, sigma_b2)

  w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))


  AGE <- rep(seq(0,150,length.out = n/2),each = 2) %>%
      sample  #to randomly shuffle

  DBH <- sapply(1:k, function(i) w(b0[i], b1[i], b2[i], AGE[seq(breaks[i]+1,breaks[i+1])]) + rnorm(nk[i], 0, sigma)) %>% unlist

  City <- rep(letters[1:k], times = nk)
  Precip <- rep(precip, times = nk)


  dt <- data.frame(AGE, DBH, City, Precip)
#+end_src

#+RESULTS:
: [1] 22 16  3 46 63

#+begin_src R :exports results :results graphics :file ../figs/test_data_singleSpecies_multipleLocations_PrecipCityPred.png :height 200
  library(gridExtra)
  pc <-   ggplot(dt, aes(x = AGE, y = DBH, color = City)) + geom_point()
  pp <-   ggplot(dt, aes(x = AGE, y = DBH, color = Precip)) + geom_point()
  grid.arrange(pc,pp, nrow =1)
#+end_src

#+RESULTS:
[[file:../figs/test_data_singleSpecies_multipleLocations_PrecipCityPred.png]]

** fit to generated data

#+begin_src R :results output
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ t2(Precip, HDD) + (1 | City),
             b1 ~ 1,
             b2 ~ 1,
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(4, 3), nlpar = "b1",lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0))

  m_generated_singleSpecies_multipleLocations_GroupPred_homo <- brm(form, chains = 2, cores = 2, data = dt, prior = nlprior)

#+end_src

#+begin_src R
  summary(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

It recovered the true values pretty well, though there is definitely
more uncertainty.


#+begin_src R :exports results :results graphics :file ../figs/pairs_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png :width 1000 :height 1000
  pairs(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/plot_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png
  library(bayesplot)
  mcmc_trace(as.matrix(m_generated_singleSpecies_multipleLocations_GroupPred_homo))
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo.png
  me <- marginal_effects(m_generated_singleSpecies_multipleLocations_GroupPred_homo, effects = c("AGE:Precip"))
  me

#+end_src


#+begin_src R :exports results :results graphics :file ../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo_Precip.png

  me <- marginal_effects(m_generated_singleSpecies_multipleLocations_GroupPred_homo, effects = c("Precip"))
  me


#+end_src

#+begin_src R :exports results :results graphics :file ../figs/marginal_m_generated_singleSpecies_multipleLocations_GroupPred_homo_City.png
  cond <- data.frame(City = unique(dt$City))
  me <- marginal_effects(m_generated_singleSpecies_multipleLocations_GroupPred_homo,
                         conditions = cond,
                         effects = "AGE",
                         re_formula = NULL)
  me

#+end_src

#+begin_src R :exports results :results graphics :file ../figs/posterior_pred.png
  pp_check(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

#+begin_src R
  stancode(m_generated_singleSpecies_multipleLocations_GroupPred_homo)
#+end_src

** fit to real data
#+begin_src R :var clim=city_climate
  d <- readRDS("../data/tidy_age_dbh.rds")
  fram <- filter(d, SpCode == "FRAM")

  fram_clim <- left_join(fram,clim) %>%
      mutate(Precip = (Precip - mean(Precip))/ 1000,
             HDD = (HDD - mean(HDD))/ 1000,
             CDD = (CDD - mean(CDD))/ 1000)
#+end_src

#+RESULTS:
: Joining, by = c("Region", "City")

#+begin_src R :exports results :results graphics :file ../figs/fram_clim.png :height 200 :width 700
  pc <-   ggplot(fram_clim, aes(x = AGE, y = DBH, color = City)) + geom_point()
  pp <-   ggplot(fram_clim, aes(x = AGE, y = DBH, color = Precip)) + geom_point()
  ph <-   ggplot(fram_clim, aes(x = AGE, y = DBH, color = HDD)) + geom_point()
  grid.arrange(pc,pp, ph, nrow =1)
#+end_src

#+RESULTS:
[[file:../figs/fram_clim.png]]

#+begin_src R
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ Precip * HDD + (1 | City),
             b1 ~ 1,
             b2 ~ 1,
             nl = T)
  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(4, 3), nlpar = "b1",lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0))

  model_fram_climate_homo <- brm(form, chains = 2, cores = 2, data = fram_clim, prior = nlprior)

#+end_src


#+begin_src R
  model_fram_climate_homo
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ Precip * HDD + (1 | City)
         b1 ~ 1
         b2 ~ 1
   Data: fram_clim (Number of observations: 129)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 4)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.91      0.93     0.02     2.93         19 1.03

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      1.84      0.80     0.74     3.65         12 1.09
b0_Precip         0.95      0.52     0.28     2.22         43 1.03
b0_HDD            0.68      0.51     0.12     1.90         16 1.05
b0_Precip:HDD     1.43      0.69     0.49     3.02         49 1.02
b1_Intercept      1.05      0.17     0.71     1.39        876 1.00
b2_Intercept      1.00      0.07     0.88     1.15         79 1.02

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     6.45      0.38     5.73     7.26       1358 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 160 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/asdfas.png
  marginal_effects(model_list_climate, effect = "HDD:Precip", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/asdfas.png]]

** diagnostics
#+begin_src R :exports results :results graphics :file ../figs/mcmctrace_fram_climate_homo.png
  mcmc_trace(as.matrix(model_fram_climate_homo))
#+end_src

#+RESULTS:
[[file:../figs/mcmctrace_fram_climate_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_fram_climate_homo.png
  pp_check(model_fram_climate_homo)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_fram_climate_homo.png]]
Not great.  I think the problem arises because the effect of Precip on
the parameters may not be linear.  Also, I may need to include
Temperature related covariates

** marginal effects
#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_fram_age_homo.png
  marginal_effects(model_fram_climate_homo, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_fram_age_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_fram_surface_homo.png
  marginal_effects(model_fram_climate_homo, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_fram_ageprecip_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_age_fram_climate_homo_Points.png
  conditions <- unique(select(fram_clim, Precip, HDD))

  me <- marginal_effects(model_fram_climate_homo, effects = "AGE", conditions = conditions, re_formula = NA)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = fram_clim, aes(x = AGE, y = DBH)) +
      facet_wrap(~Precip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_age_fram_climate_homo_Points.png]]


* multiple species, multiple locations, no group level predictors, homoskedastic
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:09
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** generate data
#+begin_src R
  k <- 2  # number locations
  l <- 4  # number of species
  expect_nkl <- 20
  n <- k * l * expect_nkl
  breaks <- c(0,sort(sample(1:n,(l * k-1))),n)
  nkl <- sapply(1:(k*l), function(i) breaks[i+1] - breaks[i])
  nkl

  mu_b0 <- 1.2
  sigma_b0_k <- .3
  sigma_b0_l <- .05

  mu_b1 <- 1
  sigma_b1_k <- .05
  sigma_b1_l <- .1

  mu_b2 <- 1
  sigma_b2_k <- .1
  sigma_b2_l <- .1

  sigma <- 5

  k_b0 <- rnorm(k, 0, sigma_b0_k)
  l_b0 <- rnorm(l, 0, sigma_b0_l)
  b0 <- outer(k_b0, l_b0, FUN = "+") + mu_b0

  k_b1 <- rnorm(k, 0, sigma_b1_k)
  l_b1 <- rnorm(l, 0, sigma_b1_l)
  b1 <- outer(k_b1, l_b1, FUN = "+") + mu_b1

  k_b2 <- rnorm(k, 0, sigma_b2_k)
  l_b2 <- rnorm(l, 0, sigma_b2_l)
  b2 <- outer(k_b2, l_b2, FUN = "+") + mu_b2

  w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))

  nkl <- matrix(nkl, nrow = k, ncol = l)

  AGE <- lapply(1:k, function(i) {
      lapply(1:l, function(j) {
          runif(nkl[i,j],0,150) %>% round
      })
  })

  dt <- lapply(1:k, function(i) {
      lapply(1:l, function(j) {
          DBH <- w(b0[i,j], b1[i,j], b2[i,j], AGE[[i]][[j]]) + rnorm(nkl[i,j], 0, sigma)
          City <- letters[i]
          Species <- rev(LETTERS)[j]
          data.frame(AGE = AGE[[i]][[j]], DBH = DBH, City = City, Species = Species)
      })
  })

  dt <- bind_rows(unlist(dt,recursive = F))
#+end_src

#+RESULTS:
: [1] 36  9  4 41 24 21  9 16
: There were 15 warnings (use warnings() to see them)

#+begin_src R :exports results :results graphics :file ../figs/test_data_multipleSpecies_multipleLocations_PrecipCityPred.png
  p <-   ggplot(dt, aes(x = AGE, y = DBH)) + geom_point() + facet_grid(City ~ Species)
  p
#+end_src

#+RESULTS:
[[file:../figs/test_data_multipleSpecies_multipleLocations_PrecipCityPred.png]]

** fit to generated data

#+begin_src R :results output
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ 1 + (1 | ID | City) + (1 | ID2 | Species),
             b1 ~ 1 + (1 | ID | City) + (1 | ID2 | Species),
             b2 ~ 1 + (1 | ID | City) + (1 | ID2 | Species),
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.3), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b2"))


  m_generated_multipleSpecies_multipleLocations_homo <- brm(form, chains = 2, cores = 2, data = dt, prior = nlprior, init_r = .3)

#+end_src

#+begin_src R
  summary(m_generated_multipleSpecies_multipleLocations_homo)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1 + (1 | ID | City) + (1 | ID2 | Species)
         b1 ~ 1 + (1 | ID | City) + (1 | ID2 | Species)
         b2 ~ 1 + (1 | ID | City) + (1 | ID2 | Species)
   Data: dt (Number of observations: 160)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 2)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.22      0.24     0.00     0.86       1281
sd(b1_Intercept)                   0.37      0.42     0.01     1.56        505
sd(b2_Intercept)                   0.14      0.12     0.01     0.48        872
cor(b0_Intercept,b1_Intercept)    -0.08      0.51    -0.91     0.85       1196
cor(b0_Intercept,b2_Intercept)    -0.08      0.51    -0.90     0.85       1379
cor(b1_Intercept,b2_Intercept)     0.10      0.48    -0.81     0.90       1028
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.00

~Species (Number of levels: 4)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.18      0.20     0.01     0.70        576
sd(b1_Intercept)                   0.14      0.15     0.00     0.54        753
sd(b2_Intercept)                   0.18      0.10     0.05     0.43        603
cor(b0_Intercept,b1_Intercept)     0.01      0.51    -0.86     0.89       1633
cor(b0_Intercept,b2_Intercept)    -0.12      0.49    -0.91     0.80        774
cor(b1_Intercept,b2_Intercept)     0.02      0.51    -0.88     0.91        728
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.01

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.40      0.27     0.87     2.00        865 1.01
b1_Intercept     1.51      0.42     0.99     2.61        427 1.00
b2_Intercept     0.83      0.14     0.54     1.13        680 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     5.23      0.31     4.64     5.87       2000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 59 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot__multipleSpecies_multipleLocations_homo.png
  plot(m_generated_multipleSpecies_multipleLocations_homo, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot__multipleSpecies_multipleLocations_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_m_generated_multipleSpecies_multipleLocations_homo_cor.png :width 800
  cond <- expand.grid(Species = unique(dt$Species), City = unique(dt$City))
  rownames(cond) <- paste0(cond$Species, cond$City)
  me <- marginal_effects(m_generated_multipleSpecies_multipleLocations_homo,
                         re_formula = NULL, method = "predict",
                         conditions = cond)

  ggplot() +
      geom_line(data = me$AGE, color = "blue", aes(x = AGE, y = estimate__)) +
      geom_ribbon(data = me$AGE, alpha = .3, aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__)) +
      geom_point(data = dt, aes(x = AGE, y = DBH)) +
      facet_grid(City ~ Species)
#+end_src

#+RESULTS:
[[file:../figs/marginal_m_generated_multipleSpecies_multipleLocations_homo_cor.png]]

** fit real data
#+begin_src R
  species.to.select <- c("ACPL", "ACRU", "ACSA1", "ACSA2", "BEPA", "FRAM","FRPE", "TIAM", "TICO")

  dm <- d %>% filter(SpCode %in% species.to.select) %>%
      filter(City %in% c("Fort Collins, CO", "Minneapolis, MN","Boise, ID",  "Longview, WA")) %>%
      rename(Species = SpCode)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/d_multipleSpecies_multipleLocations.png :height 700 :width 700
  p <-   ggplot(dm, aes(x = AGE, y = DBH)) + geom_point(size = .5) + facet_grid(City ~ Species)
  p
#+end_src

#+RESULTS:
[[file:../figs/d_multipleSpecies_multipleLocations.png]]

This would be a good figure to plot the existing equations on, and
then plot my equations on.
[[file:../figs/d_multipleSpecies_multipleLocations.png]]

#+begin_src R

  model_multipleSpecies_multipleCities_homo <- update(m_generated_multipleSpecies_multipleLocations_homo, newdata = dm, cores = 2, chains = 4, init_r = .4, control = list(adapt_delta = .9, max_treedepth = 15))

#+end_src

#+begin_src R
  model_multipleSpecies_multipleCities_homo
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1 + (1 | ID | City) + (1 | ID2 | Species)
         b1 ~ 1 + (1 | ID | City) + (1 | ID2 | Species)
         b2 ~ 1 + (1 | ID | City) + (1 | ID2 | Species)
   Data: dm (Number of observations: 1192)
Samples: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 4000

Group-Level Effects:
~City (Number of levels: 4)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.56      0.28     0.24     1.27       2182
sd(b1_Intercept)                   0.37      0.19     0.16     0.87       1710
sd(b2_Intercept)                   0.21      0.08     0.10     0.42       2172
cor(b0_Intercept,b1_Intercept)     0.14      0.35    -0.56     0.76       2862
cor(b0_Intercept,b2_Intercept)    -0.54      0.33    -0.95     0.27       2953
cor(b1_Intercept,b2_Intercept)    -0.35      0.34    -0.87     0.39       3356
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.00

~Species (Number of levels: 8)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.56      0.20     0.29     1.07       1659
sd(b1_Intercept)                   0.30      0.09     0.17     0.53       2366
sd(b2_Intercept)                   0.10      0.03     0.05     0.17       2264
cor(b0_Intercept,b1_Intercept)    -0.47      0.26    -0.86     0.15       2580
cor(b0_Intercept,b2_Intercept)    -0.35      0.29    -0.81     0.29       2843
cor(b1_Intercept,b2_Intercept)    -0.48      0.27    -0.89     0.14       2651
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.50      0.34     0.84     2.20       1689 1.00
b1_Intercept     1.16      0.25     0.75     1.73       1595 1.00
b2_Intercept     1.08      0.11     0.86     1.30       2065 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     8.16      0.17     7.84     8.51       4000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 43 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

** diagnostics
#+begin_src R :exports results :results graphics :file ../figs/model_multipleSpecies_multipleCities_homo_ppcheck.png
  pp_check(model_multipleSpecies_multipleCities_homo)
#+end_src

#+RESULTS:
[[file:../figs/model_multipleSpecies_multipleCities_homo_ppcheck.png]]

** marginal
#+begin_src R :exports results :results graphics :file ../figs/marginal_dm_multipleSpecies_multipleCities_homo_cor.png :width 800
  cond <- expand.grid(Species = unique(dm$Species), City = unique(dm$City))
  rownames(cond) <- paste0(cond$Species, cond$City)
  me <- marginal_effects(model_multipleSpecies_multipleCities_homo,
                         re_formula = NULL, method = "predict",
                         conditions = cond)

  ggplot() +
      geom_point(data = dm, aes(x = AGE, y = DBH), size = .8) +
      geom_line(data = me$AGE, color = "blue", aes(x = AGE, y = estimate__)) +
      geom_ribbon(data = me$AGE, alpha = .3, aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__)) +
      facet_grid(City ~ Species)
#+end_src

#+RESULTS:
[[file:../figs/marginal_dm_multipleSpecies_multipleCities_homo_cor.png]]




[[file:../figs/marginal_dm_multipleSpecies_multipleCities_homo.png]]


* multiple species, nested within Genus, multiple locations, no group level predictors, homoskedastic
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:09
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** generate data
#+begin_src R

  k <- 2  # number locations
  l <- 3  # number of genera
  m <- c(1,2,3) # number of species per genera
  expect_nkl <- 20
  n <- k * sum(m) * expect_nkl
  breaks <- c(0,sort(sample(1:n,(sum(m) * k-1))),n)
  nkl <- sapply(1:(k*sum(m)), function(i) breaks[i+1] - breaks[i])
  nkl

  mu_b0 <- 1.2
  sigma_b0_k <- .3
  sigma_b0_l <- .05
  sigma_b0_m <- .02

  mu_b1 <- 1
  sigma_b1_k <- .05
  sigma_b1_l <- .1
  sigma_b1_m <- .05

  mu_b2 <- 1
  sigma_b2_k <- .1
  sigma_b2_l <- .1
  sigma_b2_m <- .05

  sigma <- 5

  k_b0 <- rnorm(k, 0, sigma_b0_k)
  l_b0 <- rnorm(l, 0, sigma_b0_l)
  l_b0 <-  sapply(seq_along(m), function(i) l_b0[i]  +rnorm(m[i], 0, sigma_b0_l)) %>% unlist()
  b0 <- outer(k_b0, l_b0, FUN = "+") + mu_b0

  k_b1 <- rnorm(k, 0, sigma_b1_k)
  l_b1 <- rnorm(l, 0, sigma_b1_l)
  l_b1 <-  sapply(seq_along(m), function(i) l_b1[i]  +rnorm(m[i], 0, sigma_b1_l)) %>% unlist()
  b1 <- outer(k_b1, l_b1, FUN = "+") + mu_b1

  k_b2 <- rnorm(k, 0, sigma_b2_k)
  l_b2 <- rnorm(l, 0, sigma_b2_l)
  l_b2 <-  sapply(seq_along(m), function(i) l_b2[i]  +rnorm(m[i], 0, sigma_b2_l)) %>% unlist()
  b2 <- outer(k_b2, l_b2, FUN = "+") + mu_b2

  w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))

  nkl <- matrix(nkl, nrow = k, ncol = sum(m))

  AGE <- lapply(1:k, function(i) {
      lapply(1:sum(m), function(j) {
          runif(nkl[i,j],0,150) %>% round
      })
  })

  dt <- lapply(1:k, function(i) {
      lapply(1:sum(m), function(j) {
          DBH <- w(b0[i,j], b1[i,j], b2[i,j], AGE[[i]][[j]]) + rnorm(nkl[i,j], 0, sigma)
          City <- letters[i]
          Species <- rev(LETTERS)[j]
          Genus <- rev(LETTERS)[rep(m,m)[j]]
          data.frame(AGE = AGE[[i]][[j]], DBH = DBH, City = City, Species = Species, Genus = Genus)
      })
  })

  dt <- bind_rows(unlist(dt,recursive = F)) %>%
      mutate(GenusSpecies = paste0(Genus, Species))

  nested <- dt
#+end_src

#+RESULTS:
:
: [1]  7  8 14 77 14  2  6  4 26  5 27 50
: There were 34 warnings (use warnings() to see them)

#+begin_src R :exports results :results graphics :file ../figs/test_data_multipleGenusSpecies_multipleLocations_PrecipCityPred.png :height 400
  p <-   ggplot(dt, aes(x = AGE, y = DBH, color = GenusSpecies)) + geom_point() + facet_grid(City ~ Genus)
  p
#+end_src

#+RESULTS:
[[file:../figs/test_data_multipleGenusSpecies_multipleLocations_PrecipCityPred.png]]

** fit to generated data

b ~ (1 | genus / species)

#+begin_src R :results output
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species),
             b1 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species),
             b2 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species),
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.3), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.2), class = "sd", nlpar = "b2"))


  m_generated_multipleSpecies_nestedGenus_multipleLocations_homo_cor <- brm(form, chains = 2, cores = 2, data = dt, prior = nlprior, init_r = .3)

#+end_src

#+begin_src R
  summary(m_generated_multipleSpecies_nestedGenus_multipleLocations_homo_cor)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species)
         b1 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species)
         b2 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species)
   Data: dt (Number of observations: 240)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~City (Number of levels: 2)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.98      0.85     0.19     2.40          4
sd(b1_Intercept)                   0.23      0.47     0.01     1.36         16
sd(b2_Intercept)                   0.26      0.16     0.05     0.50          6
cor(b0_Intercept,b1_Intercept)     0.08      0.53    -0.90     0.75          7
cor(b0_Intercept,b2_Intercept)    -0.14      0.41    -0.92     0.59         15
cor(b1_Intercept,b2_Intercept)    -0.02      0.45    -0.79     0.85         27
                               Rhat
sd(b0_Intercept)               2.77
sd(b1_Intercept)               1.07
sd(b2_Intercept)               1.49
cor(b0_Intercept,b1_Intercept) 1.36
cor(b0_Intercept,b2_Intercept) 1.15
cor(b1_Intercept,b2_Intercept) 1.09

~Genus (Number of levels: 3)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.05      0.07     0.00     0.27         25
sd(b1_Intercept)                   0.13      0.18     0.01     0.58         21
sd(b2_Intercept)                   0.07      0.08     0.00     0.30         27
cor(b0_Intercept,b1_Intercept)    -0.12      0.48    -0.86     0.86         15
cor(b0_Intercept,b2_Intercept)    -0.21      0.57    -0.90     0.87          8
cor(b1_Intercept,b2_Intercept)     0.14      0.47    -0.84     0.84         15
                               Rhat
sd(b0_Intercept)               1.07
sd(b1_Intercept)               1.09
sd(b2_Intercept)               1.10
cor(b0_Intercept,b1_Intercept) 1.14
cor(b0_Intercept,b2_Intercept) 1.31
cor(b1_Intercept,b2_Intercept) 1.15

~Genus:Species (Number of levels: 6)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.05      0.04     0.00     0.15         40
sd(b1_Intercept)                   0.10      0.09     0.01     0.33         32
sd(b2_Intercept)                   0.09      0.04     0.04     0.20        541
cor(b0_Intercept,b1_Intercept)    -0.26      0.54    -0.88     0.77          6
cor(b0_Intercept,b2_Intercept)    -0.15      0.48    -0.84     0.81         10
cor(b1_Intercept,b2_Intercept)     0.20      0.56    -0.85     0.88          8
                               Rhat
sd(b0_Intercept)               1.04
sd(b1_Intercept)               1.05
sd(b2_Intercept)               1.02
cor(b0_Intercept,b1_Intercept) 1.38
cor(b0_Intercept,b2_Intercept) 1.17
cor(b1_Intercept,b2_Intercept) 1.31

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.52      0.44     0.74     2.17          5 1.74
b1_Intercept     1.07      0.34     0.71     2.35         15 1.08
b2_Intercept     1.22      0.21     0.84     1.52          5 1.68

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     5.03      0.25     4.64     5.61         13 1.16

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 571 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot__multipleSpecies_nestedGenus_multipleLocations_homo.png
  plot(m_generated_multipleSpecies_nestedGenus_multipleLocations_homo, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot__multipleSpecies_nestedGenus_multipleLocations_homo.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_m_generated_multipleSpecies_nestedGenus_multipleLocations_homo.png :width 800
  cond <- unique(select(dt, City, Species, Genus))
  me <- marginal_effects(m_generated_multipleSpecies_nestedGenus_multipleLocations_homo_cor,
                         re_formula = NULL, method = "predict",
                         conditions = cond)

  ggplot() +
      geom_line(data = me$AGE, aes(color = Species, x = AGE, y = estimate__)) +
      geom_ribbon(data = me$AGE, alpha = .3, aes(group = Species, x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__)) +
      geom_point(data = dt, aes(x = AGE, y = DBH)) +
      facet_grid(City ~ Genus)
#+end_src

#+RESULTS:
[[file:../figs/marginal_m_generated_multipleSpecies_nestedGenus_multipleLocations_homo.png]]


** fit to real data
#+begin_src R
  d <- readRDS("../data/tidy_age_dbh.rds") %>%
      mutate(Genus = stringr::str_extract(ScientificName, '\\w*'))

  species.to.select <- c("ACPL", "ACRU", "ACSA1", "ACSA2", "BEPA", "FRAM","FRPE", "TIAM", "TICO")

  dm <- d %>% filter(SpCode %in% species.to.select) %>%
      filter(City %in% c("Fort Collins, CO", "Minneapolis, MN","Boise, ID",  "Longview, WA")) %>%
      rename(Species = SpCode)
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/d_multipleSpecies_nestedGenus_multipleLocations.png :height 700 :width 700
  p <-   ggplot(dm, aes(x = AGE, y = DBH, color = Species)) + geom_point() + facet_grid(City ~ Genus)
  p
#+end_src

#+RESULTS:
[[file:../figs/d_multipleSpecies_nestedGenus_multipleLocations.png]]


range of realistic values:
b0 : 50 - 250
b1 : 0.01 - 0.1
b2 : .5 - 1.5

#+begin_src R

  model_multipleSpecies_nestedGenus_multipleCities_homo_cor <- update(m_generated_multipleSpecies_nestedGenus_multipleLocations_homo_cor, newdata = dm, cores = 2, chains = 4, init_r = .3, control = list(adapt_delta = .85, max_treedepth = 15))

#+end_src

#+begin_src R
  model_multipleSpecies_nestedGenus_multipleCities_homo_cor
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species)
         b1 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species)
         b2 ~ 1 + (1 | ID | City) + (1 | ID2 | Genus) + (1 | ID3 | Genus:Species)
   Data: dm (Number of observations: 1192)
Samples: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 4000

Group-Level Effects:
~City (Number of levels: 4)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.55      0.27     0.24     1.24       2352
sd(b1_Intercept)                   0.37      0.21     0.16     0.94       1661
sd(b2_Intercept)                   0.21      0.09     0.10     0.45       2257
cor(b0_Intercept,b1_Intercept)     0.15      0.35    -0.56     0.76       3335
cor(b0_Intercept,b2_Intercept)    -0.53      0.34    -0.96     0.28       4000
cor(b1_Intercept,b2_Intercept)    -0.34      0.34    -0.85     0.44       4000
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.00

~Genus (Number of levels: 3)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.23      0.24     0.01     0.82       2365
sd(b1_Intercept)                   0.13      0.15     0.00     0.52       2633
sd(b2_Intercept)                   0.08      0.08     0.00     0.29       2480
cor(b0_Intercept,b1_Intercept)    -0.03      0.50    -0.89     0.87       4000
cor(b0_Intercept,b2_Intercept)    -0.12      0.51    -0.93     0.85       4000
cor(b1_Intercept,b2_Intercept)    -0.10      0.51    -0.92     0.86       4000
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.00

~Genus:Species (Number of levels: 8)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.54      0.19     0.28     1.00       1965
sd(b1_Intercept)                   0.31      0.10     0.17     0.54       2819
sd(b2_Intercept)                   0.09      0.03     0.04     0.17       1884
cor(b0_Intercept,b1_Intercept)    -0.52      0.27    -0.91     0.12       2825
cor(b0_Intercept,b2_Intercept)    -0.24      0.33    -0.77     0.47       2172
cor(b1_Intercept,b2_Intercept)    -0.46      0.28    -0.88     0.21       2623
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.00
sd(b2_Intercept)               1.00
cor(b0_Intercept,b1_Intercept) 1.00
cor(b0_Intercept,b2_Intercept) 1.00
cor(b1_Intercept,b2_Intercept) 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     1.48      0.35     0.77     2.15       1875 1.00
b1_Intercept     1.21      0.27     0.77     1.83       1814 1.00
b2_Intercept     1.08      0.13     0.82     1.34       2205 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     8.17      0.17     7.84     8.51       4000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 53 divergent transitions after warmup. Increasing adapt_delta above 0.85 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example


#+begin_src R :exports results :results graphics :file ../figs/pairs_model_multipleSpecies_nestedGenus_multipleCities_homo.png :height 2000 :width 2000
  pairs(model_multipleSpecies_nestedGenus_multipleCities_homo_cor)
#+end_src

#+RESULTS:
[[file:../figs/pairs_model_multipleSpecies_nestedGenus_multipleCities_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_model_multipleSpecies_nestedGenus_multipleCities_homo_cor.png
  cond <- unique(select(dm, City, Species, Genus))
  me <- marginal_effects(model_multipleSpecies_nestedGenus_multipleCities_homo_cor,
                         re_formula = NULL, method = "predict",
                         conditions = cond)

  ggplot() +
      geom_line(data = me$AGE, aes(color = Species, x = AGE, y = estimate__)) +
      geom_ribbon(data = me$AGE, alpha = .3, aes(group = Species, x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__)) +
      geom_point(data = dm, aes(x = AGE, y = DBH, color = Species), size = .5) +
      facet_grid(City ~ Genus)

#+end_src

#+RESULTS:
[[file:../figs/marginal_model_multipleSpecies_nestedGenus_multipleCities_homo_cor.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal2_model_multipleSpecies_nestedGenus_multipleCities_homo_cor.png
  City = unique(dm$City)
  cond <- unique(select(dm, Species, Genus))
  cond <- cond[rep(1:nrow(cond),times = length(City)),]
  cond$City <- rep(City, each = 8)


  me <- marginal_effects(model_multipleSpecies_nestedGenus_multipleCities_homo_cor,
                         re_formula = NULL, method = "predict",
                         conditions = cond)

  ggplot() +
      geom_line(data = me$AGE, aes(color = Species, x = AGE, y = estimate__)) +
      geom_ribbon(data = me$AGE, alpha = .3, aes(group = Species, x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__)) +
      geom_point(data = dm, aes(x = AGE, y = DBH, color = Species), size = .5) +
      facet_grid(City ~ Genus)

#+end_src

#+RESULTS:
[[file:../figs/marginal2_model_multipleSpecies_nestedGenus_multipleCities_homo_cor.png]]


* multiple species, nested within Genus, multiple locations, group level predictors for asymtope, homoskedastic
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:09
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
#+begin_src R
  d <- readRDS("../data/tidy_age_dbh.rds") %>%
      mutate(Genus = stringr::str_extract(ScientificName, '\\w*'))

  lg <- filter(d, SpCode %in% c("LIST","GLTR","ACRU","MAGR","PYCA", "ACSA1", "ACSA2", "ACNE", "FRPE", "FRAM", "ACPL", "ULAM", "ULPU"))

  lg_clim <- left_join(lg,clim) %>%
      mutate(Precip = round((Precip - mean(Precip))/ 1000, 4),
             HDD = round((HDD - mean(HDD))/ 1000, 4),
             CDD = round((CDD - mean(CDD))/ 1000, 4))
#+end_src

#+RESULTS:
: Joining, by = c("Region", "City")

#+begin_src R
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             b0 ~ t2(Precip, HDD) + (1 | City) + ( 1 | Genus / SpCode),
             b1 ~ (1 | City)  + ( 1 | Genus / SpCode),
             b2 ~ (1 | City) + ( 1 | Genus / SpCode),
             nl = T)


  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.1), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.1), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.1), class = "sd", nlpar = "b2"),
               prior(normal(.3,.25), class = "sds", nlpar = "b0"))
                                          #                 prior(cauchy(0,.1), class = "sds", nlpar = "b1"),
                                          #                prior(cauchy(0,.1), class = "sds", nlpar = "b2"))

  model_lg_climate_GenSp <- brm(form, chains = 2, cores = 2, data = lg_clim, prior = nlprior, init_r = .3)

#+end_src

#+begin_src R
  model_lg_climate_GenSp
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ t2(Precip, HDD) + (1 | City) + (1 | Genus/SpCode)
         b1 ~ (1 | City) + (1 | Genus/SpCode)
         b2 ~ (1 | City) + (1 | Genus/SpCode)
   Data: lg_clim (Number of observations: 2953)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Smooth Terms:
                      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(b0_t2PrecipHDD_1)     0.29      0.56     0.00     2.00        601 1.00
sds(b0_t2PrecipHDD_2)     0.24      0.56     0.00     1.39        601 1.00
sds(b0_t2PrecipHDD_3)     0.61      1.79     0.01     6.26        156 1.01

Group-Level Effects:
~City (Number of levels: 14)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.16      0.20     0.00     0.70         69 1.01
sd(b1_Intercept)     0.18      0.06     0.09     0.33        675 1.00
sd(b2_Intercept)     0.11      0.03     0.07     0.18        505 1.00

~Genus (Number of levels: 7)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.30      0.35     0.00     1.11        139 1.01
sd(b1_Intercept)     0.09      0.08     0.00     0.28        560 1.00
sd(b2_Intercept)     0.07      0.05     0.00     0.19        518 1.00

~Genus:SpCode (Number of levels: 13)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.52      0.21     0.22     1.03        471 1.00
sd(b1_Intercept)     0.22      0.09     0.08     0.42        272 1.00
sd(b2_Intercept)     0.10      0.03     0.05     0.18        662 1.00

Population-Level Effects:
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept         2.35      0.33     1.69     3.04        378 1.00
b0_t2PrecipHDD_1     0.49      0.13     0.29     0.79        287 1.00
b0_t2PrecipHDD_2     0.40      0.17     0.13     0.79        643 1.00
b0_t2PrecipHDD_3     0.62      0.23     0.26     1.14        309 1.00
b1_Intercept         0.97      0.12     0.74     1.23        625 1.00
b2_Intercept         0.94      0.06     0.82     1.06        472 1.01

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     9.85      0.13     9.59    10.11       2000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 27 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/pp_check_lg_climate_GenSp.png
  pp_check(model_lg_climate_GenSp)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_lg_climate_GenSp.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_age_precip_homo.png
  marginal_effects(model_lg_climate_GenSp, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_age_precip_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_age_HDD_homo.png
  marginal_effects(model_lg_climate_GenSp, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_age_HDD_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_surface_homo.png
  marginal_effects(model_lg_climate_GenSp, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_surface_homo.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_homo_Points.png
  conditions <- unique(select(lg_clim, Precip, HDD))

  me <- marginal_effects(model_lg_climate_GenSp, effects = "AGE", conditions = conditions, re_formula = NA)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = lg_clim, aes(x = AGE, y = DBH)) +
      facet_wrap(~Precip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_homo_Points.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_homo_Points_hddprecip.png

  conditions <- unique(select(lg_clim, Genus, SpCode))

  me <- marginal_effects(model_lg_climate_GenSp, effects = "AGE", conditions = conditions, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__, color = SpCode)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__, group = SpCode, fill = SpCode), alpha = .3) +
      geom_point(data = lg_clim, aes(x = AGE, y = DBH, color = SpCode)) +
      facet_wrap(~Genus)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_homo_Points_hddprecip.png]]



#+begin_src R
  saveRDS(model_lg_climate_GenSp, "../models/model_lg_climate_GenSp.rds")
#+end_src

#+RESULTS:


* multiple species, nested within Genus, multiple locations, group level predictors for asymtope, heteroskedastic
:PROPERTIES:
:ARCHIVE_TIME: 2018-08-30 Thu 21:09
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
#+begin_src R
  ## d <- readRDS("../data/tidy_age_dbh.rds") %>%
  ##     mutate(Genus = stringr::str_extract(ScientificName, '\\w*'))

  ## lg <- filter(d, SpCode %in% c("LIST","GLTR","ACRU","MAGR","PYCA", "ACSA1", "ACSA2", "ACNE", "FRPE", "FRAM", "ACPL", "ULAM", "ULPU"))

  ## lg_clim <- left_join(lg,clim) %>%
  ##           mutate(Precip = round((Precip - mean(Precip))/ 1000, 4),
  ##                  HDD = round((HDD - mean(HDD))/ 1000, 4),
  ##                  CDD = round((CDD - mean(CDD))/ 1000, 4))
  d <- readRDS("../data/age_dbh_testing.rds")
#+end_src

#+RESULTS:

#+begin_src R
  form <- bf(DBH ~ 100*b0 * (1 - exp(-(b1/100) * AGE ^ b2)),
             sigma ~ s(AGE),
             b0 ~ t2(Precip, HDD) + (1 | City) + ( 1 | Genus / Species),
             b1 ~ (1 | City)  + ( 1 | Genus / Species),
             b2 ~ (1 | City) + ( 1 | Genus / Species),
             nl = T)

  nlprior <- c(prior(gamma(4, 3), nlpar = "b0",lb = 0),
               prior(gamma(5, 1), nlpar = "b1", lb = 0),
               prior(gamma(4, 3), nlpar = "b2",lb = 0),
               prior(cauchy(0,.1), class = "sd", nlpar = "b0"),
               prior(cauchy(0,.1), class = "sd", nlpar = "b1"),
               prior(cauchy(0,.1), class = "sd", nlpar = "b2"),
               prior(normal(.3,.1), class = "sds", nlpar = "b0"),
               prior(normal(1,.3), class = "b", dpar = "sigma"),
               prior(normal(1,.3), class = "sds", dpar = "sigma"),
               prior(normal(0,1), class = "Intercept", dpar = "sigma"))

  mod <- brm(form, chains = 2, cores = 2, data = d, prior = nlprior, init_r = .3)

                                          #saveRDS(mod, ..
#+end_src

#+RESULTS:
: Error: The following variables are missing in 'data':
: 'SpCode'

#+begin_src R
  make_stancode(form, lg_clim, prior = nlprior)
#+end_src

#+RESULTS:

#+begin_src R
  model_lg_climate_GenSp_hetero_smooth
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         sigma ~ s(AGE)
         b0 ~ t2(Precip, HDD) + (1 | City) + (1 | Genus/SpCode)
         b1 ~ (1 | City) + (1 | Genus/SpCode)
         b2 ~ (1 | City) + (1 | Genus/SpCode)
   Data: lg_clim (Number of observations: 2953)
Samples: 2 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 1000

Smooth Terms:
                      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(b0_t2PrecipHDD_1)     0.35      0.20     0.03     0.77       1000 1.00
sds(b0_t2PrecipHDD_2)     0.34      0.21     0.02     0.79       1000 1.00
sds(b0_t2PrecipHDD_3)     0.35      0.22     0.01     0.82       1000 1.00
sds(sigma_sAGE_1)         2.61      0.99     1.31     5.15        477 1.00

Group-Level Effects:
~City (Number of levels: 14)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.72      0.51     0.04     1.81          1 1.78
sd(b1_Intercept)     0.33      0.09     0.20     0.55        239 1.02
sd(b2_Intercept)     0.13      0.04     0.07     0.22          2 1.22

~Genus (Number of levels: 7)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.15      0.15     0.00     0.53        318 1.00
sd(b1_Intercept)     0.10      0.07     0.01     0.27        296 1.01
sd(b2_Intercept)     0.03      0.03     0.00     0.11          3 1.16

~Genus:SpCode (Number of levels: 13)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.34      0.11     0.18     0.59         23 1.03
sd(b1_Intercept)     0.14      0.06     0.03     0.27        163 1.02
sd(b2_Intercept)     0.05      0.02     0.02     0.10          2 1.28

Population-Level Effects:
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept      2.12      0.01     2.09     2.14       1000 1.02
b0_Intercept         2.07      0.36     1.32     2.79          2 1.23
b0_t2PrecipHDD_1     0.49      0.18     0.18     0.89        565 1.01
b0_t2PrecipHDD_2     0.42      0.20     0.13     0.90         28 1.03
b0_t2PrecipHDD_3     0.54      0.26     0.14     1.11          3 1.17
b1_Intercept         1.03      0.13     0.78     1.29        407 1.01
b2_Intercept         0.97      0.05     0.87     1.07          4 1.10
sigma_sAGE_1         1.37      0.32     0.81     2.04        750 1.01

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 3 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/pp_check_lg_climate_GenSp_hetero.png
  pp_check(model_lg_climate_GenSp_hetero_smooth) + xlim(c(-15,100))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_lg_climate_GenSp_hetero.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_hetero_age_precip.png
  marginal_effects(model_lg_climate_GenSp_hetero_smooth, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_hetero_age_precip.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_hetero_age_HDD.png
  marginal_effects(model_lg_climate_GenSp_hetero_smooth, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_hetero_age_HDD.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_hetero_surface.png
  marginal_effects(model_lg_climate_GenSp_hetero_smooth, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_hetero_surface.png]]


#+begin_src R :exports results :results graphics :file ../figs/sigma_smooth.png
  marginal_smooths(model_lg_climate_GenSp_hetero_smooth, smooths = "s(AGE)", ask = F)
#+end_src

#+RESULTS:
[[file:../figs/sigma_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/sigma_smooth_precipHDD.png
  marginal_smooths(model_lg_climate_GenSp_hetero_smooth, smooths = "t2(Precip, HDD)", ask = F)
#+end_src

#+RESULTS:
[[file:../figs/sigma_smooth_precipHDD.png]]



#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_hetero_Points.png
  conditions <- unique(select(lg_clim, Precip, HDD))

  me <- marginal_effects(model_lg_climate_GenSp_hetero_smooth, effects = "AGE", conditions = conditions, re_formula = NA)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = lg_clim, aes(x = AGE, y = DBH)) +
      facet_wrap(~Precip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_hetero_Points.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_lg_climate_GenSp_hetero_Points_hddprecip.png

  conditions <- unique(select(lg_clim, Genus, SpCode))

  me <- marginal_effects(model_lg_climate_GenSp_hetero_smooth, effects = "AGE", conditions = conditions, re_formula = NULL)

  ggplot(me$AGE) +
      geom_point(data = lg_clim, aes(x = AGE, y = DBH, color = SpCode),alpha = .3) +
      geom_line(aes(x = AGE, y = estimate__, color = SpCode)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__, group = SpCode, fill = SpCode), alpha = .3) +
      facet_wrap(~Genus)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_lg_climate_GenSp_hetero_Points_hddprecip.png]]



#+begin_src R
  saveRDS(model_lg_climate_GenSp_hetero, "../models/model_lg_climate_GenSp_hetero.rds")
#+end_src

#+RESULTS:


* TODO genus: many;  species: many; cities: many; climate: b0linint; hetero: no  Changed to Gamma Family
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b0linint_hetero_no.R
:ARCHIVE_TIME: 2018-08-30 Thu 21:28
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_TODO: TODO
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b0linint"
  hetero <- "no"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000, family = Gamma('log'))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

#+RESULTS:

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b0linint_hetero_no.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b0linint_hetero_no.R
:
: sent 390 bytes  received 54 bytes  59.20 bytes/sec
: total size is 1164  speedup is 2.62
: You have new mail in /var/mail/erker

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b0linint_hetero_no.R &
  exit
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b0linint_hetero_no.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b0linint_hetero_no.rds
:
: sent 33044 bytes  received 27940683 bytes  3291026.71 bytes/sec
: total size is 28086967  speedup is 1.00
: You have new mail in /var/mail/erker

** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b0linint_hetero_no.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = log; shape = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ Precip * GDD + (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 6000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample   Rhat
sd(b0_Intercept)     0.73      0.36     0.20     1.36          3   5.64
sd(b1_Intercept)     0.64      0.32     0.10     1.03          3   6.25
sd(b2_Intercept)     0.70      0.49     0.03     1.31          3 111.82

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b0_Intercept)     0.71      0.43     0.02     1.29          3  6.24
sd(b1_Intercept)     0.77      0.49     0.02     1.18          3 24.61
sd(b2_Intercept)     0.62      0.43     0.00     1.02          3 62.82

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample   Rhat
sd(b0_Intercept)     0.72      0.35     0.12     1.09          3   6.14
sd(b1_Intercept)     0.76      0.52     0.01     1.35          3  33.25
sd(b2_Intercept)     0.67      0.46     0.02     1.04          3 108.67

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
b0_Intercept      1.52      0.43     0.96     2.48          4  1.92
b0_Precip         0.77      0.24     0.25     0.96          3  2.73
b0_GDD            0.48      0.18     0.15     0.71          3  4.20
b0_Precip:GDD     0.80      0.32     0.21     1.19          3  3.96
b1_Intercept      0.95      0.13     0.67     1.25         22  1.08
b2_Intercept      0.51      0.24     0.24     0.88          3 33.48

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
shape     3.93      3.46     0.65     8.88          3 29.67

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 4000 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example




#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b0 * (1 - exp(-(b1/100) * AGE^b2))
         b0 ~ Precip * CDD + (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 6000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.46      0.15     0.25     0.81       2489 1.00
sd(b1_Intercept)     0.32      0.08     0.19     0.51       3747 1.00
sd(b2_Intercept)     0.13      0.03     0.08     0.19       3350 1.00

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.28      0.37     0.00     1.38        298 1.02
sd(b1_Intercept)     0.08      0.07     0.00     0.25       1372 1.00
sd(b2_Intercept)     0.05      0.04     0.00     0.14       1246 1.00

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     1.05      0.31     0.44     1.73        580 1.01
sd(b1_Intercept)     0.30      0.07     0.19     0.44       2921 1.00
sd(b2_Intercept)     0.13      0.03     0.08     0.19       2753 1.00

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.36      0.30     1.75     2.94       2771 1.00
b0_Precip         0.76      0.23     0.37     1.26       6000 1.00
b0_CDD            0.96      0.23     0.54     1.45       4593 1.00
b0_Precip:CDD     0.96      0.31     0.42     1.65       6000 1.00
b1_Intercept      1.13      0.12     0.91     1.37       2769 1.00
b2_Intercept      0.88      0.05     0.79     0.97       2584 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     9.72      0.10     9.53     9.91       6000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 97 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGECDD_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png
  marginal_effects(mod, effects = "AGE:CDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGECDD_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png
  marginal_effects(mod, effects = "Precip:CDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b0linint_hetero_no.png :width 800
  cond <- data.frame(Species = unique(mod$data$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b0linint_hetero_no.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b0linint_hetero_no.png]]

** thoughts
[2018-08-27 Mon]
this looks good.  it has everthing but the heteroskedasticity.  I need
to include that.  I switched to CDD and things improved.

* test model on generated data
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-03 Mon 14:08
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling/genus: none;  species: single; cities: single; climate: none; hetero: no; family gamma
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
#+begin_src R :tangle no
  n <- 100
  b0 <- 1.2
  b1 <- 2
  b2 <- 1
  sigma <- 5


  w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))
                                          #  w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

  x <- cumsum(rep((150 - 0) / n, n))
  y <- w(b0,b1,b2, x) + rnorm(n, 0, sigma)

  dt <- data.frame(x, y)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/test_gen_none_sp_single_cities_single_climate_none_hetero_no.png :tangle no
  ggplot(dt, aes(x = x, y = y)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/test_gen_none_sp_single_cities_single_climate_none_hetero_no.png]]

#+begin_src R :tangle no
  m <- brm(form, chains = 1, cores = 1, data = dt, prior = nlprior, iter = 500)
#+end_src

#+RESULTS:
: Error: The following variables are missing in 'data':
: 'DBH', 'AGE'

#+begin_src R :tangle no
  summary(m)
#+end_src


#+begin_src R :exports results :results graphics :file ../figs/test_1_plot.png :tangle no
  plot(m)
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/marginal_1.png :tangle no
  marginal_effects(m, points = T)
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/pairs_1.png :tangle no
  pairs(m)
#+end_src

#+begin_src R :tangle no
                                          #standata(m)
                                          #stancode(m)
#+end_src


* thoughts about model form
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-19 Wed 15:52
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
think about adding subscripts to precip and gdd, maybe k for each city.?

How does the model know precip and gdd are measured at the city level?
Does it matter?  If I tried to include them in the \delta term they
could be separated out algebraically.  I think having the intercept
vary by city covers things, but I'm not 100% sure.  I can't think of
another way to handle it (right now).






* all the models  model_table
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-21 Fri 11:10
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

smaller models to build:
#+name: model_table
| genus | species | cities | climate  | hetero  | data                                           | b1                                                                 | b2                                              | b3                                              | sigma                 |
|-------+---------+--------+----------+---------+------------------------------------------------+--------------------------------------------------------------------+-------------------------------------------------+-------------------------------------------------+-----------------------|
| none  | single  | single | none     | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          |                       |
| none  | single  | single | none     | linear  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ AGE - 1       |
| none  | single  | single | none     | smooth2 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 2) |
| none  | single  | single | none     | smooth3 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 3) |
| none  | single  | single | none     | smooth5 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 5) |
| none  | single  | single | none     | smooth7 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 7) |
| none  | single  | single | none     | smooth8 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 8) |
| none  | single  | single | none     | smooth  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE)        |
| none  | many    | single | none     | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert Species)                                             | b2 ~ (1 \vert Species)                          | b3 ~ (1 \vert Species)                          |                       |
| many  | many    | single | none     | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert Genus / Species)                                     | b2 ~ (1 \vert Genus / Species)                  | b3 ~ (1 \vert Genus / Species)                  |                       |
| many  | many    | single | none     | yes     | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert Genus / Species)                                     | b2 ~ (1 \vert Genus / Species)                  | b3 ~ (1 \vert Genus / Species)                  | sigma ~ AGE -1        |
| none  | single  | many   | none     | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert City)                                                | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             |                       |
| none  | single  | many   | b1       | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City)                             | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             |                       |
| none  | single  | many   | b1       | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD, k = ) +  (1 \vert City)                       | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             |                       |
| none  | single  | many   | none     | yes     | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert City)                                                | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             | sigma ~ AGE -1        |
| none  | single  | many   | b1       | yes     | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City)                             | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             | sigma ~ AGE -1        |
| many  | many    | many   | none     | smooth  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert City) + (1 \vert Genus / Species)                    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ s(AGE)        |
| many  | many    | many   | none     | linear  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert City) + (1 \vert Genus / Species)                    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ AGE - 1       |
| many  | many    | many   | b1       | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) |                       |
| many  | many    | many   | b1linint | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ Precip * GDD +  (1 \vert City) + (1 \vert Genus / Species)    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) |                       |
| many  | many    | many   | b1       | smooth  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ s(AGE)        |
| many  | many    | many   | b1linint | smooth  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ Precip * GDD +  (1 \vert City) + (1 \vert Genus / Species)    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ s(AGE)        |
| many  | many    | many   | b1linint | linear  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ Precip * GDD +  (1 \vert City) + (1 \vert Genus / Species)    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ AGE - 1       |

export the table to ../data/model_table.csv

#+begin_src sh :session a
rsync -avz ../data/model_table.csv erker@krusty:~/allo/data/
#+end_src

#+RESULTS:
| erker@krusty's  | password: |       |          |         |       |       |           |
| building        | file      | list  | ...      | done    |       |       |           |
| model_table.csv |           |       |          |         |       |       |           |
|                 |           |       |          |         |       |       |           |
| sent            | 206       | bytes | received | 78      | bytes | 43.69 | bytes/sec |
| total           | size      | is    | 3943     | speedup | is    | 13.88 |           |

build up to the full model, then test relaxing some of the effects on
the different betas.  Thinking about it, the full model makes the most sense...

| genus | species | cities | climate predictors | heteroskedasticity | data                                           | b1                                                                 | b2                                              | b3                                              | sigma          | formula |
|-------+---------+--------+--------------------+--------------------+------------------------------------------------+--------------------------------------------------------------------+-------------------------------------------------+-------------------------------------------------+----------------+---------|
| many  | many    | many   | on \beta_0         | yes                | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ AGE -1 |         |
|       |         |        |                    |                    | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             | sigma ~ AGE -1 |         |
| many  | many    | many   | on \beta_0         | yes                | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert Genus / Species)                  | b3 ~ (1 \vert Genus / Species)                  | sigma ~ AGE -1 |         |
| many  | many    | many   | on \beta_0         | yes                | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ AGE -1 |         |

* Libraries and functions
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-21 Fri 11:11
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

There are many models.  Some will be quite big and take a long time.
I need to run them remotely, say on krusty.

I can generate a single script that fits all models.

I can generate a script for each model.

each script specifies genus, species, cities, climate, and hetero.
then functions subset data, generate formula and prior, and fit model.
** libraries
#+begin_src R
  library(dplyr)
  library(brms)
  library(ggplot2)
  library(gridExtra)

#  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4

Attaching package: â€˜gridExtraâ€™

The following object is masked from â€˜package:dplyrâ€™:

    combine
#+end_example

** functions
#+begin_src R :tangle allo_functions.R

    ## generate_formula <- function(model_table, gen, sp, cit, clim, het) {
    ##     f <- filter(model_table, genus == gen, species == sp, cities == cit, climate == clim, hetero == het)

    ##     f[] <- gsub("\\vert", "|", f, fixed = T)


    ##     if(f$sigma == "") {
    ##         bf(formula(f$data), formula(f$b1), formula(f$b2), formula(f$b3), nl = T)
    ##     } else {
    ##         bf(f$data, f$b1, f$b2, f$b3, f$sigma, nl = T)
    ##     }
    ## }

    generate_formula <- function(gen, sp, cit, clim, het, family) {
        if(family == "gaussian") {
            data_form <- formula(DBH ~ b0 + 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)))
            if(het == "linear") {
                v_form <- formula(sigma ~ AGE - 1)
            }
            if(het == "sqrt") {
                v_form <- formula(sigma ~ sqrt(AGE))
            }
            if (het == "smooth") {
                v_form <- formula(sigma ~  s(AGE))
            }
            if (het == "no") {
                v_form <- formula(sigma ~ 1)
            }
        }
        if (family == "Gamma") {
            data_form <- formula(DBH ~ b0 + 100*b1 * (1 - exp(-(b2/100) * AGE ^ (b3))))
            if (het == "no") {
                v_form <- formula(shape ~ 1)
            }
        }
        if(sp == "single") {
            if(cit == "single") {
                b0_form <- formula(b0 ~ 1)
                b1_form <- formula(b1 ~ 1)
                b2_form <- formula(b2 ~ 1)
                b3_form <- formula(b3 ~ 1)
            }
            if (cit == "many") {
                b0_form <- formula(b0 ~ (1 | City))
                b1_form <- formula(b1 ~ (1 | City))
                b2_form <- formula(b2 ~ (1 | City))
                b3_form <- formula(b3 ~ (1 | City))
            }
        }
        if (sp == "many") {
            if (gen == "none") {
                if(cit == "single") {
                    b0_form <- formula(b0 ~ (1 | Species))
                    b1_form <- formula(b1 ~ (1 | ID | Species))
                    b2_form <- formula(b2 ~ (1 | Species))
                    b3_form <- formula(b3 ~ (1 | ID | Species))
                }
                if (cit == "many") {
                    b0_form <- formula(b0 ~ (1 | City) + (1 | Species))
                    b1_form <- formula(b1 ~ (1 | City) + (1 | Species))
                    b2_form <- formula(b2 ~ (1 | City) + (1 | Species))
                    b3_form <- formula(b3 ~ (1 | City) + (1 | Species))
                }
            }
            if (gen == "many") {
                if(cit == "single") {
                    b0_form <- formula(b0 ~ (1 | Genus/Species))
                    b1_form <- formula(b1 ~ (1 | Genus/Species))
                    b2_form <- formula(b2 ~ (1 | Genus/Species))
                    b3_form <- formula(b3 ~ (1 | Genus/Species))
                }
                if (cit == "many") {
                    b0_form <- formula(b0 ~ (1 | City) + (1 | Genus/Species))
                    b1_form <- formula(b1 ~ (1 | City) + (1 | Genus/Species))
                    b2_form <- formula(b2 ~ (1 | City) + (1 | Genus/Species))
                    b3_form <- formula(b3 ~ (1 | City) + (1 | Genus/Species))
                    if (clim == "b1linint") {
                        b1_form <- formula(b1 ~ Precip * GDD +  (1 | City) + (1 | Genus / Species))
                    }
                }
            }
        }

        if (het == "no") {
            f <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)
        } else {
            f <- bf(data_form, b0_form, b1_form, b2_form, b3_form, v_form, nl = T)
        }
        return(f)


    }

    generate_prior <- function (gen, sp, cit, clim, fam) {
        if(fam == "gaussian") {
            nlprior <- c(prior(gamma(7.5, 3), nlpar = "b0",lb = 0),
                         prior(gamma(8, 8), nlpar = "b1",lb = 0),       #mean = 4/3 = 1.3; variance = 4/9 = .4
                         prior(gamma(8, 8), nlpar = "b2", lb = 0),      #mean = 5/1 = 5; variance = 5/1 = 5
                         prior(gamma(8, 8), nlpar = "b3",lb = 0))

            if("many" %in% c(gen, sp, cit)) {

                nlprior <- c(nlprior,
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b0"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b1"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b2"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b3"))

            }

            if(clim == "b1") {
                nlprior <- c(nlprior,
                             prior(normal(0,.25), class = "sds", nlpar = "b1"))
            }

            if(hetero == "linear") {
                nlprior <- c(nlprior,
                             prior(gamma(1,10), class = "b", dpar = "sigma"))
            }

            if(hetero == "smooth") {
                nlprior <- c(nlprior,
                             prior(normal(1,.3), class = "b", dpar = "sigma"),
                             prior(normal(1,.3), class = "sds", dpar = "sigma"),
                             prior(normal(0,1), class = "Intercept", dpar = "sigma"))
            }
        }

        if(fam == "Gamma") {
            nlprior <- c(prior(gamma(7.5, 3), nlpar = "b0",lb = 0),
                         prior(gamma(8, 6), nlpar = "b1",lb = 0),
                         prior(gamma(8, 8), nlpar = "b2", lb = 0),
                         prior(gamma(8, 6), nlpar = "b3",lb = 0),
                         prior(gamma(5, .3), class = "shape"))

            if("many" %in% c(gen, sp, cit)) {

                nlprior <- c(nlprior,
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b0"),
                             prior(gamma(10,10), class = "sd", nlpar = "b1"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b2"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b3"))

            }

            if(clim == "b1") {
                nlprior <- c(nlprior,
                             prior(normal(0,.25), class = "sds", nlpar = "b1"))
            }

            if(hetero == "linear") {
                nlprior <- c(nlprior,
                             prior(gamma(1,10), class = "b", dpar = "sigma"))
            }

            if(hetero == "smooth") {
                nlprior <- c(nlprior,
                             prior(normal(1,.3), class = "b", dpar = "sigma"),
                             prior(normal(1,.3), class = "sds", dpar = "sigma"),
                             prior(normal(0,1), class = "Intercept", dpar = "sigma"))
            }
        }

        nlprior
    }

#+end_src

#+RESULTS:

Tangle (C-c C-v t) then send functions to krusty
#+BEGIN_SRC sh :session a :results verbatim
rsync -avz allo_functions.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: allo_functions.R
:
: sent 129 bytes  received 96 bytes  26.47 bytes/sec
: total size is 6194  speedup is 27.53
: You have new mail in /var/mail/erker


What is the prior on sigma in hetero models?  Can I adjust that prior?
would that help?  maybe esp when the climate predictors are in the model.

* table modelling
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-21 Fri 14:01
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** genus: none;  species: single; cities: single; climate: none; hetero: no; family gamma
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

*** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "Gamma"

#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

    form <- generate_formula(genus, species, cities, climate, hetero, family)

    nlprior <- generate_prior(genus, species, cities, climate, family)

            nlprior <- c(prior(gamma(7, 3.5), nlpar = "b0",lb = 0),
                         prior(gamma(7, 7), nlpar = "b1",lb = 0),
                         prior(gamma(8, 8), nlpar = "b2", lb = 0),
                         prior(gamma(8, 8), nlpar = "b3",lb = 0),
                         prior(gamma(20, 1), class = "shape"))

#+end_src

#+RESULTS:

*** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  if(family == "Gamma") fam <- Gamma("identity")
  if(family == "gaussian") fam <- gaussian()

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000, family = fam)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_",family,".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
:
: sent 148 bytes  received 20 bytes  37.33 bytes/sec
: total size is 1521  speedup is 9.05

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh

#+END_SRC

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds
:
: sent 10226 bytes  received 12216499 bytes  627011.54 bytes/sec
: total size is 12312658  speedup is 1.01
: You have new mail in /var/mail/erker


*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:

#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma <- readRDS("../models/genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 6000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.77      0.08     2.61     2.93       3416 1.00
b1_Intercept     1.12      0.05     1.03     1.24       2694 1.00
b2_Intercept     1.08      0.04     1.00     1.17       3530 1.00
b3_Intercept     1.11      0.02     1.08     1.14       2806 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     7.69      0.14     7.42     7.96       3579 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

** genus: none;  species: single; cities: single; climate: none; hetero: no; family gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Want to understand how all the pieces fit together? See the R for Data
Science book: http://r4ds.had.co.nz/
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

*** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "gaussian"

#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

*** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000, family = family)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_",family,".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.R
:
: sent 323 bytes  received 54 bytes  58.00 bytes/sec
: total size is 1125  speedup is 2.98


*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.R &
  exit
#+END_SRC

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
:
: sent 16 bytes  received 161 bytes  27.23 bytes/sec
: total size is 11811795  speedup is 66733.31



*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:

#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian <- readRDS("../models/genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian
#+end_src

#+RESULTS:
: Error in gzfile(file, "rb") : cannot open the connection
: In addition: Warning message:
: In gzfile(file, "rb") :
:   cannot open compressed file '../models/genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.rds', probable reason 'No such file or directory'
: Error: object 'mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian' not found


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: d (Number of observations: 5548)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     1.45      0.10     1.29     1.68        845 1.00
b2_Intercept     1.42      0.06     1.31     1.54       1063 1.00
b3_Intercept     0.96      0.02     0.91     1.00        901 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma    14.54      0.14    14.27    14.81       1318 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example




#+begin_example
 Family: gamma
  Links: mu = log; shape = identity
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: d (Number of observations: 5548)
Samples: 4 chains, each with iter = 500; warmup = 250; thin = 1;
         total post-warmup samples = 1000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     0.05      0.00     0.05     0.05        330 1.00
b2_Intercept    28.55      0.39    27.79    29.30        720 1.00
b3_Intercept     0.48      0.01     0.46     0.50        348 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     6.11      0.11     5.91     6.31        322 1.01

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png]]

** compare gamma to gaussian
#+begin_src R
  loo_res <- loo(mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma,
                 mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian)
#+end_src

** genus: none;  species: single; cities: single; climate: none; hetero: linear; family gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

*** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "linear"
  family <- "gaussian"
#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

*** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.R
:
: sent 660 bytes  received 42 bytes  200.57 bytes/sec
: total size is 1114  speedup is 1.59

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.R &
  exit
#+END_SRC

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.rds
:
: sent 38 bytes  received 12104510 bytes  1152814.10 bytes/sec
: total size is 12200412  speedup is 1.01


*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
         sigma ~ AGE - 1
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 6000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     1.90      0.31     1.38     2.56        974 1.01
b2_Intercept     1.38      0.21     1.01     1.82       1026 1.01
b3_Intercept     0.87      0.01     0.85     0.89       1098 1.01
sigma_AGE        0.10      0.00     0.10     0.10       5347 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png
  plot(mod)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png
  pp_check(mod) + xlim(c(-15,150))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png]]

** genus: none;  species: single; cities: single; climate: none; hetero: smooth; family: gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

*** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "smooth"
  family <- "gaussian"
#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

*** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 2, cores = 2, data = d, init_r = .3, prior = nlprior, iter = 500,
             knots = list(k = -1))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R
:
: sent 677 bytes  received 42 bytes  68.48 bytes/sec
: total size is 1147  speedup is 1.60

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R &
  exit
#+END_SRC

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
:
: sent 16 bytes  received 165 bytes  51.71 bytes/sec
: total size is 11953842  speedup is 66043.33


*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
         sigma ~ s(AGE)
   Data: d (Number of observations: 5548)
Samples: 2 chains, each with iter = 500; warmup = 250; thin = 1;
         total post-warmup samples = 500

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     1.73      0.20     1.37     2.15        319 1.00

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.46      0.01     2.44     2.48        500 1.00
b1_Intercept        1.89      0.19     1.60     2.28        246 1.00
b2_Intercept        1.30      0.10     1.11     1.48        317 1.00
b3_Intercept        0.89      0.01     0.86     0.92        260 1.01
sigma_sAGE_1        1.52      0.17     1.20     1.82        249 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_smooths_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  marginal_smooths(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooths_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  pp_check(mod) + xlim(c(-30,200))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

** NOT TRIED YET genus: none;  species: single; cities: single; climate: none; hetero: sqrt; family: gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

*** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "sqrt"
  family <- "gaussian"
#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

*** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 2, cores = 2, data = d, init_r = .3, prior = nlprior, iter = 500,
             knots = list(k = -1))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R
:
: sent 677 bytes  received 42 bytes  68.48 bytes/sec
: total size is 1147  speedup is 1.60

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R &
  exit
#+END_SRC

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
:
: sent 16 bytes  received 165 bytes  51.71 bytes/sec
: total size is 11953842  speedup is 66043.33


*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
         sigma ~ s(AGE)
   Data: d (Number of observations: 5548)
Samples: 2 chains, each with iter = 500; warmup = 250; thin = 1;
         total post-warmup samples = 500

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     1.73      0.20     1.37     2.15        319 1.00

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.46      0.01     2.44     2.48        500 1.00
b1_Intercept        1.89      0.19     1.60     2.28        246 1.00
b2_Intercept        1.30      0.10     1.11     1.48        317 1.00
b3_Intercept        0.89      0.01     0.86     0.92        260 1.01
sigma_sAGE_1        1.52      0.17     1.20     1.82        249 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_smooths_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  marginal_smooths(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooths_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  pp_check(mod) + xlim(c(-30,200))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

** genus: none;  species: many; cities: single; climate: none; hetero: no; family: gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

*** set values
#+begin_src R
  genus <- "none"
  species <- "many"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "gaussian"
#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

*** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 4000, family = family)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.R
:
: sent 402 bytes  received 54 bytes  130.29 bytes/sec
: total size is 1125  speedup is 2.47

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.R &
  exit
#+END_SRC

#+begin_src R
cat genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.Rout
#+end_src

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.rds
:
: sent 24998 bytes  received 27462592 bytes  2893430.53 bytes/sec
: total size is 27559692  speedup is 1.00
: You have new mail in /var/mail/erker


*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian <- readRDS("~/git/allo/models/genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.rds")
mod <- mod_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ (1 | Species)
         b2 ~ (1 | Species)
         b3 ~ (1 | Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 4000; warmup = 2000; thin = 1;
         total post-warmup samples = 12000

Group-Level Effects:
~Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1_Intercept)     0.80      0.24     0.42     1.37       3375 1.00
sd(b2_Intercept)     0.68      0.18     0.40     1.10       4825 1.00
sd(b3_Intercept)     0.23      0.04     0.17     0.32       5139 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     1.54      0.20     1.18     1.99       4399 1.00
b2_Intercept     1.39      0.16     1.09     1.73       6513 1.00
b3_Intercept     0.98      0.05     0.88     1.08       4862 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma    12.35      0.12    12.12    12.58      12000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 5 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png :width 600 :height 600
  cond <- data.frame(Species = unique(mod$data$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 5)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]

** TODO genus: none;  species: many; cities: single; climate: none; hetero: no; family: gamma
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.R
:END:

There was no convergence for b1 and b3 when there was no correlation

*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

*** set values
#+begin_src R
  genus <- "none"
  species <- "many"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "Gamma"
#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)
  form
  nlprior <- generate_prior(genus, species, cities, climate, family)
  nlprior
#+end_src

#+RESULTS:
#+begin_example
DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
b0 ~ (1 | Species)
b1 ~ (1 | Species)
b2 ~ (1 | Species)
b3 ~ (1 | Species)
           prior class coef group resp dpar nlpar     bound
1  gamma(7, 3.5)     b                         b0 <lower=0>
2    gamma(7, 7)     b                         b1 <lower=0>
3    gamma(8, 8)     b                         b2 <lower=0>
4    gamma(8, 8)     b                         b3 <lower=0>
5  gamma(5, 0.3) shape
6 cauchy(0, 0.1)    sd                         b1
7 cauchy(0, 0.1)    sd                         b2
8 cauchy(0, 0.1)    sd                         b3
#+end_example

*** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

if(family == "Gamma") fam <- Gamma("identity")
if(family == "gaussian") fam <- gaussian()

  mod <- brm(form, chains = 7, cores = 7, data = d, init_r = .3, prior = nlprior, iter = 3000, family = fam)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.R
:
: sent 441 bytes  received 54 bytes  141.43 bytes/sec
: total size is 1226  speedup is 2.48

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.Rout
#+END_SRC
*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.rds
:
: sent 33398 bytes  received 30736923 bytes  3238981.16 bytes/sec
: total size is 30854969  speedup is 1.00
: You have new mail in /var/mail/erker

*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.rds")
mod <- mod_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png :height 1000 :width 1000
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | Species)
         b1 ~ (1 | Species)
         b2 ~ (1 | Species)
         b3 ~ (1 | Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 10000; warmup = 5000; thin = 1;
         total post-warmup samples = 30000

Group-Level Effects:
~Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.19      0.12     0.01     0.45       7687 1.00
sd(b1_Intercept)     0.34      0.11     0.21     0.63         12 1.25
sd(b2_Intercept)     0.76      0.21     0.41     1.25       1414 1.01
sd(b3_Intercept)     0.17      0.04     0.10     0.26         20 1.14

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.84      0.09     2.66     3.02      30000 1.01
b1_Intercept     0.97      0.11     0.80     1.22         12 1.24
b2_Intercept     1.16      0.16     0.87     1.50       5157 1.00
b3_Intercept     1.22      0.05     1.11     1.31         12 1.24

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     9.90      0.19     9.54    10.28      30000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 20 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png :height 1500
  plot(mod, ask = F, N = 50)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png :width 600 :height 600
  cond <- data.frame(Species = unique(mod$data$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 5)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

** Think about fitting b3 as fixed.
** TODO genus: many;  species: many; cities: many; climate: none; hetero: no; family: gamma
:PROPERTIES:
:header-args:R: :cache no :resulfts output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

*** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "none"
  hetero <- "no"
  family <- "Gamma"
#+end_src

#+RESULTS:
: Gamma
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:
| gamma(7, 3.5)  | b  |   |   |   |   | b0 | <lower=0> |
| gamma(7, 7)    | b  |   |   |   |   | b1 | <lower=0> |
| gamma(8, 8)    | b  |   |   |   |   | b2 | <lower=0> |
| gamma(8, 8)    | b  |   |   |   |   | b3 | <lower=0> |
| cauchy(0, 0.1) | sd |   |   |   |   | b1 |           |
| cauchy(0, 0.1) | sd |   |   |   |   | b2 |           |
| cauchy(0, 0.1) | sd |   |   |   |   | b3 |           |

*** fit model to real data
#+begin_src R
    d <- readRDS("../data/age_dbh_testing.rds")

  if(family == "Gamma") fam <- Gamma("identity")
  if(family == "gaussian") fam <- gaussian()


    mod <- brm(form, chains = 8, cores = 8, data = d, init_r = .3, prior = nlprior, iter = 2000, family = fam)
    saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.R
:
: sent 442 bytes  received 54 bytes  76.31 bytes/sec
: total size is 1213  speedup is 2.45
: You have new mail in /var/mail/erker

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.Rout
#+END_SRC

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.rds
:
: sent 48324 bytes  received 43323122 bytes  858840.51 bytes/sec
: total size is 43485636  speedup is 1.00

*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.rds")
mod <- mod_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 8 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 8000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     1.30      0.31     0.81     2.02         23 1.10
sd(b1_Intercept)     0.65      0.26     0.26     1.19          6 1.72
sd(b2_Intercept)     0.39      0.09     0.24     0.60        550 1.02
sd(b3_Intercept)     0.19      0.06     0.09     0.33          8 1.43

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.42      0.23     0.04     0.91         33 1.07
sd(b1_Intercept)     0.78      0.33     0.31     1.48          6 1.62
sd(b2_Intercept)     0.24      0.19     0.02     0.71         19 1.13
sd(b3_Intercept)     0.20      0.09     0.03     0.37          9 1.32

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.35      0.17     0.05     0.70         92 1.04
sd(b1_Intercept)     0.54      0.20     0.26     1.03         10 1.26
sd(b2_Intercept)     0.16      0.07     0.06     0.32         35 1.06
sd(b3_Intercept)     0.08      0.05     0.01     0.21          9 1.33

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.58      0.41     1.82     3.43         15 1.16
b1_Intercept     1.52      0.33     0.97     2.27         11 1.25
b2_Intercept     0.89      0.13     0.65     1.15        831 1.02
b3_Intercept     1.16      0.10     0.97     1.37          8 1.36

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    14.94      0.29    14.38    15.53       8000 1.04

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 246 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png :height 1300
  plot(mod, ask = F, N = 80)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpeciesCity_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png :width 1200 :height 1000
  cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
  cond <- left_join(cond, unique(select(mod$data, Species, Genus)))

   me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

    ggplot(me$AGE) +
        geom_line(aes(x = AGE, y = estimate__)) +
        geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
        geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3, size = .5) +
        facet_grid(City~Species)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png]]

** genus: many;  species: many; cities: many; climate: b1linint; hetero: no; family: gaussian
:PROPERTIES:
  :header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

*** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1linint"
  hetero <- "no"
  family <- "gaussian"
#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

*** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000, family = family)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src


*** tangle
C-c C-v t


*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.R
:
: sent 660 bytes  received 42 bytes  82.59 bytes/sec
: total size is 1127  speedup is 1.61

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.R &
  exit
#+END_SRC

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.rds
:
: sent 55366 bytes  received 30871852 bytes  2290905.04 bytes/sec
: total size is 31017908  speedup is 1.00

*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b1linint * (1 - exp(-(b2/100) * AGE^b3))
         b1linint ~ t2(Precip, CDD) + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 6000

Smooth Terms:
                      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(b1linint_t2PrecipCDD_1)     0.48      0.40     0.01     1.08          4 2.50
sds(b1linint_t2PrecipCDD_2)     0.47      0.39     0.00     1.04          4 2.10
sds(b1linint_t2PrecipCDD_3)     0.58      0.52     0.01     1.30          3 3.24

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1linint_Intercept)     0.93      0.36     0.30     1.66          5 1.59
sd(b2_Intercept)     0.75      0.38     0.16     1.30          3 3.16
sd(b3_Intercept)     0.50      0.50     0.10     2.06          6 1.90

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1linint_Intercept)     0.46      0.42     0.01     1.02          5 1.84
sd(b2_Intercept)     0.64      0.53     0.01     1.42          4 2.12
sd(b3_Intercept)     0.41      0.41     0.01     1.00          4 3.41

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1linint_Intercept)     0.97      0.31     0.41     1.57          5 1.67
sd(b2_Intercept)     0.56      0.30     0.12     1.09          6 1.62
sd(b3_Intercept)     0.45      0.43     0.06     1.14          3 4.71

Population-Level Effects:
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1linint_Intercept         1.40      0.46     0.69     2.56          4 1.98
b1linint_t2PrecipCDD_1     0.84      0.38     0.20     1.49          4 2.45
b1linint_t2PrecipCDD_2     0.68      0.34     0.15     1.23          4 2.72
b1linint_t2PrecipCDD_3     0.96      0.48     0.21     1.89          3 3.04
b2_Intercept         0.98      0.22     0.64     1.48          6 1.47
b3_Intercept         0.86      0.08     0.76     1.04          4 1.78

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     7.39      5.15     1.00    22.93          4 2.84

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 2307 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGECDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  marginal_effects(mod, effects = "AGE:CDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGECDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  marginal_effects(mod, effects = "Precip:CDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

** TODO genus: many;  species: many; cities: many; climate: b1linint; hetero: no; family: Gamma; Model Table way
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R
:END:
*** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
: Loading required package: Rcpp
: Loading 'brms' package (version 2.3.1). Useful instructions
: can be found by typing help('brms'). A more detailed introduction
: to the package is available through vignette('brms_overview').
: Run theme_set(theme_default()) to use the default bayesplot theme.
: Warning messages:
: 1: package â€˜brmsâ€™ was built under R version 3.4.4
: 2: package â€˜Rcppâ€™ was built under R version 3.4.4

*** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1linint"
  hetero <- "no"
  family <- "Gamma"
#+end_src

#+RESULTS:
*** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)


#+end_src

#+RESULTS:

*** fit model to real data
#+begin_src R
    d <- readRDS("../data/age_dbh_testing.rds")

  if(family == "Gamma") fam <- Gamma("identity")
  if(family == "gaussian") fam <- gaussian()

  mod <- brm(form, chains = 8, cores = 8, data = d, init_r = .3, prior = nlprior, iter = 2000, family = fam)

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

*** tangle
C-c C-v t

*** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R
:
: sent 441 bytes  received 54 bytes  90.00 bytes/sec
: total size is 1213  speedup is 2.45

*** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.Rout
#+END_SRC

*** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds
:
: sent 77857 bytes  received 43656452 bytes  2364016.70 bytes/sec
: total size is 43833742  speedup is 1.00
: You have new mail in /var/mail/erker

*** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds")
mod <- mod_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ Precip * GDD + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 8 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 8000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     1.41      0.31     0.90     2.12        231 1.03
sd(b1_Intercept)     0.85      0.27     0.43     1.48       1625 1.01
sd(b2_Intercept)     0.34      0.08     0.22     0.53       3866 1.00
sd(b3_Intercept)     0.19      0.04     0.12     0.29       3661 1.00

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.42      0.20     0.05     0.83       1916 1.00
sd(b1_Intercept)     1.16      0.29     0.63     1.78       1825 1.01
sd(b2_Intercept)     0.13      0.07     0.01     0.29       1529 1.01
sd(b3_Intercept)     0.11      0.05     0.01     0.21       1268 1.01

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.27      0.16     0.02     0.60       1542 1.01
sd(b1_Intercept)     0.64      0.21     0.31     1.14       3183 1.00
sd(b2_Intercept)     0.14      0.05     0.06     0.24       2888 1.00
sd(b3_Intercept)     0.11      0.03     0.05     0.18       2355 1.01

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.31      0.37     1.57     3.04       3547 1.00
b1_Intercept      0.68      0.23     0.31     1.19       8000 1.00
b1_Precip         0.67      0.23     0.29     1.19       8000 1.00
b1_GDD            0.22      0.06     0.11     0.35       8000 1.00
b1_Precip:GDD     0.19      0.06     0.09     0.32       8000 1.02
b2_Intercept      0.80      0.11     0.60     1.02       2819 1.00
b3_Intercept      1.05      0.06     0.93     1.18       3680 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    15.06      0.29    14.50    15.64       8000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 3 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png :height 1300
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEGDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:GDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEGDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]



#+begin_src R
precip.gdd <-   marginal_effects(mod, effects = "Precip:GDD", surface = T)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipGDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
precip.gdd
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipGDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma_wCities.png
  plot(precip.gdd)[[1]] +
      geom_point(data = unique(select(mod$data, City, GDD, Precip)), aes(x = Precip, y = GDD)) +
      geom_label(data = unique(select(mod$data, City, GDD, Precip)), aes(x = Precip, y = GDD, label = City), nudge_y = .15)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma_wCities.png]]


#+begin_src R
    cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
    cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
    cond <- left_join(cond, unique(select(mod$data, City, Precip, GDD)))
#    cond <- filter(cond, Species %in%  c("LIST"))

     me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict")
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png :width 1000 :height 100

  #arrange the cities by precip * GDD
  me2 <- me$AGE  %>% mutate(GDDPrecip = GDD * Precip,
                          City = factor(City, levels=unique(City[order(GDDPrecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(GDDPrecip = (GDD - min(GDD)) * (Precip - min(Precip)),
             City = factor(City, levels=unique(City[order(GDDPrecip)]), ordered=TRUE))

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = .3, size = .5) +
          facet_grid(Species~City*GDDPrecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
   pp_check(mod) + xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]



* genus: many;  species: many; cities: many; climate: b1; hetero: smooth
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1_hetero_smooth.R
:ARCHIVE_TIME: 2018-09-21 Fri 14:02
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1"
  hetero <- "smooth"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 8000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

#+RESULTS:

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1_hetero_smooth.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
:
: sent 133 bytes  received 20 bytes  61.20 bytes/sec
: total size is 1138  speedup is 7.44

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1_hetero_smooth.R &
  exit
#+END_SRC

** pull back from krusty


#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1_hetero_smooth.rds ~/git/allo/models/
#+END_SRC

** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1_hetero_smooth.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ t2(Precip, HDD) + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 3403)
Samples: 6 chains, each with iter = 8000; warmup = 4000; thin = 1;
         total post-warmup samples = 24000

Smooth Terms:
                      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(b1_t2PrecipHDD_1)     0.36      0.20     0.03     0.79      24000 1.00
sds(b1_t2PrecipHDD_2)     0.40      0.24     0.03     0.90         24 1.15
sds(b1_t2PrecipHDD_3)     0.36      0.20     0.03     0.80      24000 1.00
sds(sigma_sAGE_1)         1.30      0.21     0.93     1.74        158 1.03

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1_Intercept)     1.24      0.47     0.16     2.24         46 1.14
sd(b2_Intercept)     0.31      0.08     0.19     0.49       8936 1.00
sd(b3_Intercept)     0.14      0.03     0.09     0.22         75 1.03

~Genus (Number of levels: 8)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1_Intercept)     0.11      0.11     0.00     0.40        117 1.04
sd(b2_Intercept)     0.07      0.06     0.00     0.23         72 1.07
sd(b3_Intercept)     0.03      0.03     0.00     0.09        107 1.06

~Genus:Species (Number of levels: 16)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1_Intercept)     0.36      0.10     0.21     0.60       2877 1.01
sd(b2_Intercept)     0.17      0.05     0.09     0.29       6972 1.00
sd(b3_Intercept)     0.05      0.02     0.02     0.09        871 1.01

Population-Level Effects:
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept      2.11      0.01     2.09     2.14         48 1.12
b1_Intercept         1.67      0.38     0.92     2.35         12 1.15
b1_t2PrecipHDD_1     0.58      0.21     0.25     1.07        825 1.01
b1_t2PrecipHDD_2     0.54      0.19     0.23     0.99        554 1.01
b1_t2PrecipHDD_3     0.47      0.17     0.19     0.89       2772 1.00
b2_Intercept         0.96      0.11     0.75     1.20        101 1.03
b3_Intercept         0.99      0.05     0.89     1.08        109 1.05
sigma_sAGE_1         1.11      0.16     0.79     1.45      11714 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 2511 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  marginal_effects(mod, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  marginal_effects(mod, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_smooths_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  marginal_smooths(mod, smooths = "s(AGE)", ask = F)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooths_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1_hetero_smooth.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]


* genus: many;  species: many; cities: many; climate: b1linint; hetero: smooth  NO CONVERGE
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.R
:ARCHIVE_TIME: 2018-09-21 Fri 14:02
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1linint"
  hetero <- "smooth"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 10000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

#+RESULTS:

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.R
:
: sent 181 bytes  received 54 bytes  67.14 bytes/sec
: total size is 1145  speedup is 4.87

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.R &
  exit
#+END_SRC

** pull back from krusty


#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.rds
:
: sent 38 bytes  received 97053567 bytes  4313493.56 bytes/sec
: total size is 97181497  speedup is 1.00
: You have new mail in /var/mail/erker

** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ Precip * GDD + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 10000; warmup = 5000; thin = 1;
         total post-warmup samples = 30000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     1.41      0.22     1.15     1.88          7 1.32

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.52      0.35     0.15     1.13          3  3.81
sd(b2_Intercept)     0.58      0.33     0.24     1.12          3  5.20
sd(b3_Intercept)     0.38      0.35     0.09     0.94          3 16.15

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     1.37      0.49     0.08     2.43         36  1.06
sd(b2_Intercept)     0.40      0.46     0.01     1.26          3  7.66
sd(b3_Intercept)     0.41      0.50     0.01     1.30          3 15.35

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.59      0.31     0.20     1.28          7  1.30
sd(b2_Intercept)     0.53      0.39     0.16     1.13          3  8.84
sd(b3_Intercept)     0.42      0.45     0.06     1.20          3 21.87

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample   Rhat
sigma_Intercept     1.47      0.92     0.01     2.13          3 117.66
b1_Intercept        1.60      0.60     0.79     2.62          4   1.96
b1_Precip           0.64      0.17     0.30     0.88          7   1.30
b1_GDD              0.63      0.34     0.27     1.19          3   5.43
b1_Precip:GDD       0.66      0.19     0.34     0.97          4   1.71
b2_Intercept        1.09      0.15     0.89     1.38          5   1.51
b3_Intercept        0.86      0.05     0.80     0.97          5   1.48
sigma_sAGE_1        0.84      0.67    -0.27     1.60          3   5.07

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 10149 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  marginal_effects(mod, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  marginal_effects(mod, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]


* FULL DATA genus: many;  species: many; cities: many; climate: b1linint; hetero: smooth
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.R
:ARCHIVE_TIME: 2018-09-21 Fri 14:02
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: â€˜dplyrâ€™

The following objects are masked from â€˜package:statsâ€™:

    filter, lag

The following objects are masked from â€˜package:baseâ€™:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package â€˜brmsâ€™ was built under R version 3.4.4
2: package â€˜Rcppâ€™ was built under R version 3.4.4
#+end_example

** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1linint"
  hetero <- "smooth"
#+end_src

#+RESULTS:
** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_full.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 10000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_fulldata.rds"))
#+end_src

#+RESULTS:

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.R
:
: sent 190 bytes  received 54 bytes  69.71 bytes/sec
: total size is 1151  speedup is 4.72

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.R &
  exit
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.rds
:
: sent 62394 bytes  received 350744374 bytes  5524516.03 bytes/sec
: total size is 350727547  speedup is 1.00


** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ Precip * HDD + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 12687)
Samples: 6 chains, each with iter = 10000; warmup = 5000; thin = 1;
         total post-warmup samples = 30000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     2.77      0.81     1.00     3.50          3 5.00

Group-Level Effects:
~City (Number of levels: 16)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.73      0.20     0.43     1.17         13  1.15
sd(b2_Intercept)     0.41      0.20     0.21     0.82          3  3.37
sd(b3_Intercept)     0.27      0.36     0.07     1.07          3 18.33

~Genus (Number of levels: 83)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.62      0.77     0.01     2.39          3  5.14
sd(b2_Intercept)     0.57      0.36     0.03     1.27          4  2.55
sd(b3_Intercept)     0.30      0.42     0.01     1.22          3 10.55

~Genus:Species (Number of levels: 161)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.68      0.19     0.27     1.02          4  2.21
sd(b2_Intercept)     0.56      0.33     0.22     1.27          3  5.93
sd(b3_Intercept)     0.42      0.38     0.09     1.25          3 20.55

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample   Rhat
sigma_Intercept     1.86      0.80     0.08     2.23          3 155.27
b1_Intercept        1.90      0.56     0.82     2.76          4   2.58
b1_Precip           1.07      0.29     0.48     1.70          9   1.23
b1_HDD              0.46      0.32     0.13     1.10          3   3.19
b1_Precip:HDD       0.64      0.25     0.26     0.99          5   1.57
b2_Intercept        1.27      0.21     0.96     1.65          5   1.87
b3_Intercept        0.94      0.06     0.85     1.05          5   1.69
sigma_sAGE_1        0.48      0.19     0.13     0.80          4   1.89

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 12742 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]



* questions
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-21 Fri 14:13
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

** are individual-level parameters  in a non-linear multilevel model with group-level predictors drawn from a normal distribution?

It's common to see parts of multilevel models written like this:

[[file:../../../org/attachments/questions/Screenshot 2018-08-07 13.55.11_2018-08-08_15-51-34.png]]

from page 280 in Gelman and Hill.

Where the population level parameter (intercept and slope) are drawn
from a normal distribution with a mean that is a function of
group-level predictors and a covariance matrix with correlations
between the parameters.


3)

quote:

prior is not normal, so how could they be drawn from a normal?  (they
must be positive, I'm using gamma, but could use something else if
that would be better, but I definitely can't use normal (unless it's
truncated), because must be positive which is important for the
non-linear model.

I don't see it in the stan code

the

Questions:
1) Is this just the case in linear models?
2) Does the prior on the parameters, or the




* model loss function with gamma family
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-21 Fri 14:14
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

Example 3 in ... cites ... who mention that the ... is right skewed
https://journal.r-project.org/archive/2018/RJ-2018-017/RJ-2018-017.pdf

https://magesblog.com/post/2015-11-10-hierarchical-loss-reserving-with-stan/

https://cran.r-project.org/web/packages/brms/vignettes/brms_nonlinear.html

"Thus, please make sure that you set the link function to identity,
whenever your non-linear predictor term already contains the desired
link function"


#+begin_src R
url <- paste0("https://raw.githubusercontent.com/mages/",
"diesunddas/master/Data/ClarkTriangle.csv")
loss <- read.csv(url)
head(loss)
#+end_src

#+RESULTS:
:     AY dev      cum premium
: 1 1991   6  357.848   10000
: 2 1991  18 1124.788   10000
: 3 1991  30 1735.330   10000
: 4 1991  42 2182.708   10000
: 5 1991  54 2745.596   10000
: 6 1991  66 3319.994   10000

#+begin_src R
  nlform <- bf(cum ~ ult * (1 - exp(-(dev / theta)^omega)),
               ult ~ 1 + (1|AY), omega ~ 1, theta ~ 1, nl = TRUE)
  nlprior <- c(prior(normal(5000, 1000), nlpar = "ult"),
               prior(normal(1, 2), nlpar = "omega"),
               prior(normal(45, 10), nlpar = "theta"))
  fit_loss1 <- brm(formula = nlform, data = loss, family = gaussian(), prior = nlprior,
                   chains = 2,
                   cores = 2,
                   control = list(adapt_delta = 0.9))

#+end_src

#+begin_src R :exports results :results graphics :file ../figs/pp_check_fit_loss1.png
pp_check(fit_loss1) + xlim(c(-500,5500))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_fit_loss1.png]]


#+begin_src R
  nlform <- bf(cum ~ ult * (1 - exp(-(dev / theta)^omega)),
               ult ~ 1 + (1|AY), omega ~ 1, theta ~ 1, nl = TRUE)
  nlprior <- c(prior(normal(5000, 1000), nlpar = "ult"),
               prior(normal(1, 2), nlpar = "omega"),
               prior(normal(45, 10), nlpar = "theta"))
  fit_loss3 <- brm(formula = nlform, data = loss, family = Gamma("identity"), prior = nlprior,
                   chains = 2,
                   cores = 2,
                   control = list(adapt_delta = 0.9))

#+end_src

#+RESULTS:
#+begin_example

SAMPLING FOR MODEL 'gamma brms-model' NOW (CHAIN 1).
Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is nan, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is nan, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[11] is -0.110338, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is nan, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is -19.0419, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is -0.069164, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is -0.0750579, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is nan, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[11] is -2.99082, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is -0.305499, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)


Gradient evaluation took 0.00054 seconds
1000 transitions using 10 leapfrog steps per transition would take 5.4 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gamma brms-model' NOW (CHAIN 2).

Gradient evaluation took 0.000434 seconds
1000 transitions using 10 leapfrog steps per transition would take 4.34 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 22.7133 seconds (Warm-up)
               11.1468 seconds (Sampling)
               33.8601 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 22.8441 seconds (Warm-up)
               13.3994 seconds (Sampling)
               36.2436 seconds (Total)
#+end_example


#+begin_src R
fit_loss3
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: cum ~ ult * (1 - exp(-(dev/theta)^omega))
         ult ~ 1 + (1 | AY)
         omega ~ 1
         theta ~ 1
   Data: loss (Number of observations: 55)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~AY (Number of levels: 10)
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(ult_Intercept)   552.47    185.71   298.64  1051.96        747 1.00

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
ult_Intercept    5396.17    347.61  4794.76  6135.68        517 1.00
omega_Intercept     1.27      0.03     1.21     1.33        928 1.00
theta_Intercept    48.95      3.82    42.26    57.05        737 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape   111.15     23.42    68.73   162.17       1454 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example


#+begin_src R :exports results :results graphics :file ../figs/pp_check_fit_loss3.png
pp_check(fit_loss3)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_fit_loss3.png]]


#+begin_src R
loo(fit_loss1,fit_loss3)
#+end_src

#+RESULTS:
:                        LOOIC    SE
: fit_loss1             715.96 19.54
: fit_loss3             741.67 13.09
: fit_loss1 - fit_loss3 -25.71 17.27

* COMMENT scratch
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-21 Fri 14:14
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
|                               |                |
|-------------------------------+----------------|
| Region                        | GulfCo         |
| Scientific.Name               | Butia capitata |
| SpCode                        | BUCA           |
| Independent.variable          | dbh            |
| Predicts.component            | crown dia      |
| Units.of.predicted.components | meters         |
| Model.weight                  | 1/ht^2         |
| EqName                        | cub            |
| a                             | -0.0575        |
| b                             | 0.10884        |
| c                             | 1.87801        |
| d                             | -0.45639       |
| e                             |                |
| Apps.min                      | 0.12           |
| Apps.max                      | 4.63           |
| Sigma                         |                |
| n                             |                |
| adj.R2                        |                |
| Data.min..from.raw.data.      | 0.7            |
| Data.max..from.raw.data.      | 7.4            |
| DF                            |                |



#+begin_src R
  x <- 1:100
  a <- seq(-.2, -1, -.2)
  b <- seq(1.2,2, .2)
  dq <- expand.grid(x = x, a = a,b = b)
  dq <- mutate(dq, y = a*(x^2)/100 + b * x)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/understand_quad.png
  ggplot(dq, aes(x = x, y = y)) +
      geom_line() +
      facet_grid(a~ b)
#+end_src

#+RESULTS:
[[file:../figs/understand_quad.png]]


* Exploring dbh and crown diameter
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-21 Fri 14:14
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
show plots of dbh versus biomass and the published equations on a
figure.

look specifically for places where pooling might help (same species in
two regions)

** load libraries
#+begin_src R :exports none
  library(plyr)
  library(dplyr)
  library(ggplot2)
  library(readr)
#+end_src

#+RESULTS:
** read in data
#+begin_src R :exports code
  d <- read_csv("data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv")
#+end_src

#+RESULTS:
#+begin_example
Parsed with column specification:
cols(
  .default = col_integer(),
  Region = col_character(),
  City = col_character(),
  Source = col_character(),
  Zone = col_character(),
  `Park/Street` = col_character(),
  SpCode = col_character(),
  ScientificName = col_character(),
  CommonName = col_character(),
  TreeType = col_character(),
  street = col_character(),
  `DBH (cm)` = col_double(),
  `TreeHt (m)` = col_double(),
  CrnBase = col_double(),
  `CrnHt (m)` = col_double(),
  `CdiaPar (m)` = col_double(),
  `CDiaPerp (m)` = col_double(),
  `AvgCdia (m)` = col_double(),
  `Leaf (m2)` = col_double(),
  dbh1 = col_double()
)
See spec(...) for full column specifications.
Warning: 24255 parsing failures.
row # A tibble: 5 x 5 col     row   col   expected actual                                            file expected   <int> <chr>      <chr>  <chr>                                           <chr> actual 1  1262  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv' file 2  1263  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv' row 3  1264  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv' col 4  1265  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv' expected 5  1266  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'
... ................. ... ............................................................................... ........ ............................................................................... ...... ............................................................................... .... ................................................................. [... truncated]
Warning message:
In rbind(names(probs), probs_f) :
  number of columns of result is not a multiple of vector length (arg 1)
#+end_example


#+begin_src R
                                          #str(d)
#+end_src

#+RESULTS:

** tidy a few names and select variables of interest here
#+begin_src R
  d <- d %>% rename(DBH = `DBH (cm)`, Leaf = `Leaf (m2)`, AvgCdia = `AvgCdia (m)`) %>% select(Region, City, TreeID, SpCode, DBH, Leaf, AvgCdia, Age)
#+end_src

#+RESULTS:

#+begin_src R
  summary(d$Leaf)
  sum(d$Leaf == -1) / length(d$Leaf)
  sum(d$AvgCdia == -1) / length(d$AvgCdia)
  sum(d$DBH == -1) / length(d$DBH)
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
:    -1.0    12.9   116.1   302.5   389.2  9516.0
: [1] 0.1143094
: [1] 0.003244288
: [1] 0

#+begin_src R
  d <- filter(d, AvgCdia != -1)
#+end_src

#+RESULTS:

** plot dbh versus average crown diamter for all trees
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_all.png :bg transparent
  ggplot(d, aes( x = DBH, y = AvgCdia)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_all.png]]

** DBH versus Cdia by cities
Constraining scales to 0-200 dbh and 0-40 AvgCdia.  Much of
variability within regions is due to species, colored in the plot below.
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_byCity_focusCoords.png :height 1000 :width 1000
  ggplot(d, aes( x = DBH, y = AvgCdia, color = SpCode)) + geom_point(alpha = .7, size = .5) +
      facet_wrap(~City) +
      coord_cartesian(xlim = c(0, 200), ylim = c(0,40)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_byCity_focusCoords.png]]

** DBH versus Cdia by species
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_bySpecies_focusCoords.png :height 1500 :width 800
  ggplot(d, aes( x = DBH, y = AvgCdia, color = City)) + geom_point(alpha = .2, size = .5) +
      facet_wrap(~SpCode, ncol = 8) +
      coord_cartesian(xlim = c(0, 200), ylim = c(0,40)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_bySpecies_focusCoords.png]]

Woah, there are lots of species.  Clearly there is some variability in
the relationship between dbh and crown diameter across species.

** DBH versus Cdia by species for species that are in more than 1 city
Does the relationship between DBH and AvgCdia for a species change
depending on the city where it is?

Is there evidence for a different equation for every species city
combination?  Or can we use one equation for each species, regardless
of city?
#+begin_src R
  sp.w.multiple.cities <- d %>% group_by(City, SpCode) %>% summarize(n = n()) %>% ungroup() %>% group_by(SpCode) %>%
      summarize(n_cities_per_species = n()) %>%
      filter(n_cities_per_species > 1) %>%
      pull(SpCode)

  d.sp.w.multiple.cities <- filter(d, SpCode %in% sp.w.multiple.cities)

#+end_src

#+RESULTS:


*** Each panel is a species, Each color is a different city
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_bySpecies_focusCoords_multiplecities.png :height 1000 :width 800
  ggplot(d.sp.w.multiple.cities, aes( x = DBH, y = AvgCdia, color = City)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free", ncol = 8) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_bySpecies_focusCoords_multiplecities.png]]
*** Adding Loess trend lines
It looks like some species have the same relationship (e.g. ACPL),
others may have a different relationship (e.g. LAIN, MOAL), and for
some it is hard to tell because the data don't fully overlap
(e.g. LITU).  This is a very informal assessment, but I think there's
something here.  Similarities are likely due to the cities having
similar climates.  Differences are likely due to cities having
different climates.  There could be a genetic component too.
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_bySpecies_focusCoords_multiplecities_trendlines.png :height 1100 :width 800
  ggplot(d.sp.w.multiple.cities, aes( x = DBH, y = AvgCdia, color = City)) +
      geom_point(alpha = .7, size = .8) +
      facet_wrap(~SpCode, scales = "free", ncol = 8) +
                                          #  coord_cartesian(xlim = c(0, 200), ylim = c(0,40)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      stat_smooth()
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_bySpecies_focusCoords_multiplecities_trendlines.png]]

ACPL's cities
#+begin_src R
  filter(d.sp.w.multiple.cities, SpCode == "ACPL") %>% pull(City) %>% unique
#+end_src

#+RESULTS:
: [1] "Fort Collins, CO" "Minneapolis, MN"  "Indianapolis, IN" "Queens, NY"
: [5] "Boise, ID"        "Longview, WA"

MOAL's cities
#+begin_src R
  filter(d.sp.w.multiple.cities, SpCode == "MOAL") %>% pull(City) %>% unique
#+end_src

#+RESULTS:
: [1] "Glendale, AZ" "Longview, WA"
** Concluding thoughts
Clearly the relationship between DBH and AvgCdia varies with species
and with location.  However, for many species there is little

** Plot Urban Tree Allometric equations on top of data

#+begin_src R
  predict.allo <- function(x, EqName, a, b, c, d, e) {
      if(EqName == "loglogw1") {
          y = exp(a + b*log(log(x + 1) + c/2))
      }
      else if(EqName == "loglogw2") {
          y = exp(a + b*log(log(x + 1))+(sqrt(x) * (c/2)))
      }
      else if (EqName == "loglogw3") {
          y = exp(a + b*log(log(x + 1)) + x * c/2)
      }
      else if (EqName == "loglogw4") {
          y = exp(a + b*log(log(x + 1)) + x^2 * c/2)
      }
      else if (EqName == "expow1") {
          y = exp(a+ b * (x) + (c/2))
      }
      else if (EqName == "lin") {
          y = a + b * x
      }
      else if (EqName == "quad") {
          y = a + b * x + c* x^2
      }
      else if (EqName == "cub") {
          y = a+b * x+c *x^2 + d * x^3
      }
      else if (EqName == "quart") {
          y = a+b * x+c *x^2 + d * x^3 + e * x^4
      }
      return(y)
  }


#+end_src

#+RESULTS:


#+begin_src R
  eqn <- read.csv("data/RDS-2016-0005/Data/TS6_Growth_coefficients_fromNatalie.csv", stringsAsFactors = F) %>%
      mutate(a = as.numeric(a))

  eqn <- eqn %>%
      filter(Predicts.component %in% c("crown dia"), Independent.variable == "dbh")

  dbh_min_max = d %>%
      group_by(Region, SpCode) %>%
      summarize(minDBH = min(DBH, na.rm = T),
                maxDBH = max(DBH, na.rm = T))

  eqn <- left_join(eqn, dbh_min_max)

  cdia_min_max = d %>%
      group_by(Region, SpCode) %>%
      summarize(minCdia = min(AvgCdia, na.rm = T),
                maxCdia = max(AvgCdia, na.rm = T))

  eqn <- left_join(eqn, cdia_min_max)


                                          # fill in the NAs due to equations existing for species in regions where they weren't sampled.
  eqn$minDBH[is.na(eqn$minDBH)] <- 5
  eqn$maxDBH[is.na(eqn$maxDBH)] <- 90

  newdata <- lapply(1:nrow(eqn), function(i) {
      x <- seq(eqn$minDBH[i], eqn$maxDBH[i],  (eqn$maxDBH[i] - eqn$minDBH[i]) / 9)
      cbind(x, eqn[i,])
  })

  newdata <- bind_rows(newdata)

  predictions <- newdata %>% rowwise %>% mutate(predicted_Cdia = predict.allo(x = x, EqName = EqName, a = a, b = b, c = c, d = d, e = e))



                                          #filter out predictions that are outside range of data and label those in range of appsmin and appsmax
  predictions_apprange <- predictions %>%
      filter(predicted_Cdia > Apps.min & predicted_Cdia < Apps.max)

  predictions_datarange <- predictions %>%
      filter(predicted_Cdia > minCdia & predicted_Cdia < maxCdia)

#+end_src

#+RESULTS:
: Joining, by = c("Region", "SpCode")
: Joining, by = c("Region", "SpCode")
: There were 50 or more warnings (use warnings() to see the first 50)



#+begin_src R :exports results :results graphics :file figs/predictions_byRegion.png

  ggplot(predictions_apprange, aes(x = x, y = predicted_Cdia, group = SpCode)) +
      geom_line() +
      facet_wrap(~Region, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_byRegion.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_bySpecies.png :height 1200 :width 1200

  ggplot(predictions_apprange, aes(x = x, y = predicted_Cdia, group = Region)) +
      geom_line() +
      facet_wrap(~SpCode, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_bySpecies.png]]

What's up with BUCA and PIPO?  Those equations seem wrong.

#+begin_src R :exports results :results graphics :file figs/GulfCo_BUCA.png
  gcbuca <- filter(predictions, Region == "GulfCo", SpCode == "BUCA") %>% mutate(DBH = x)

  ggplot(gcbuca, aes(x = DBH, y = predicted_Cdia)) + geom_line()
#+end_src

#+RESULTS:
[[file:../figs/GulfCo_BUCA.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_bySpeciesFull_wData.png :height 1200 :width 1200
  predictions_apprange <- predictions_apprange %>% mutate(DBH = x, AvgCdia = predicted_Cdia)

  ggplot(d, aes( x = DBH, y = AvgCdia, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange, aes(group = Region), size = 1.5)

#+end_src

#+RESULTS:
[[file:../figs/predictions_bySpeciesFull_wData.png]]


#+begin_src R :exports results :results graphics :file figs/predictions_bySpecies_wData.png :height 1200 :width 1200
  predictions_apprange.sp.w.multiple.cities <- predictions_apprange %>%       filter(SpCode %in% d.sp.w.multiple.cities$SpCode)


  ggplot(d.sp.w.multiple.cities, aes( x = DBH, y = AvgCdia, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange.sp.w.multiple.cities, aes(group = Region), size = 1.5)

#+end_src


#+RESULTS:
[[file:../figs/predictions_bySpecies_wData.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_bySpecies_wData_ACPL.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(DBH = x, AvgCdia = predicted_Cdia) %>%
      filter(SpCode == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(DBH = x, AvgCdia = predicted_Cdia) %>%
      filter(SpCode == "ACPL")

  ggplot(filter(d, SpCode == "ACPL"), aes( x = DBH, y = AvgCdia, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region), size = 2, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region), size = 2)


#+end_src

#+RESULTS:
[[file:../figs/predictions_bySpecies_wData_ACPL.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_bySpecies_wData_ACPL_facet.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(DBH = x, AvgCdia = predicted_Cdia) %>%
      filter(SpCode == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(DBH = x, AvgCdia = predicted_Cdia) %>%
      filter(SpCode == "ACPL")

  ggplot(filter(d, SpCode == "ACPL"), aes( x = DBH, y = AvgCdia)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region, color = Region), size = 1, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region, color = Region), size = 1) +
      facet_wrap(~Region)


#+end_src

#+RESULTS:
[[file:../figs/predictions_bySpecies_wData_ACPL_facet.png]]

We should be able to borrow information from other regions to extend
the applicable range for regions with smaller ranges.

** Model
the slope between dbh and the other tree characteristic would be a
function of the species characteristics and the city's climate.


** COMMENT Thinking about writing out the model

This follows Gelman and Hill 2007 notation:

see page 291.

\[
y_i \sim lognormal(\alpha + \beta_{j[i],k[i]} x_i , \sigma_y)
\]

\[
\beta_j \sim normal(\gamma_0 + \gamma_1 u_j, \sigma_\beta)
\]

where
- y is our target tree characteristic, average crown diameter, say.
- x is the diameter at breast height
- u is the "climate" e.g. growing degree days of a city
- \gamma's  are the coefficients for climate on the slope between x
  and y
-
-
  -

** COMMENT climate data
https://www.ncdc.noaa.gov/data-access/land-based-station-data/land-based-datasets/climate-normals/1981-2010-normals-data

see also table 1 in https://www.fs.fed.us/psw/publications/documents/psw_gtr253/psw_gtr_253.pdf

** NEXT modelling

Just do the climate effects now

Subset down to 5 species
#+begin_src R
  sp.sub <- c("ACPL", "QURU", "PIST", "CEOC", "FRPE")
  ds <- filter(d, SpCode %in% sp.sub)
#+end_src

#+RESULTS:

*** lme4
#+begin_src R
  library(lme4)
#+end_src

#+RESULTS:

#+begin_src R
  ds <- mutate(ds, logAvgCdia = log(AvgCdia))
  mod <- lmer(logAvgCdia ~ log(DBH) + (1 + log(DBH) | SpCode) + ( 1 + log(DBH) | Region), data = ds)
#+end_src

#+RESULTS:

#+begin_src R
  mod
#+end_src

#+RESULTS:
#+begin_example
Linear mixed model fit by REML ['lmerMod']
Formula: logAvgCdia ~ log(DBH) | SpCode
   Data: ds
REML criterion at convergence: -439.0436
Random effects:
 Groups   Name        Std.Dev. Corr
 SpCode   (Intercept) 4.5990
          log(DBH)    0.7474   -1.00
 Residual             0.1977
Number of obs: 1224, groups:  SpCode, 5
Fixed Effects:
(Intercept)
      4.168
#+end_example

#+begin_src R

  dsDBH_min_max = ds %>%
      group_by(Region, SpCode) %>%
      summarize(minDBH = min(DBH, na.rm = T),
                maxDBH = max(DBH, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsDBH_min_max), function(i) {
      x <- seq(dsDBH_min_max$minDBH[i], dsDBH_min_max$maxDBH[i],  (dsDBH_min_max$maxDBH[i] - dsDBH_min_max$minDBH[i]) / 9)
      cbind(dsDBH_min_max[i,], DBH = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logDBH = log(DBH))

#+end_src

#+begin_src R
  pred <- predict(mod, newdata)

  pred <- cbind(newdata, pred) %>%
      mutate(Cdia = exp(pred))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/predictions_m1.png
  ggplot(pred, aes(x = DBH, y = Cdia)) + geom_line() +
      facet_grid(Region~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/predictions_m1.png]]


#+begin_src R

  dsDBH_min_max = ds %>%
      group_by(SpCode) %>%
      summarize(minDBH = min(DBH, na.rm = T),
                maxDBH = max(DBH, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsDBH_min_max), function(i) {
      x <- seq(dsDBH_min_max$minDBH[i], dsDBH_min_max$maxDBH[i],  (dsDBH_min_max$maxDBH[i] - dsDBH_min_max$minDBH[i]) / 9)
      cbind(dsDBH_min_max[i,], DBH = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logDBH = log(DBH))


  regions <- rep(unique(ds$Region), each = nrow(newdata))

  newdata <- do.call("rbind", replicate(length(unique(regions)), newdata, simplify = FALSE))

  newdata$Region <- regions

#+end_src

#+RESULTS:
#+begin_example
Warning messages:
1: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
2: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
3: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
4: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
5: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
#+end_example

#+begin_src R
  pred <- predict(mod, newdata)

  pred <- cbind(newdata, pred) %>%
      mutate(AvgCdia = exp(pred))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/predictions_m1_RegionsWoSpecies.png
  ggplot(pred, aes(x = DBH, y = AvgCdia)) + geom_line() +
      facet_grid(Region~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/predictions_m1_RegionsWoSpecies.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_m1_RegionsWoSpecies_wData.png :width 600 :height 600
  ggplot(pred, aes(x = DBH, y = AvgCdia)) + geom_line() +
      facet_grid(Region~SpCode) +
      geom_point(data = ds, size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_m1_RegionsWoSpecies_wData.png]]


#+begin_src R :exports results :results graphics :file figs/predictions_m1_RegionsWoSpecies_wData_facetSpCode.png :width 1000 :height 300
  ggplot(pred, aes(x = DBH, y = AvgCdia, color = Region)) + geom_line() +
      facet_wrap(~SpCode, ncol = 5) +
      geom_point(data = ds, size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_m1_RegionsWoSpecies_wData_facetSpCode.png]]

Obviously, the lines extrapolate quite a bit.  Differences across
regions appear to be pretty small.  Looking at the model summary it is
clear that there is little evidence distinguishing the different
regions and even the different species.  The is much variation not
explained by region or species.

If I used age instead of dbh, I'd probably find stronger differences
across regions.

**** What about adding climate?
from table 1

#+name: city_climate
| Region | City             |  CDD |  HDD | Precip |
|--------+------------------+------+------+--------|
| CenFla | Orlando, FL      | 1806 |  289 |   1367 |
| GulfCo | Charleston, SC   | 1124 | 1221 |   1555 |
| InlEmp | Claremont, CA    |  134 |  872 |    523 |
| InlVal | Modesto, CA      | 1052 | 1439 |    315 |
| SacVal | Sacramento, CA   |  773 | 1718 |    470 |
| InterW | Albuquerque, NM  |  677 | 2416 |    250 |
| LoMidW | Indianapolis, IN |  510 | 3153 |    392 |
| MidWst | Minneapolis, MN  |  355 | 4436 |    622 |
| NMtnPr | Fort Collins, CO |  349 | 3332 |    452 |
| NoCalC | Berkeley, CA     |   39 | 1786 |    564 |
| NoEast | Queens, NY       |  560 | 2819 |   1041 |
| PacfNW | Longview, WA     |  157 | 2468 |   1059 |
| Piedmt | Charlotte, NC    |  847 | 1891 |   1426 |
| SacVal | Santa Monica, CA |  266 |  710 |    570 |
| SWDsrt | Glendale, AZ     | 2128 |  637 |    174 |
| TpIntW | Boise, ID        |  387 | 3325 |    417 |
| Tropic | Honolulu, HI     | 2416 |    0 |   2206 |

These values for CDD and HDD are surprising to me, but maybe I don't
really understand how they are calcuated.  Maybe the theshold
temperature is what's driving it.  I don't think it matters here.

#+begin_src R :var climate=city_climate
  str(climate)
#+end_src

#+RESULTS:
: 'data.frame':	17 obs. of  5 variables:
:  $ Region: chr  "CenFla" "GulfCo" "InlEmp" "InlVal" ...
:  $ City  : chr  "Orlando, FL" "Charleston, SC" "Claremont, CA" "Modesto, CA" ...
:  $ CDD   : int  1806 1124 134 1052 773 677 510 355 349 39 ...
:  $ HDD   : int  289 1221 872 1439 1718 2416 3153 4436 3332 1786 ...
:  $ Precip: int  1367 1555 523 315 470 250 392 622 452 564 ...


#+begin_src R :exports results :results graphics :file figs/climatespace.png
  ggplot(climate, aes(x = HDD, y = CDD,label = City)) + geom_point(aes(size = Precip)) + geom_text(hjust = .5, nudge_y = 80)
#+end_src

#+RESULTS:
[[file:../figs/climatespace.png]]

Rescale precip, HDD, and CDD by dividing by 100
#+begin_src R
  climate <- climate %>% mutate(HDD = HDD/100, CDD = CDD/100, Precip = Precip/100)
  ds <- left_join(ds, climate)
#+end_src

#+RESULTS:
: Joining, by = c("Region", "City")


#+begin_src R

#+end_src

Just precip for now
#+begin_src R
  mod_precip <- lmer(logAvgCdia ~ log(DBH) + Precip + Precip:log(DBH) + (1 + log(DBH) | SpCode) + ( 1 + log(DBH) | Region), data = ds)
#+end_src

#+RESULTS:

#+begin_src R
  mod_hdd <- lmer(logAvgCdia ~ log(DBH) + HDD + HDD:log(DBH) + (1 + log(DBH) | SpCode) + ( 1 + log(DBH) | Region), data = ds)
#+end_src

#+RESULTS:



*** rstanarm
#+begin_src R
  library(rstanarm)
  options(mc.cores = parallel::detectCores())
#+end_src

#+RESULTS:

#+begin_src R
  smod <- stan_glm(log(AvgCdia) ~ DBH, data = d, family = gaussian(link = "identity"))
#+end_src

#+RESULTS:
#+begin_example

SAMPLING FOR MODEL 'continuous' NOW (CHAIN 1).

Gradient evaluation took 0.003692 seconds
1000 transitions using 10 leapfrog steps per transition would take 36.92 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'continuous' NOW (CHAIN 2).

Gradient evaluation took 0.003201 seconds
1000 transitions using 10 leapfrog steps per transition would take 32.01 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'continuous' NOW (CHAIN 3).

Gradient evaluation took 0.005202 seconds
1000 transitions using 10 leapfrog steps per transition would take 52.02 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'continuous' NOW (CHAIN 4).

Gradient evaluation took 0.006159 seconds
1000 transitions using 10 leapfrog steps per transition would take 61.59 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 19.5348 seconds (Warm-up)
               17.1469 seconds (Sampling)
               36.6817 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 19.8768 seconds (Warm-up)
               16.8117 seconds (Sampling)
               36.6885 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 21.2892 seconds (Warm-up)
               16.3886 seconds (Sampling)
               37.6777 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 19.5799 seconds (Warm-up)
               17.5401 seconds (Sampling)
               37.12 seconds (Total)
#+end_example

#+begin_src R
  summary(smod)
#+end_src

#+RESULTS:
#+begin_example

Model Info:

 function:     stan_glm
 family:       gaussian [identity]
 formula:      log(AvgCdia) ~ DBH
 algorithm:    sampling
 priors:       see help('prior_summary')
 sample:       4000 (posterior sample size)
 observations: 14440
 predictors:   2

Estimates:
                mean    sd      2.5%    25%     50%     75%     97.5%
(Intercept)       1.2     0.0     1.2     1.2     1.2     1.2     1.2
DBH               0.0     0.0     0.0     0.0     0.0     0.0     0.0
sigma             0.4     0.0     0.4     0.4     0.4     0.5     0.5
mean_PPD          2.0     0.0     2.0     2.0     2.0     2.0     2.1
log-posterior -8910.8     1.2 -8914.0 -8911.4 -8910.5 -8909.9 -8909.4

Diagnostics:
              mcse Rhat n_eff
(Intercept)   0.0  1.0  3986
DBH           0.0  1.0  4000
sigma         0.0  1.0  2642
mean_PPD      0.0  1.0  3693
log-posterior 0.0  1.0  1848

For each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1).
#+end_example

#+begin_src R
  print(smod, digits = 5)
#+end_src

#+RESULTS:


#+begin_src R
  smod_Sp <- stan_glmer(log(AvgCdia) ~ DBH | SpCode, data = d, family = gaussian(link = "identity"))
#+end_src

#+RESULTS:
: Error: Using '|' in model formula not allowed. Maybe you meant to use 'stan_(g)lmer'?

posterior predict with exp transform


* champion trees?
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-26 Wed 16:11
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Data
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
could one use the champion trees to set a maximum asymptote for a
species in the model?  The prior would have no mass above the maximum
dbh of the champion tree, but would have mass below it because the
asymptote in the urban context may be much lower.

maybe i would have to give up the species random effect for this term
and model them separately?


* Tree Dimensions
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-26 Wed 16:11
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Data
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
| Tree Dimension            | abbr |
|---------------------------+------|
| leaf area                 | la   |
| crown diameter            | cd   |
| crown height              | ch   |
| age                       | age  |
| diameter at breast height | dbh  |
| tree height               | th   |

Equations:

| Independent Variable (IV) | Dependent Variable (DV) |
|---------------------------+-------------------------|
| dbh                       | age                     |
| cd                        | dbh                     |
| dbh                       | cd                      |
| dbh                       | ch                      |
| age                       | dbh                     |
| dbh                       | la                      |
| dbh                       | th                      |



* Species
:PROPERTIES:
:ARCHIVE_TIME: 2018-09-26 Wed 16:12
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Data
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** taxonomy
Nesting of taxonomy.

Cultivar < Species < Genus < Functional Type

Functional types:
1) Broad leaf
2) Conifer
3) Palm
4) ...
5) ...
| FunctionalType      |
|---------------------|
| broadleaf deciduous |
| broadleaf evergreen |
| conifer evergreen   |
| palm evergreen      |



|     | SpCode | ScientificName                         | FunctionalType      |                     |
|-----+--------+----------------------------------------+---------------------+---------------------|
|   1 | ACFA   | Acacia farnesiana                      | broadleaf deciduous |                     |
|   2 | ACME   | Acacia melanoxylon                     | broadleaf evergreen |                     |
|   3 | ACSA3  | Acacia salicina                        | broadleaf evergreen |                     |
|   4 | ACMA   | Acer macrophyllum                      | broadleaf deciduous |                     |
|   5 | ACNE   | Acer negundo                           | broadleaf deciduous |                     |
|   6 | ACPA   | Acer palmatum                          | broadleaf deciduous |                     |
|   7 | ACPL   | Acer platanoides                       | broadleaf deciduous |                     |
|   8 | ACRU   | Acer rubrum                            | broadleaf deciduous |                     |
|   9 | ACSA1  | Acer saccharinum                       | broadleaf deciduous |                     |
|  10 | ACSA2  | Acer saccharum                         | broadleaf deciduous |                     |
|  11 | AEHI   | Aesculus hippocastanum                 | broadleaf deciduous |                     |
|  12 | BABL   | Bauhinia x blakeana                    | broadleaf evergreen |                     |
|  13 | BENI   | Betula nigra                           | broadleaf deciduous |                     |
|  14 | BEPE   | Betula pendula                         | broadleaf deciduous |                     |
|  15 | BRPO   | Brachychiton populneum                 | broadleaf evergreen |                     |
|  16 | BUCA   | Butia capitata                         | palm evergreen      |                     |
|  17 | CACI   | Callistemon citrinus                   | broadleaf evergreen |                     |
|  18 | CADE2  | Calocedrus decurrens                   | conifer evergreen   |                     |
|  19 | CAIN4  | Calophyllum inophyllum                 | broadleaf evergreen |                     |
|  20 | CABEF  | Carpinus betulus 'Fastigiata'          | broadleaf deciduous |                     |
|  21 | CAIL   | Carya illinoinensis                    | broadleaf deciduous |                     |
|  22 | CANE33 | Cassia x nealiae                       | broadleaf deciduous |                     |
|  23 | CAEQ   | Casuarina equisetifolia                | broadleaf evergreen |                     |
|  24 | CASP   | Catalpa speciosa                       | broadleaf deciduous |                     |
|  25 | CEDE   | Cedrus deodara                         | conifer evergreen   |                     |
|  26 | CELA   | Celtis laevigata                       | conifer evergreen   | This can't be right |
|  27 | CEOC   | Celtis occidentalis                    | broadleaf deciduous |                     |
|  28 | CESI4  | Celtis sinensis                        | broadleaf deciduous |                     |
|  29 | CESI3  | Ceratonia siliqua                      | broadleaf evergreen |                     |
|  30 | CECA   | Cercis canadensis                      | broadleaf deciduous |                     |
|  31 | CHLI   | Chilopsis linearis                     | broadleaf deciduous |                     |
|  32 | CICA   | Cinnamomum camphora                    | broadleaf evergreen |                     |
|  33 | CISP2  | Citharexylum spinosum                  | broadleaf evergreen |                     |
|  34 | CONU   | Cocos nucifera                         | palm evergreen      |                     |
|  35 | COERA2 | Conocarpus erectus var. argenteus      | broadleaf evergreen |                     |
|  36 | COSU2  | Cordia subcordata                      | broadleaf evergreen |                     |
|  37 | COFL   | Cornus florida                         | broadleaf deciduous |                     |
|  38 | CR     | Crataegus sp.                          | broadleaf deciduous |                     |
|  39 | CRLA   | Crataegus x lavallei                   | broadleaf deciduous |                     |
|  40 | CUAN   | Cupaniopsis anacardioides              | broadleaf evergreen |                     |
|  41 | DERE   | Delonix regia                          | broadleaf deciduous |                     |
|  42 | ELAN   | Elaeagnus angustifolia                 | broadleaf deciduous |                     |
|  43 | ELOR2  | Elaeodendron orientale                 | broadleaf evergreen |                     |
|  44 | ERJA   | Eriobotrya japonica                    | broadleaf evergreen |                     |
|  45 | EUFI81 | Eucalyptus ficifolia                   | broadleaf evergreen |                     |
|  46 | EUGL   | Eucalyptus globulus                    | broadleaf evergreen |                     |
|  47 | EUMI2  | Eucalyptus microtheca                  | broadleaf evergreen |                     |
|  48 | EUSI   | Eucalyptus sideroxylon                 | broadleaf evergreen |                     |
|  49 | FASY   | Fagus sylvatica                        | broadleaf deciduous |                     |
|  50 | FIBE   | Ficus benjamina                        | broadleaf evergreen |                     |
|  51 | FIMI   | Ficus thonningii                       | broadleaf evergreen |                     |
|  52 | FIDE6  | Filicium decipiens                     | broadleaf evergreen |                     |
|  53 | FRAM   | Fraxinus americana                     | broadleaf deciduous |                     |
|  54 | FRAN2  | Fraxinus angustifolia                  | broadleaf deciduous |                     |
|  55 | FRAN_R | Fraxinus angustifolia 'Raywood'        | broadleaf deciduous |                     |
|  56 | FREX_H | Fraxinus excelsior 'Hessei'            | broadleaf deciduous |                     |
|  57 | FRHO   | Fraxinus holotricha                    | broadleaf deciduous |                     |
|  58 | FRLA   | Fraxinus latifolia                     | broadleaf deciduous |                     |
|  59 | FRPE   | Fraxinus pennsylvanica                 | broadleaf deciduous |                     |
|  60 | FRPE_M | Fraxinus pennsylvanica 'Marshall'      | broadleaf deciduous |                     |
|  61 | FRUH   | Fraxinus uhdei                         | broadleaf deciduous |                     |
|  62 | FRVE   | Fraxinus velutina                      | broadleaf deciduous |                     |
|  63 | FRVE_G | Fraxinus velutina 'Modesto'            | broadleaf deciduous |                     |
|  64 | GIBI   | Ginkgo biloba                          | broadleaf deciduous |                     |
|  65 | GLTR   | Gleditsia triacanthos                  | broadleaf deciduous |                     |
|  66 | GYDI   | Gymnocladus dioicus                    | broadleaf deciduous |                     |
|  67 | ILOP   | Ilex opaca                             | broadleaf evergreen |                     |
|  68 | ILPA2  | Ilex paraguariensis                    | broadleaf evergreen |                     |
|  69 | JAMI   | Jacaranda mimosifolia                  | broadleaf deciduous |                     |
|  70 | JUNI   | Juglans nigra                          | broadleaf deciduous |                     |
|  71 | JUVI   | Juniperus virginiana                   | conifer evergreen   |                     |
|  72 | JUSI   | Juniperus virginiana var. silicicola   | conifer evergreen   |                     |
|  73 | KOELFO | Koelreuteria elegans                   | broadleaf deciduous |                     |
|  74 | KOPA   | Koelreuteria paniculata                | broadleaf deciduous |                     |
|  75 | LAIN   | Lagerstroemia indica                   | broadleaf deciduous |                     |
|  76 | LA6    | Lagerstroemia sp.                      | broadleaf deciduous |                     |
|  77 | LASP   | Lagerstroemia speciosa                 | broadleaf deciduous |                     |
|  78 | LIST   | Liquidambar styraciflua                | broadleaf deciduous |                     |
|  79 | LITU   | Liriodendron tulipifera                | broadleaf deciduous |                     |
|  80 | MAGR   | Magnolia grandiflora                   | broadleaf evergreen |                     |
|  81 | PYAN   | Malus angustifolia                     | broadleaf deciduous |                     |
|  82 | MA2    | Malus sp.                              | broadleaf deciduous |                     |
|  83 | MEQU   | Melaleuca quinquenervia                | broadleaf evergreen |                     |
|  84 | MEEX   | Metrosideros excelsa                   | broadleaf evergreen |                     |
|  85 | MOAL   | Morus alba                             | broadleaf deciduous |                     |
|  86 | MO     | Morus sp.                              | broadleaf deciduous |                     |
|  87 | OLEU   | Olea europaea                          | broadleaf evergreen |                     |
|  88 | PAAC   | Parkinsonia aculeata                   | broadleaf deciduous |                     |
|  89 | CEFL   | Parkinsonia florida                    | broadleaf deciduous |                     |
|  90 | PHCA   | Phoenix canariensis                    | palm evergreen      |                     |
|  91 | PHDA4  | Phoenix dactylifera                    | palm evergreen      |                     |
|  92 | PIPU   | Picea pungens                          | conifer evergreen   |                     |
|  93 | PIBR2  | Pinus brutia                           | conifer evergreen   |                     |
|  94 | PICA   | Pinus canariensis                      | conifer evergreen   |                     |
|  95 | PICO   | Pinus contorta                         | conifer evergreen   |                     |
|  96 | PIEC   | Pinus echinata                         | conifer evergreen   |                     |
|  97 | PIED   | Pinus edulis                           | conifer evergreen   |                     |
|  98 | PIEL2  | Pinus eldarica                         | conifer evergreen   |                     |
|  99 | PIEL   | Pinus elliottii                        | conifer evergreen   |                     |
| 100 | PIHA   | Pinus halepensis                       | conifer evergreen   |                     |
| 101 | PINI   | Pinus nigra                            | conifer evergreen   |                     |
| 102 | PIPO   | Pinus ponderosa                        | conifer evergreen   |                     |
| 103 | PIRA   | Pinus radiata                          | conifer evergreen   |                     |
| 104 | PIST   | Pinus strobus                          | conifer evergreen   |                     |
| 105 | PISY   | Pinus sylvestris                       | conifer evergreen   |                     |
| 106 | PITA   | Pinus taeda                            | conifer evergreen   |                     |
| 107 | PITH   | Pinus thunbergiana                     | conifer evergreen   |                     |
| 108 | PICH   | Pistacia chinensis                     | broadleaf deciduous |                     |
| 109 | PIUN   | Pittosporum undulatum                  | broadleaf evergreen |                     |
| 110 | PLOC   | Platanus occidentalis                  | broadleaf deciduous |                     |
| 111 | PLRA   | Platanus racemosa                      | broadleaf deciduous |                     |
| 112 | PLAC   | Platanus x acerifolia                  | broadleaf deciduous |                     |
| 113 | THOR   | Platycladus orientalis                 | conifer evergreen   |                     |
| 114 | POMA   | Podocarpus macrophyllus                | conifer evergreen   |                     |
| 115 | POAN   | Populus angustifolia                   | broadleaf deciduous |                     |
| 116 | POTR2  | Populus balsamifera subsp. trichocarpa | broadleaf deciduous |                     |
| 117 | PODE   | Populus deltoides                      | broadleaf deciduous |                     |
| 118 | POFR   | Populus fremontii                      | broadleaf deciduous |                     |
| 119 | POSA   | Populus sargentii                      | broadleaf deciduous |                     |
| 120 | PRCH   | Prosopis chilensis                     | broadleaf deciduous |                     |
| 121 | PRCA   | Prunus caroliniana                     | broadleaf evergreen |                     |
| 122 | PRCE   | Prunus cerasifera                      | broadleaf deciduous |                     |
| 123 | PRCE   | Prunus cerasifera cvs.                 | broadleaf deciduous |                     |
| 124 | PRSE2  | Prunus serrulata                       | broadleaf deciduous |                     |
| 125 | PR     | Prunus sp.                             | broadleaf deciduous |                     |
| 126 | PRYE   | Prunus yedoensis                       | broadleaf deciduous |                     |
| 127 | PSME   | Pseudotsuga menziesii                  | conifer evergreen   |                     |
| 128 | PYCA   | Pyrus calleryana                       | broadleaf deciduous |                     |
| 129 | PYCA_B | Pyrus calleryana 'Bradford'            | broadleaf deciduous |                     |
| 130 | PYCA   | Pyrus calleryana cvs.                  | broadleaf deciduous |                     |
| 131 | PYKA   | Pyrus kawakamii                        | broadleaf evergreen |                     |
| 132 | PY     | Pyrus sp.                              | broadleaf deciduous |                     |
| 133 | QUAG   | Quercus agrifolia                      | broadleaf evergreen |                     |
| 134 | QUAL   | Quercus alba                           | broadleaf deciduous |                     |
| 135 | QUIL2  | Quercus ilex                           | broadleaf evergreen |                     |
| 136 | QULA2  | Quercus laurifolia                     | broadleaf deciduous |                     |
| 137 | QULO   | Quercus lobata                         | broadleaf deciduous |                     |
| 138 | QUMA1  | Quercus macrocarpa                     | broadleaf deciduous |                     |
| 139 | QUNI   | Quercus nigra                          | broadleaf deciduous |                     |
| 140 | QUPA   | Quercus palustris                      | broadleaf deciduous |                     |
| 141 | QUPH   | Quercus phellos                        | broadleaf deciduous |                     |
| 142 | QURU   | Quercus rubra                          | broadleaf deciduous |                     |
| 143 | QUSH   | Quercus shumardii                      | broadleaf deciduous |                     |
| 144 | QUVI   | Quercus virginiana                     | broadleaf evergreen |                     |
| 145 | RHLA   | Rhus lancea                            | broadleaf evergreen |                     |
| 146 | ROPS   | Robinia pseudoacacia                   | broadleaf deciduous |                     |
| 147 | SAPA   | Sabal palmetto                         | palm evergreen      |                     |
| 148 | PISA2  | Samanea saman                          | broadleaf deciduous |                     |
| 149 | SCMO   | Schinus molle                          | broadleaf evergreen |                     |
| 150 | SCTE   | Schinus terebinthifolius               | broadleaf evergreen |                     |
| 151 | SESE   | Sequoia sempervirens                   | conifer evergreen   |                     |
| 152 | SWMA   | Swietenia mahagoni                     | broadleaf evergreen |                     |
| 153 | SYRO   | Syagrus romanzoffiana                  | palm evergreen      |                     |
| 154 | TAAR   | Tabebuia aurea                         | broadleaf evergreen |                     |
| 155 | TAPA   | Tabebuia heterophylla                  | broadleaf evergreen |                     |
| 156 | TAOC   | Tabebuia ochracea subsp. neochrysantha | broadleaf evergreen |                     |
| 157 | TIAM   | Tilia americana                        | broadleaf deciduous |                     |
| 158 | TICO   | Tilia cordata                          | broadleaf deciduous |                     |
| 159 | TITO   | Tilia tomentosa                        | broadleaf deciduous |                     |
| 160 | TRSE6  | Triadica sebifera                      | broadleaf deciduous |                     |
| 161 | TRCO   | Tristaniopsis conferta                 | broadleaf evergreen |                     |
| 162 | ULAL   | Ulmus alata                            | broadleaf deciduous |                     |
| 163 | ULAM   | Ulmus americana                        | broadleaf deciduous |                     |
| 164 | ULPA   | Ulmus parvifolia                       | broadleaf deciduous |                     |
| 165 | ULPU   | Ulmus pumila                           | broadleaf deciduous |                     |
| 166 | VEME   | Veitchia merrillii                     | palm evergreen      |                     |
| 167 | WAFI   | Washingtonia filifera                  | palm evergreen      |                     |
| 168 | WARO   | Washingtonia robusta                   | palm evergreen      |                     |
| 169 | ZESE   | Zelkova serrata                        | broadleaf deciduous |                     |
** species traits
think about species level traits - shade tolerance, water use,
morphology (wood, leaf, etc).

where would these come from, what would they be?  What are the traits
that are important for urban environments?


* TODO intermediate complexity   THINK HARD ABOUT REASONABLE VARIABILITY FOR EACH PARAMETER.  SET Intelligent priors!  some need to be much smaller than others
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle inter.R
:ARCHIVE_TIME: 2018-10-24 Wed 15:41
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_TODO: TODO
:ARCHIVE_ITAGS: work allo
:END:
** model R code

#+begin_src R
  library(dplyr)
  library(brms)
                                          #  library(bayesplot)

  genus <- "inter"
  species <- "inter"
  cities <- "inter"
  climate <- "inter"
  hetero <- "no"
  family <- "Gamma"

  data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
  b0_form <- formula(b0 ~ (1 | Genus/Species))
  b1_form <- formula(b1 ~ (1 | Genus/Species))
  b2_form <- formula(b2 ~ (1 | Genus/Species))
  b3_form <- formula(b3 ~ (1 | Genus/Species))

  form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)

  nlprior <- c(prior(gamma(4, 1.33), nlpar = "b0",lb = 0),
               prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
               prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
               prior(gamma(44.4, 44.4), nlpar = "b3",lb = 0),
               prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .2), class = "sd", nlpar = "b0", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b0", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b1", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b1", group = "Genus:Species"),
               prior(normal(0, .05), class = "sd", nlpar = "b2", group = "Genus"),
               prior(normal(0, .025), class = "sd", nlpar = "b2", group = "Genus:Species"),
               prior(normal(0, .05), class = "sd", nlpar = "b3", group = "Genus"),
               prior(normal(0, .025), class = "sd", nlpar = "b3", group = "Genus:Species"))


  d <- readRDS("../data/age_dbh_testing.rds")

  prior_mod <-  brm(form,
                    data = d,
                    prior = nlprior,
                    family = Gamma("identity"),
                    sample_prior = "only",
                    chains = 2, cores = 2, init_r = .3, iter = 300, control = list(adapt_delta = .8))


  ## pred <- predict(prior_mod, newdata = d)

  ## mod <- brm(form,
  ##            data = d,
  ##     p       prior = nlprior,
  ##            family = Gamma("identity"),
  ##            chains = 6, cores = 6, init_r = .3, iter = 1000)

  ## saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))

#+end_src

#+begin_src R :tangle no :exports results :results graphics :file ../figs/inter_marginaleffects.png
 marginal_effects(prior_mod, spaghetti = T, nsamples = 200, theme = theme_gray())
#+end_src

#+RESULTS:
[[file:../figs/inter_marginaleffects.png]]

#+begin_src R :exports results :results graphics :file ../figs/inter_stat_median.png
     color_scheme_set("blue")
     ppc_stat(d$DBH, pp, stat = "median") + grid_lines()
#+end_src

#+RESULTS:
[[file:../figs/inter_stat_median.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/inter_prior_pred.png
pp <- posterior_predict(prior_mod, nsamples=100)
ppc_dens_overlay(y = d$DBH, yrep=pp) + ylim(c(0,0.018))
#+end_src

#+RESULTS:
[[file:../figs/inter_prior_pred.png]]

#+begin_src R :tangle no :exports results :results graphics :file ../figs/inter_prior_pred_higher.png
pp <- posterior_predict(prior_mod, nsamples=30)
ppc_dens_overlay(y = d$DBH, yrep=pp)
#+end_src

#+RESULTS:
[[file:../figs/inter_prior_pred_higher.png]]

** tangle
C-c C-v t

** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R
:
: sent 537 bytes  received 60 bytes  27.77 bytes/sec
: total size is 2993  speedup is 5.01

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.Rout
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_inter_species_inter_cities_inter_climate_inter_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds
:
: sent 38 bytes  received 12500133 bytes  2777815.78 bytes/sec
: total size is 12598354  speedup is 1.01
: You have new mail in /var/mail/erker

** assess model
*** mod with data/likelihood
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_inter_species_inter_cities_inter_climate_inter_hetero_no_family_Gamma.rds")

#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | Genus/Species)
         b1 ~ (1 | Genus/Species)
         b2 ~ (1 | Genus/Species)
         b3 ~ (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 3000

Group-Level Effects:
~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.15      0.10     0.01     0.38        993 1.00
sd(b1_Intercept)     0.38      0.09     0.19     0.53          5 1.46
sd(b2_Intercept)     0.22      0.03     0.15     0.29       1049 1.03
sd(b3_Intercept)     0.17      0.03     0.12     0.22         12 1.15

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.04      0.03     0.00     0.11       3000 1.00
sd(b1_Intercept)     0.06      0.03     0.01     0.13        526 1.01
sd(b2_Intercept)     0.03      0.02     0.00     0.07       1497 1.00
sd(b3_Intercept)     0.04      0.02     0.00     0.07        639 1.01

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.79      0.09     2.62     2.97       1103 1.02
b1_Intercept     1.23      0.14     0.94     1.50          7 1.32
b2_Intercept     1.14      0.07     1.01     1.28       1295 1.00
b3_Intercept     1.09      0.05     1.00     1.22          7 1.34

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     9.79      0.18     9.43    10.15       3000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png :height 1300
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:gdd")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]



#+begin_src R
precip.gdd <-   marginal_effects(mod, effects = "Precip:gdd", surface = T)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_Precipgdd_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
precip.gdd
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_Precipgdd_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma_wCities.png
  plot(precip.gdd)[[1]] +
      geom_point(data = unique(select(mod$data, City, gdd, Precip)), aes(x = Precip, y = gdd)) +
      geom_label(data = unique(select(mod$data, City, gdd, Precip)), aes(x = Precip, y = gdd, label = City), nudge_y = .15)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma_wCities.png]]


#+begin_src R
    cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
    cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
    cond <- left_join(cond, unique(select(mod$data, City, Precip, gdd)))
#    cond <- filter(cond, Species %in%  c("LIST"))

     me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict")
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png :width 1000 :height 100

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddPrecip = gdd * Precip,
                          City = factor(City, levels=unique(City[order(gddPrecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(gddPrecip = (gdd - min(gdd)) * (Precip - min(Precip)),
             City = factor(City, levels=unique(City[order(gddPrecip)]), ordered=TRUE))

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = .3, size = .5) +
          facet_grid(Species~City*gddPrecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
   pp_check(mod) + xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]


* TODO genus: many;  species: many; cities: many; climate: b1linint; hetero: no; family: Gamma
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R
:ARCHIVE_TIME: 2018-10-24 Wed 15:41
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_TODO: TODO
:ARCHIVE_ITAGS: work allo
:END:
** model R code
#+begin_src R
    library(dplyr)
    library(brms)

  ## source("allo_functions.R")

    genus <- "many"
    species <- "many"
    cities <- "many"
    climate <- "b1linint"
    hetero <- "no"
    family <- "Gamma"


    data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
    b0_form <- formula(b0 ~ (1 | City) + (1 | Genus/Species))
    b1_form <- formula(b1 ~ precip * gdd +  (1 | City) + (1 | Genus / Species))
    b1_form <- formula(b1 ~ (1 | City) + (1 | Genus / Species))
    b2_form <- formula(b2 ~ (1 | City) + (1 | Genus/Species))
    b3_form <- formula(b3 ~ (1 | City) + (1 | Genus/Species))

    form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)

    nlprior <- c(prior(gamma(4, 1.33), nlpar = "b0",lb = 0),
                 prior(gamma(25, 16.7), nlpar = "b1",lb = 0),
                 prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
                 prior(gamma(44.4, 44.4), nlpar = "b3",lb = 0),
                 prior(gamma(5, .3), class = "shape"),
                 prior(gamma(10,5), class = "sd", nlpar = "b0"),
                 prior(gamma(10,10), class = "sd", nlpar = "b1"),
                 prior(gamma(5,10), class = "sd", nlpar = "b2"),
                 prior(gamma(5,10), class = "sd", nlpar = "b3"))


     d <- readRDS("../data/age_dbh_testing.rds")


    ## mod <- brm(form,
    ##            data = d,
    ##            prior = nlprior,
    ##            family = Gamma("identity"),
    ##            chains = 1, cores = 1, init_r = .3, iter = 2000)

    ##    saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

#+RESULTS:

** tangle
** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R
:
: sent 783 bytes  received 42 bytes  330.00 bytes/sec
: total size is 1553  speedup is 1.88

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.Rout
#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds
:
: sent 38 bytes  received 42167041 bytes  3373366.32 bytes/sec
: total size is 42337983  speedup is 1.00

** assess model
*** prior mod
#+begin_src R
  prior_mod <-  brm(form,
               data = d,
               prior = nlprior,
               family = Gamma("identity"),
               sample_prior = "only",
               chains = 2, cores = 2, init_r = .3, iter = 600)

#+end_src

#+begin_src R :exports results :results graphics :file ../figs/teae.png
pairs(prior_mod)
#+end_src
*** mod with data/likelihood
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds")
mod <- mod_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ Precip * gdd + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 8 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 8000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     1.41      0.31     0.90     2.12        231 1.03
sd(b1_Intercept)     0.85      0.27     0.43     1.48       1625 1.01
sd(b2_Intercept)     0.34      0.08     0.22     0.53       3866 1.00
sd(b3_Intercept)     0.19      0.04     0.12     0.29       3661 1.00

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.42      0.20     0.05     0.83       1916 1.00
sd(b1_Intercept)     1.16      0.29     0.63     1.78       1825 1.01
sd(b2_Intercept)     0.13      0.07     0.01     0.29       1529 1.01
sd(b3_Intercept)     0.11      0.05     0.01     0.21       1268 1.01

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.27      0.16     0.02     0.60       1542 1.01
sd(b1_Intercept)     0.64      0.21     0.31     1.14       3183 1.00
sd(b2_Intercept)     0.14      0.05     0.06     0.24       2888 1.00
sd(b3_Intercept)     0.11      0.03     0.05     0.18       2355 1.01

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.31      0.37     1.57     3.04       3547 1.00
b1_Intercept      0.68      0.23     0.31     1.19       8000 1.00
b1_Precip         0.67      0.23     0.29     1.19       8000 1.00
b1_gdd            0.22      0.06     0.11     0.35       8000 1.00
b1_Precip:gdd     0.19      0.06     0.09     0.32       8000 1.02
b2_Intercept      0.80      0.11     0.60     1.02       2819 1.00
b3_Intercept      1.05      0.06     0.93     1.18       3680 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    15.06      0.29    14.50    15.64       8000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 3 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png :height 1300
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:gdd")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]



#+begin_src R
precip.gdd <-   marginal_effects(mod, effects = "Precip:gdd", surface = T)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_Precipgdd_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
precip.gdd
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_Precipgdd_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma_wCities.png
  plot(precip.gdd)[[1]] +
      geom_point(data = unique(select(mod$data, City, gdd, Precip)), aes(x = Precip, y = gdd)) +
      geom_label(data = unique(select(mod$data, City, gdd, Precip)), aes(x = Precip, y = gdd, label = City), nudge_y = .15)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma_wCities.png]]


#+begin_src R
    cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
    cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
    cond <- left_join(cond, unique(select(mod$data, City, Precip, gdd)))
#    cond <- filter(cond, Species %in%  c("LIST"))

     me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict")
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png :width 1000 :height 100

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddPrecip = gdd * Precip,
                          City = factor(City, levels=unique(City[order(gddPrecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(gddPrecip = (gdd - min(gdd)) * (Precip - min(Precip)),
             City = factor(City, levels=unique(City[order(gddPrecip)]), ordered=TRUE))

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = .3, size = .5) +
          facet_grid(Species~City*gddPrecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
   pp_check(mod) + xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]


* Exploring age and dbh
:PROPERTIES:
:ARCHIVE_TIME: 2018-10-26 Fri 11:00
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** load libraries
#+begin_src R :exports none
  library(plyr)
  library(dplyr)
  library(ggplot2)
  library(readr)
  library(ascii)
  library(tidyr)
#+end_src

#+RESULTS:
** functions
#+begin_src R
  options(asciiType = "org")
  ascii.nowarn.print <- function(x,...) {
                                          #op <- options(warn = -1)
                                          #      on.exit(options(op))

      suppressWarnings(print(ascii(x,...)))

  }
#+end_src

#+RESULTS:

** read in data
#+begin_src R :exports code
  d <- read_csv("../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv")
#+end_src

#+RESULTS:
#+begin_example
Parsed with column specification:
cols(
  .default = col_integer(),
  Region = col_character(),
  City = col_character(),
  Source = col_character(),
  Zone = col_character(),
  `Park/Street` = col_character(),
  SpCode = col_character(),
  ScientificName = col_character(),
  CommonName = col_character(),
  TreeType = col_character(),
  street = col_character(),
  `DBH (cm)` = col_double(),
  `TreeHt (m)` = col_double(),
  CrnBase = col_double(),
  `CrnHt (m)` = col_double(),
  `CdiaPar (m)` = col_double(),
  `CDiaPerp (m)` = col_double(),
  `AvgCdia (m)` = col_double(),
  `Leaf (m2)` = col_double(),
  dbh1 = col_double()
)
See spec(...) for full column specifications.
Warning: 24255 parsing failures.
row [90m# A tibble: 5 x 5[39m col     row col   expected   actual file                                            expected   [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m      [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m                                           actual [90m1[39m  126[90m2[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.â€¦ file [90m2[39m  126[90m3[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.â€¦ row [90m3[39m  126[90m4[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.â€¦ col [90m4[39m  126[90m5[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.â€¦ expected [90m5[39m  126[90m6[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.â€¦
... ........................... ... ............................................................................... ........ ............ [... truncated]
Warning message:
In rbind(names(probs), probs_f) :
  number of columns of result is not a multiple of vector length (arg 1)
#+end_example


#+begin_src R
                                          #str(d)
#+end_src

#+RESULTS:
** fix some species things
*** fix lower case species codes
#+begin_src R
  d$SpCode <- toupper(d$SpCode)
#+end_src

#+RESULTS:
*** fix QUAG1 to be QUAG
#+begin_src R
  d$SpCode[d$SpCode == "QUAG1"] <- "QUAG"
#+end_src

#+RESULTS:
*** fix common names

Not all are fixed!

#+begin_src R
  d$CommonName[d$CommonName == "Kurrajong"] <- "Kurrajong/Bottle tree"
  d$CommonName[d$CommonName == "Bottle tree"] <- "Kurrajong/Bottle tree"

  d$CommonName[d$CommonName == "Apple"] <- "Apple/Crabapple"
  d$CommonName[d$CommonName == "Crabapple"] <- "Apple/Crabapple"


  d$CommonName[d$CommonName == "silver maple"] <- "Silver maple"
  d$CommonName[d$CommonName == "camphor tree"] <- "Camphor tree"
  d$CommonName[d$CommonName == "ginkgo"] <- "Ginkgo"
  d$CommonName[d$CommonName == "honeylocust"] <- "Honeylocust"
  d$CommonName[d$CommonName == "ginkgo"] <- "Ginkgo"
  d$CommonName[d$CommonName == "common crapemyrtle"] <- "Common crapemyrtle"
  d$CommonName[d$CommonName == "sweetgum"] <- "Sweetgum"
  d$CommonName[d$CommonName == "southern magnolia"] <- "Southern magnolia"



#+end_src

#+RESULTS:

** species are
#+name: tree_types
| TreeType | FunctionalType      |
|----------+---------------------|
| BDL      | broadleaf deciduous |
| BDM      | broadleaf deciduous |
| BDS      | broadleaf deciduous |
| BEL      | broadleaf evergreen |
| BEM      | broadleaf evergreen |
| BES      | broadleaf evergreen |
| CEL      | conifer evergreen   |
| CEM      | conifer evergreen   |
| CES      | conifer evergreen   |
| PEL      | palm evergreen      |
| PEM      | palm evergreen      |
| PES      | palm evergreen      |
I got rid of the small medium and large distinctions for
simplification here.

#+begin_src R :var tt=tree_types
  sp <- d %>% select(SpCode, ScientificName, TreeType) %>%
      left_join(tt) %>%
      select(-TreeType) %>%
      unique() %>%
      arrange(ScientificName) %>%
      ascii.nowarn.print()
#+end_src

#+RESULTS:
#+begin_example
Joining, by = "TreeType"
|     | SpCode | ScientificName                         | FunctionalType      |
|-----+--------+----------------------------------------+---------------------|
| 1   | ACFA   | Acacia farnesiana                      | broadleaf deciduous |
| 2   | ACME   | Acacia melanoxylon                     | broadleaf evergreen |
| 3   | ACSA3  | Acacia salicina                        | broadleaf evergreen |
| 4   | ACMA   | Acer macrophyllum                      | broadleaf deciduous |
| 5   | ACNE   | Acer negundo                           | broadleaf deciduous |
| 6   | ACPA   | Acer palmatum                          | broadleaf deciduous |
| 7   | ACPL   | Acer platanoides                       | broadleaf deciduous |
| 8   | ACRU   | Acer rubrum                            | broadleaf deciduous |
| 9   | ACSA1  | Acer saccharinum                       | broadleaf deciduous |
| 10  | ACSA2  | Acer saccharum                         | broadleaf deciduous |
| 11  | AEHI   | Aesculus hippocastanum                 | broadleaf deciduous |
| 12  | BABL   | Bauhinia x blakeana                    | broadleaf evergreen |
| 13  | BENI   | Betula nigra                           | broadleaf deciduous |
| 14  | BEPE   | Betula pendula                         | broadleaf deciduous |
| 15  | BRPO   | Brachychiton populneum                 | broadleaf evergreen |
| 16  | BUCA   | Butia capitata                         | palm evergreen      |
| 17  | CACI   | Callistemon citrinus                   | broadleaf evergreen |
| 18  | CADE2  | Calocedrus decurrens                   | conifer evergreen   |
| 19  | CAIN4  | Calophyllum inophyllum                 | broadleaf evergreen |
| 20  | CABEF  | Carpinus betulus 'Fastigiata'          | broadleaf deciduous |
| 21  | CAIL   | Carya illinoinensis                    | broadleaf deciduous |
| 22  | CANE33 | Cassia x nealiae                       | broadleaf deciduous |
| 23  | CAEQ   | Casuarina equisetifolia                | broadleaf evergreen |
| 24  | CASP   | Catalpa speciosa                       | broadleaf deciduous |
| 25  | CEDE   | Cedrus deodara                         | conifer evergreen   |
| 26  | CELA   | Celtis laevigata                       | conifer evergreen   |
| 27  | CEOC   | Celtis occidentalis                    | broadleaf deciduous |
| 28  | CESI4  | Celtis sinensis                        | broadleaf deciduous |
| 29  | CESI3  | Ceratonia siliqua                      | broadleaf evergreen |
| 30  | CECA   | Cercis canadensis                      | broadleaf deciduous |
| 31  | CHLI   | Chilopsis linearis                     | broadleaf deciduous |
| 32  | CICA   | Cinnamomum camphora                    | broadleaf evergreen |
| 33  | CISP2  | Citharexylum spinosum                  | broadleaf evergreen |
| 34  | CONU   | Cocos nucifera                         | palm evergreen      |
| 35  | COERA2 | Conocarpus erectus var. argenteus      | broadleaf evergreen |
| 36  | COSU2  | Cordia subcordata                      | broadleaf evergreen |
| 37  | COFL   | Cornus florida                         | broadleaf deciduous |
| 38  | CR     | Crataegus sp.                          | broadleaf deciduous |
| 39  | CRLA   | Crataegus x lavallei                   | broadleaf deciduous |
| 40  | CUAN   | Cupaniopsis anacardioides              | broadleaf evergreen |
| 41  | DERE   | Delonix regia                          | broadleaf deciduous |
| 42  | ELAN   | Elaeagnus angustifolia                 | broadleaf deciduous |
| 43  | ELOR2  | Elaeodendron orientale                 | broadleaf evergreen |
| 44  | ERJA   | Eriobotrya japonica                    | broadleaf evergreen |
| 45  | EUFI81 | Eucalyptus ficifolia                   | broadleaf evergreen |
| 46  | EUGL   | Eucalyptus globulus                    | broadleaf evergreen |
| 47  | EUMI2  | Eucalyptus microtheca                  | broadleaf evergreen |
| 48  | EUSI   | Eucalyptus sideroxylon                 | broadleaf evergreen |
| 49  | FASY   | Fagus sylvatica                        | broadleaf deciduous |
| 50  | FIBE   | Ficus benjamina                        | broadleaf evergreen |
| 51  | FIMI   | Ficus thonningii                       | broadleaf evergreen |
| 52  | FIDE6  | Filicium decipiens                     | broadleaf evergreen |
| 53  | FRAM   | Fraxinus americana                     | broadleaf deciduous |
| 54  | FRAN2  | Fraxinus angustifolia                  | broadleaf deciduous |
| 55  | FRAN_R | Fraxinus angustifolia 'Raywood'        | broadleaf deciduous |
| 56  | FREX_H | Fraxinus excelsior 'Hessei'            | broadleaf deciduous |
| 57  | FRHO   | Fraxinus holotricha                    | broadleaf deciduous |
| 58  | FRLA   | Fraxinus latifolia                     | broadleaf deciduous |
| 59  | FRPE   | Fraxinus pennsylvanica                 | broadleaf deciduous |
| 60  | FRPE_M | Fraxinus pennsylvanica 'Marshall'      | broadleaf deciduous |
| 61  | FRUH   | Fraxinus uhdei                         | broadleaf deciduous |
| 62  | FRVE   | Fraxinus velutina                      | broadleaf deciduous |
| 63  | FRVE_G | Fraxinus velutina 'Modesto'            | broadleaf deciduous |
| 64  | GIBI   | Ginkgo biloba                          | broadleaf deciduous |
| 65  | GLTR   | Gleditsia triacanthos                  | broadleaf deciduous |
| 66  | GYDI   | Gymnocladus dioicus                    | broadleaf deciduous |
| 67  | ILOP   | Ilex opaca                             | broadleaf evergreen |
| 68  | ILPA2  | Ilex paraguariensis                    | broadleaf evergreen |
| 69  | JAMI   | Jacaranda mimosifolia                  | broadleaf deciduous |
| 70  | JUNI   | Juglans nigra                          | broadleaf deciduous |
| 71  | JUVI   | Juniperus virginiana                   | conifer evergreen   |
| 72  | JUSI   | Juniperus virginiana var. silicicola   | conifer evergreen   |
| 73  | KOELFO | Koelreuteria elegans                   | broadleaf deciduous |
| 74  | KOPA   | Koelreuteria paniculata                | broadleaf deciduous |
| 75  | LAIN   | Lagerstroemia indica                   | broadleaf deciduous |
| 76  | LA6    | Lagerstroemia sp.                      | broadleaf deciduous |
| 77  | LASP   | Lagerstroemia speciosa                 | broadleaf deciduous |
| 78  | LIST   | Liquidambar styraciflua                | broadleaf deciduous |
| 79  | LITU   | Liriodendron tulipifera                | broadleaf deciduous |
| 80  | MAGR   | Magnolia grandiflora                   | broadleaf evergreen |
| 81  | PYAN   | Malus angustifolia                     | broadleaf deciduous |
| 82  | MA2    | Malus sp.                              | broadleaf deciduous |
| 83  | MEQU   | Melaleuca quinquenervia                | broadleaf evergreen |
| 84  | MEEX   | Metrosideros excelsa                   | broadleaf evergreen |
| 85  | MOAL   | Morus alba                             | broadleaf deciduous |
| 86  | MO     | Morus sp.                              | broadleaf deciduous |
| 87  | OLEU   | Olea europaea                          | broadleaf evergreen |
| 88  | PAAC   | Parkinsonia aculeata                   | broadleaf deciduous |
| 89  | CEFL   | Parkinsonia florida                    | broadleaf deciduous |
| 90  | PHCA   | Phoenix canariensis                    | palm evergreen      |
| 91  | PHDA4  | Phoenix dactylifera                    | palm evergreen      |
| 92  | PIPU   | Picea pungens                          | conifer evergreen   |
| 93  | PIBR2  | Pinus brutia                           | conifer evergreen   |
| 94  | PICA   | Pinus canariensis                      | conifer evergreen   |
| 95  | PICO   | Pinus contorta                         | conifer evergreen   |
| 96  | PIEC   | Pinus echinata                         | conifer evergreen   |
| 97  | PIED   | Pinus edulis                           | conifer evergreen   |
| 98  | PIEL2  | Pinus eldarica                         | conifer evergreen   |
| 99  | PIEL   | Pinus elliottii                        | conifer evergreen   |
| 100 | PIHA   | Pinus halepensis                       | conifer evergreen   |
| 101 | PINI   | Pinus nigra                            | conifer evergreen   |
| 102 | PIPO   | Pinus ponderosa                        | conifer evergreen   |
| 103 | PIRA   | Pinus radiata                          | conifer evergreen   |
| 104 | PIST   | Pinus strobus                          | conifer evergreen   |
| 105 | PISY   | Pinus sylvestris                       | conifer evergreen   |
| 106 | PITA   | Pinus taeda                            | conifer evergreen   |
| 107 | PITH   | Pinus thunbergiana                     | conifer evergreen   |
| 108 | PICH   | Pistacia chinensis                     | broadleaf deciduous |
| 109 | PIUN   | Pittosporum undulatum                  | broadleaf evergreen |
| 110 | PLOC   | Platanus occidentalis                  | broadleaf deciduous |
| 111 | PLRA   | Platanus racemosa                      | broadleaf deciduous |
| 112 | PLAC   | Platanus x acerifolia                  | broadleaf deciduous |
| 113 | THOR   | Platycladus orientalis                 | conifer evergreen   |
| 114 | POMA   | Podocarpus macrophyllus                | conifer evergreen   |
| 115 | POAN   | Populus angustifolia                   | broadleaf deciduous |
| 116 | POTR2  | Populus balsamifera subsp. trichocarpa | broadleaf deciduous |
| 117 | PODE   | Populus deltoides                      | broadleaf deciduous |
| 118 | POFR   | Populus fremontii                      | broadleaf deciduous |
| 119 | POSA   | Populus sargentii                      | broadleaf deciduous |
| 120 | PRCH   | Prosopis chilensis                     | broadleaf deciduous |
| 121 | PRCA   | Prunus caroliniana                     | broadleaf evergreen |
| 122 | PRCE   | Prunus cerasifera                      | broadleaf deciduous |
| 123 | PRCE   | Prunus cerasifera cvs.                 | broadleaf deciduous |
| 124 | PRSE2  | Prunus serrulata                       | broadleaf deciduous |
| 125 | PR     | Prunus sp.                             | broadleaf deciduous |
| 126 | PRYE   | Prunus yedoensis                       | broadleaf deciduous |
| 127 | PSME   | Pseudotsuga menziesii                  | conifer evergreen   |
| 128 | PYCA   | Pyrus calleryana                       | broadleaf deciduous |
| 129 | PYCA_B | Pyrus calleryana 'Bradford'            | broadleaf deciduous |
| 130 | PYCA   | Pyrus calleryana cvs.                  | broadleaf deciduous |
| 131 | PYKA   | Pyrus kawakamii                        | broadleaf evergreen |
| 132 | PY     | Pyrus sp.                              | broadleaf deciduous |
| 133 | QUAG   | Quercus agrifolia                      | broadleaf evergreen |
| 134 | QUAL   | Quercus alba                           | broadleaf deciduous |
| 135 | QUIL2  | Quercus ilex                           | broadleaf evergreen |
| 136 | QULA2  | Quercus laurifolia                     | broadleaf deciduous |
| 137 | QULO   | Quercus lobata                         | broadleaf deciduous |
| 138 | QUMA1  | Quercus macrocarpa                     | broadleaf deciduous |
| 139 | QUNI   | Quercus nigra                          | broadleaf deciduous |
| 140 | QUPA   | Quercus palustris                      | broadleaf deciduous |
| 141 | QUPH   | Quercus phellos                        | broadleaf deciduous |
| 142 | QURU   | Quercus rubra                          | broadleaf deciduous |
| 143 | QUSH   | Quercus shumardii                      | broadleaf deciduous |
| 144 | QUVI   | Quercus virginiana                     | broadleaf evergreen |
| 145 | RHLA   | Rhus lancea                            | broadleaf evergreen |
| 146 | ROPS   | Robinia pseudoacacia                   | broadleaf deciduous |
| 147 | SAPA   | Sabal palmetto                         | palm evergreen      |
| 148 | PISA2  | Samanea saman                          | broadleaf deciduous |
| 149 | SCMO   | Schinus molle                          | broadleaf evergreen |
| 150 | SCTE   | Schinus terebinthifolius               | broadleaf evergreen |
| 151 | SESE   | Sequoia sempervirens                   | conifer evergreen   |
| 152 | SWMA   | Swietenia mahagoni                     | broadleaf evergreen |
| 153 | SYRO   | Syagrus romanzoffiana                  | palm evergreen      |
| 154 | TAAR   | Tabebuia aurea                         | broadleaf evergreen |
| 155 | TAPA   | Tabebuia heterophylla                  | broadleaf evergreen |
| 156 | TAOC   | Tabebuia ochracea subsp. neochrysantha | broadleaf evergreen |
| 157 | TIAM   | Tilia americana                        | broadleaf deciduous |
| 158 | TICO   | Tilia cordata                          | broadleaf deciduous |
| 159 | TITO   | Tilia tomentosa                        | broadleaf deciduous |
| 160 | TRSE6  | Triadica sebifera                      | broadleaf deciduous |
| 161 | TRCO   | Tristaniopsis conferta                 | broadleaf evergreen |
| 162 | ULAL   | Ulmus alata                            | broadleaf deciduous |
| 163 | ULAM   | Ulmus americana                        | broadleaf deciduous |
| 164 | ULPA   | Ulmus parvifolia                       | broadleaf deciduous |
| 165 | ULPU   | Ulmus pumila                           | broadleaf deciduous |
| 166 | VEME   | Veitchia merrillii                     | palm evergreen      |
| 167 | WAFI   | Washingtonia filifera                  | palm evergreen      |
| 168 | WARO   | Washingtonia robusta                   | palm evergreen      |
| 169 | ZESE   | Zelkova serrata                        | broadleaf deciduous |
#+end_example
** tidy a few names and select variables of interest here
#+begin_src R
  d <- d %>% rename(DBH = `DBH (cm)`, Leaf = `Leaf (m2)`) %>% select(Region, City, TreeID, SpCode, DBH, Leaf, DBH, Age)
#+end_src

#+RESULTS:

#+begin_src R
  summary(d$Leaf)
  sum(d$Leaf == -1) / length(d$Leaf)
  sum(d$DBH == -1) / length(d$DBH)
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
:    -1.0    12.9   116.1   302.5   389.2  9516.0
: [1] 0.1143094
: [1] 0

#+begin_src R
  d <- filter(d, DBH != -1, Age != -1) %>%
      rename(AGE = Age)
#+end_src

#+RESULTS:

** plot age versus dbh for all trees
#+begin_src R :exports results :results graphics :file ../figs/ageVdbh_all.png :bg transparent
  ggplot(d, aes( x = AGE, y = DBH)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_all.png]]


** AGE versus dbh by cities
#+begin_src R :exports results :results graphics :file figs/ageVdbh_byCity_focusCoords.png :height 1000 :width 1000
  ggplot(d, aes( x = AGE, y = DBH, color = SpCode)) + geom_point(alpha = .7, size = .5) +
      facet_wrap(~City) +
      coord_cartesian(xlim = c(0, 70), ylim = c(0,100)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_byCity_focusCoords.png]]

** AGE versus DBH by species
#+begin_src R :exports results :results graphics :file figs/ageVdbh_bySpecies_focusCoords.png :height 1500 :width 800
  ggplot(d, aes( x = AGE, y = DBH, color = City)) + geom_point(alpha = .2, size = .5) +
      facet_wrap(~SpCode, ncol = 8) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_bySpecies_focusCoords.png]]

Woah, there are lots of species.  Clearly there is some variability in
the relationship between age and dbh across species.

** AGE versus DBH by species for species that are in more than 1 city
Does the relationship between AGE and DBH for a species change
depending on the city where it is?

Is there evidence for a different equation for every species city
combination?  Or can we use one equation for each species, regardless
of city?
#+begin_src R
  sp.w.multiple.cities <- d %>% group_by(City, SpCode) %>% summarize(n = n()) %>% ungroup() %>% group_by(SpCode) %>%
      summarize(n_cities_per_species = n()) %>%
      filter(n_cities_per_species > 1) %>%
      pull(SpCode)

  d.sp.w.multiple.cities <- filter(d, SpCode %in% sp.w.multiple.cities)

#+end_src

#+RESULTS:


*** Each panel is a species, Each color is a different city
#+begin_src R :exports results :results graphics :file figs/ageVdbh_bySpecies_focusCoords_multiplecities.png :height 1000 :width 800
  ggplot(d.sp.w.multiple.cities, aes( x = AGE, y = DBH, color = City)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free", ncol = 8) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_bySpecies_focusCoords_multiplecities.png]]
*** Adding Loess trend lines

#+begin_src R :exports results :results graphics :file figs/ageVdbh_bySpecies_focusCoords_multiplecities_trendlines.png :height 1100 :width 800
  ggplot(d.sp.w.multiple.cities, aes( x = AGE, y = DBH, color = City)) +
      geom_point(alpha = .7, size = .8) +
      facet_wrap(~SpCode, scales = "free", ncol = 8) +
                                          #  coord_cartesian(xlim = c(0, 200), ylim = c(0,40)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      stat_smooth()
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_bySpecies_focusCoords_multiplecities_trendlines.png]]

ACPL's cities
#+begin_src R
  filter(d.sp.w.multiple.cities, SpCode == "ACPL") %>% pull(City) %>% unique
#+end_src

#+RESULTS:
: [1] "Fort Collins, CO" "Minneapolis, MN"  "Queens, NY"       "Boise, ID"
: [5] "Longview, WA"

MOAL's cities
#+begin_src R
  filter(d.sp.w.multiple.cities, SpCode == "MOAL") %>% pull(City) %>% unique
#+end_src

#+RESULTS:
: [1] "Glendale, AZ" "Longview, WA"
** Plot Urban Tree Allometric equations on top of data

#+begin_src R
  predict.allo <- function(x, EqName, a, b, c, d, e) {
      if(EqName == "loglogw1") {
          y = exp(a + b*log(log(x + 1) + c/2))
      }
      else if(EqName == "loglogw2") {
          y = exp(a + b*log(log(x + 1))+(sqrt(x) * (c/2)))
      }
      else if (EqName == "loglogw3") {
          y = exp(a + b*log(log(x + 1)) + x * c/2)
      }
      else if (EqName == "loglogw4") {
          y = exp(a + b*log(log(x + 1)) + x^2 * c/2)
      }
      else if (EqName == "expow1") {
          y = exp(a+ b * (x) + (c/2))
      }
      else if (EqName == "lin") {
          y = a + b * x
      }
      else if (EqName == "quad") {
          y = a + b * x + c* x^2
      }
      else if (EqName == "cub") {
          y = a+b * x+c *x^2 + d * x^3
      }
      else if (EqName == "quart") {
          y = a+b * x+c *x^2 + d * x^3 + e * x^4
      }
      return(y)
  }

#+end_src

#+RESULTS:


#+begin_src R
  eqn <- read.csv("data/RDS-2016-0005/Data/TS6_Growth_coefficients_fromNatalie.csv", stringsAsFactors = F) %>%
      mutate(a = as.numeric(a))

  eqn <- eqn %>%
      filter(Predicts.component %in% c("dbh"), Independent.variable == "age")

  age_min_max = d %>%
      group_by(Region, SpCode) %>%
      summarize(minAGE = min(AGE, na.rm = T),
                maxAGE = max(AGE, na.rm = T))

  eqn <- left_join(eqn, age_min_max)

  DBH_min_max = d %>%
      group_by(Region, SpCode) %>%
      summarize(minDBH = min(DBH, na.rm = T),
                maxDBH = max(DBH, na.rm = T))

  eqn <- left_join(eqn, DBH_min_max)


                                          # fill in the NAs due to equations existing for species in regions where they weren't sampled.
  eqn$minAGE[is.na(eqn$minAGE)] <- 0
  eqn$maxAGE[is.na(eqn$maxAGE)] <- 100

  newdata <- lapply(1:nrow(eqn), function(i) {
      x <- seq(eqn$minAGE[i], eqn$maxAGE[i],  (eqn$maxAGE[i] - eqn$minAGE[i]) / 20)
      cbind(x, eqn[i,])
  })

  newdata <- bind_rows(newdata)

  predictions <- newdata %>% rowwise %>% mutate(predicted_dbh = predict.allo(x = x, EqName = EqName, a = a, b = b, c = c, d = d, e = e))



                                          #filter out predictions that are outside range of data and label those in range of appsmin and appsmax
  predictions_apprange <- predictions %>%
      filter(predicted_dbh > Apps.min & predicted_dbh < Apps.max)

  predictions_datarange <- predictions %>%
      filter(predicted_dbh > minDBH & predicted_dbh < maxDBH)

#+end_src

#+RESULTS:
: Joining, by = c("Region", "SpCode")
: Joining, by = c("Region", "SpCode")
: There were 50 or more warnings (use warnings() to see the first 50)



#+begin_src R :exports results :results graphics :file figs/predictions_dbh__byRegion.png

  ggplot(predictions_apprange, aes(x = x, y = predicted_dbh, group = SpCode)) +
      geom_line() +
      facet_wrap(~Region, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh__byRegion.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies.png :height 1200 :width 1200

  ggplot(predictions_apprange, aes(x = x, y = predicted_dbh, group = Region)) +
      geom_line() +
      facet_wrap(~SpCode, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpeciesFull_wData.png :height 1200 :width 1200
  predictions_apprange <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh)

  ggplot(d, aes( x = AGE, y = DBH, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange, aes(group = Region), size = 1.5)

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpeciesFull_wData.png]]


#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies_wData.png :height 1200 :width 1200
  predictions_apprange.sp.w.multiple.cities <- predictions_apprange %>%       filter(SpCode %in% d.sp.w.multiple.cities$SpCode)


  ggplot(d.sp.w.multiple.cities, aes( x = AGE, y = DBH, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange.sp.w.multiple.cities, aes(group = Region), size = 1.5)

#+end_src


#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies_wData_ACPL.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "ACPL")

  ggplot(filter(d, SpCode == "ACPL"), aes( x = AGE, y = DBH, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region), size = 2, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region), size = 2)


#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData_ACPL.png]]

Funny thing about the Apps range is that for functions that eventually
decrease, they don't properly stop inference.  Look at the pink line
above.  The application range should be given for both the predictor
and the response variable.

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies_wData_ACPL_facet.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "ACPL")

  ggplot(filter(d, SpCode == "ACPL"), aes( x = AGE, y = DBH)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region, color = Region), size = 1, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region, color = Region), size = 1) +
      facet_wrap(~Region)


#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData_ACPL_facet.png]]

We should be able to borrow information from other regions to extend
the applicable range for regions with smaller ranges.

There is an equation for the lower midwest, but no data?

#+begin_src R :results org
  ascii.nowarn.print(filter(eqn, SpCode == "ACPL"))
#+end_src

#+RESULTS:
#+BEGIN_SRC org
  |   | Region | Scientific.Name  | SpCode | Independent.variable | Predicts.component | Units.of.predicted.components | Model.weight | EqName |     a |    b |     c |     d | e | Apps.min | Apps.max | Sigma |     n | adj.R2 | Data.min..from.raw.data. | Data.max..from.raw.data. |    DF | minAGE | maxAGE | minDBH | maxDBH |
  |---+--------+------------------+--------+----------------------+--------------------+-------------------------------+--------------+--------+-------+------+-------+-------+---+----------+----------+-------+-------+--------+--------------------------+--------------------------+-------+--------+--------+--------+--------|
  | 1 | LoMidW | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1/age        | cub    |  0.98 | 0.25 |  0.04 | -0.00 |   |     0.98 |   103.07 |  0.48 | 13.00 |   0.98 |                     4.80 |                    98.60 |  9.00 |   0.00 | 100.00 |        |        |
  | 2 | MidWst | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1            | cub    | -7.95 | 3.81 | -0.09 |  0.00 |   |     2.66 |    93.26 |  8.92 | 48.00 |   0.97 |                     4.60 |                    77.50 | 44.00 |   2.00 |  44.00 |   4.60 |  77.50 |
  | 3 | NMtnPr | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1/age^2      | quad   |  2.84 | 1.32 | -0.00 |       |   |     2.84 |    92.73 |  0.08 | 60.00 |   0.94 |                     2.90 |                   103.10 | 57.00 |   0.00 |  88.00 |   2.90 | 103.10 |
  | 4 | NoEast | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1            | lin    |  5.62 | 0.92 |       |       |   |     5.62 |   114.66 | 36.41 | 48.00 |   0.91 |                     2.70 |                   120.70 | 46.00 |   0.00 |  75.00 |   3.80 |  87.10 |
  | 5 | PacfNW | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1/age        | cub    | -0.85 | 2.44 | -0.03 |  0.00 |   |     1.56 |   146.78 |  1.40 | 74.00 |   0.98 |                     1.10 |                   129.40 | 70.00 |   1.00 |  81.00 |   1.10 | 129.40 |
  | 6 | TpIntW | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1/age        | cub    |  4.42 | 1.08 |  0.01 | -0.00 |   |     4.42 |    79.42 |  0.81 | 62.00 |   0.96 |                     5.30 |                    95.00 | 58.00 |   1.00 | 105.00 |   5.30 |  95.00 |
#+END_SRC

#+begin_src R :results org
  ascii.nowarn.print(filter(d, SpCode == "ACPL", Region == "NoEast"))
#+end_src

#+RESULTS:
#+BEGIN_SRC org
  |   | Region | City       |    TreeID | SpCode |   DBH |   Leaf |   Age |   AGE |
  |---+--------+------------+-----------+--------+-------+--------+-------+-------|
  | 1 | NoEast | Queens, NY | 900243.00 | ACPL   |  3.80 |   3.10 |  0.00 |  0.00 |
  | 2 | NoEast | Queens, NY |  46681.00 | ACPL   | 87.10 | 445.50 | 75.00 | 75.00 |
#+END_SRC

The reason that the equation for ACPL in the North East is linear is
because there are only two observations.  Yikes.


TIAM TpIntW
#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies_wData_TIAM.pdf :height 3 :width 5

  theme_set(theme_classic(base_size = 12))
  predictions_apprange.tiam <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "TIAM", Region == "TpIntW")

  predictions_datarange.tiam <- predictions_datarange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "TIAM", Region == "TpIntW")

  ggplot(filter(d, SpCode == "TIAM", Region == "TpIntW"), aes( x = AGE, y = DBH)) +
      geom_point(alpha = .7, size = 1) +
      theme(text = element_text(size = 20)) +
      geom_line(data = predictions_datarange.tiam, aes(group = Region), size = 1, linetype = "1111") +
      geom_line(data = predictions_apprange.tiam, aes(group = Region), size = 1)


#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData_TIAM.pdf]]


#+begin_src R :exports results :results graphics :file figs/quadratic.png :height 1200 :width 1200
  ggplot(predictions_apprange %>% filter(EqName == "quad"), aes(x = AGE, y = DBH)) +
      geom_line() +
      facet_wrap(~interaction(SpCode, Region))
#+end_src

#+RESULTS:
[[file:../figs/quadratic.png]]

TIAM TpIntW

** NEXT modelling

Just do the climate effects now

Subset down to 5 species
#+begin_src R
  sp.sub <- c("ACPL", "QURU", "PIST", "CEOC", "FRPE")
  ds <- filter(d, SpCode %in% sp.sub)
#+end_src

#+RESULTS:

*** lme4
#+begin_src R
  library(lme4)
#+end_src

#+RESULTS:

#+begin_src R
  ds <- mutate(ds, logDBH = log(DBH), logAGE = log(AGE + 1), AGE2 = AGE^2, AGE2scaled = AGE2/100)
                                          #mod <- lmer(DBH ~ AGE + (1 + AGE | SpCode) + ( 1 + AGE | Region), data = ds)
                                          #mod <- lmer(DBH ~ poly(AGE,2) + (1 + poly(AGE,2) | SpCode) + ( 1 + poly(AGE,2) | Region), data = ds)
                                          #mod <- lmer(DBH ~ poly(AGE,2) + (1 + poly(AGE,2) | SpCode) + ( 1 + AGE | Region), data = ds)
                                          #mod <- lmer(DBH ~ sqrt(AGE) + (1 + sqrt(AGE) | SpCode) + ( 1 + sqrt(AGE) | Region), data = ds)
                                          #mod <- lmer(DBH ~ AGE + (1 + AGE | SpCode) + ( 1 + AGE | Region), data = ds)


                                          #no intercept.  This is a good looking model.
  mod <- lmer(DBH ~ AGE + AGE2scaled - 1 + (AGE + AGE2scaled - 1 | SpCode) + (AGE - 1 | Region), data = ds)

#+end_src

#+RESULTS:

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
Linear mixed model fit by REML ['lmerMod']
Formula:
DBH ~ AGE + AGE2scaled - 1 + (AGE + -1 | SpCode) + (AGE + AGE2scaled -
    1 | Region)
   Data: ds

REML criterion at convergence: 6096.9

Scaled residuals:
    Min      1Q  Median      3Q     Max
-3.4742 -0.5288 -0.0049  0.5247  3.8558

Random effects:
 Groups   Name       Variance Std.Dev. Corr
 Region   AGE         0.16326 0.40406
          AGE2scaled  0.08519 0.29187  -0.93
 SpCode   AGE         0.00158 0.03975
 Residual            91.47154 9.56408
Number of obs: 822, groups:  Region, 8; SpCode, 4

Fixed effects:
           Estimate Std. Error t value
AGE          1.8479     0.1511  12.233
AGE2scaled  -0.8656     0.1199  -7.221

Correlation of Fixed Effects:
           AGE
AGE2scaled -0.895
#+end_example

#+begin_src R

  dsAGE_min_max = ds %>%
      group_by(Region, SpCode) %>%
      summarize(minAGE = min(AGE, na.rm = T),
                maxAGE = max(AGE, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsAGE_min_max), function(i) {
      x <- seq(dsAGE_min_max$minAGE[i], dsAGE_min_max$maxAGE[i],  (dsAGE_min_max$maxAGE[i] - dsAGE_min_max$minAGE[i]) / 9)
      cbind(dsAGE_min_max[i,], AGE = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logAGE = log(AGE + 1), AGE2scaled = AGE^2/100)

#+end_src

#+RESULTS:
: There were 17 warnings (use warnings() to see them)

#+begin_src R
  pred <- predict(mod, newdata)

  pred <- cbind(newdata, pred) %>%
      mutate(DBH = pred)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1.png
  ggplot(pred, aes(x = AGE, y = DBH)) + geom_line() +
      facet_grid(Region~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1.png]]


#+begin_src R

  dsAGE_min_max = ds %>%
      group_by(SpCode) %>%
      summarize(minAGE = min(AGE, na.rm = T),
                maxAGE = max(AGE, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsAGE_min_max), function(i) {
      x <- seq(dsAGE_min_max$minAGE[i], dsAGE_min_max$maxAGE[i],  (dsAGE_min_max$maxAGE[i] - dsAGE_min_max$minAGE[i]) / 9)
      cbind(dsAGE_min_max[i,], AGE = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logAGE = log(AGE + 1), AGE2scaled = AGE^2/100)


  regions <- rep(unique(ds$Region), each = nrow(newdata))

  newdata <- do.call("rbind", replicate(length(unique(regions)), newdata, simplify = FALSE))

  newdata$Region <- regions

#+end_src

#+RESULTS:
: Warning messages:
: 1: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 2: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 3: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 4: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R
  pred <- predict(mod, newdata)

  pred <- cbind(newdata, pred) %>%
      mutate(DBH = pred)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies.png
  ggplot(pred, aes(x = AGE, y = DBH)) + geom_line() +
      facet_grid(Region~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies_wData.png :width 600 :height 600
  ggplot(pred, aes(x = AGE, y = DBH)) + geom_line() +
      facet_grid(Region~SpCode) +
      geom_point(data = ds, size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies_wData.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetSpCode.png :width 1000 :height 300
  ggplot(pred, aes(x = AGE, y = DBH, color = Region)) + geom_line() +
      facet_wrap(~SpCode, ncol = 5) +
      geom_point(data = ds, size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetSpCode.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetRegion_ACPL.png :width 420 :height 400
  ggplot(filter(pred, SpCode == "ACPL", Region %in% unique(filter(ds, SpCode == "ACPL")$Region)), aes(x = AGE, y = DBH, color = Region)) + geom_line() +
      geom_point(data = filter(ds, SpCode == "ACPL"), size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetRegion_ACPL.png]]


#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetRegion_ACPL_wUTDeqn.png :width 1000 :height 400
  ggplot(filter(pred, SpCode == "ACPL", Region %in% unique(filter(ds, SpCode == "ACPL")$Region)), aes(x = AGE, y = DBH)) +
      geom_line(aes(color = Region)) +
      facet_wrap(~Region, ncol = 3) +
      geom_point(data = filter(ds, SpCode == "ACPL"), size = .5, alpha = .5) +
      geom_line(data = predictions_apprange.acpl, aes(group = Region), color = "black", size = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetRegion_ACPL_wUTDeqn.png]]


#+begin_src R
  filter(d, SpCode == "ACPL") %>% group_by(Region) %>% summarize(n = n())
#+end_src

#+RESULTS:
: # A tibble: 5 x 2
:   Region     n
:    <chr> <int>
: 1 MidWst    48
: 2 NMtnPr    60
: 3 NoEast     2
: 4 PacfNW    74
: 5 TpIntW    62

#+begin_src R :results org :eval no
  ascii.nowarn.print(filter(eqn, SpCode == "ACPL"))
#+end_src


| Region | SpCode | Independent.variable | Predicts.component | Model.weight | EqName |     a |    b |     c |     d | Apps.min | Apps.max | Sigma |     n | adj.R2 | Data.min..from.raw.data. | Data.max..from.raw.data. |    DF | minAGE | maxAGE | minDBH | maxDBH |
|--------+--------+----------------------+--------------------+--------------+--------+-------+------+-------+-------+----------+----------+-------+-------+--------+--------------------------+--------------------------+-------+--------+--------+--------+--------|
| LoMidW | ACPL   | age                  | dbh                | 1/age        | cub    |  0.98 | 0.25 |  0.04 | -0.00 |     0.98 |   103.07 |  0.48 | 13.00 |   0.98 |                     4.80 |                    98.60 |  9.00 |   0.00 | 100.00 |        |        |
| MidWst | ACPL   | age                  | dbh                | 1            | cub    | -7.95 | 3.81 | -0.09 |  0.00 |     2.66 |    93.26 |  8.92 | 48.00 |   0.97 |                     4.60 |                    77.50 | 44.00 |   2.00 |  44.00 |   4.60 |  77.50 |
| NMtnPr | ACPL   | age                  | dbh                | 1/age^2      | quad   |  2.84 | 1.32 | -0.00 |       |     2.84 |    92.73 |  0.08 | 60.00 |   0.94 |                     2.90 |                   103.10 | 57.00 |   0.00 |  88.00 |   2.90 | 103.10 |
| NoEast | ACPL   | age                  | dbh                | 1            | lin    |  5.62 | 0.92 |       |       |     5.62 |   114.66 | 36.41 | 48.00 |   0.91 |                     2.70 |                   120.70 | 46.00 |   0.00 |  75.00 |   3.80 |  87.10 |
| PacfNW | ACPL   | age                  | dbh                | 1/age        | cub    | -0.85 | 2.44 | -0.03 |  0.00 |     1.56 |   146.78 |  1.40 | 74.00 |   0.98 |                     1.10 |                   129.40 | 70.00 |   1.00 |  81.00 |   1.10 | 129.40 |
| TpIntW | ACPL   | age                  | dbh                | 1/age        | cub    |  4.42 | 1.08 |  0.01 | -0.00 |     4.42 |    79.42 |  0.81 | 62.00 |   0.96 |                     5.30 |                    95.00 | 58.00 |   1.00 | 105.00 |   5.30 |  95.00 |

There are 5 regions with data for dbh and age of ACPL.  the North east
has two data points.  Even though there are no data for the LoMidW
region, there is an equation for it with a reported n of 13.  Where
does this equation come from?  The n for the north east is reportedly
48, but is really 2.



**** What about adding climate?
#+begin_src R
  sp.sub <- c("ACPL", "QURU", "PIST", "CEOC", "FRPE")
  ds <- filter(d, SpCode %in% sp.sub)
#+end_src

#+RESULTS:

#+begin_src R
  ds <- mutate(ds, logDBH = log(DBH), logAGE = log(AGE + 1), AGE2 = AGE^2, AGE2scaled = AGE2/100)
#+end_src

#+RESULTS:

from table 1 see above

#+begin_src R :var climate=city_climate
  str(climate)
#+end_src

#+RESULTS:
: 'data.frame':	17 obs. of  5 variables:
:  $ Region: chr  "CenFla" "GulfCo" "InlEmp" "InlVal" ...
:  $ City  : chr  "Orlando, FL" "Charleston, SC" "Claremont, CA" "Modesto, CA" ...
:  $ CDD   : int  1806 1124 134 1052 773 677 510 355 349 39 ...
:  $ HDD   : int  289 1221 872 1439 1718 2416 3153 4436 3332 1786 ...
:  $ precip: int  1367 1555 523 315 470 250 392 622 452 564 ...


#+begin_src R :exports results :results graphics :file figs/climatespace.png
  ggplot(climate, aes(x = HDD, y = CDD,label = City)) + geom_point(aes(size = precip)) + geom_text(hjust = .5, nudge_y = 80)
#+end_src

#+RESULTS:
[[file:../figs/climatespace.png]]

Rescale precip, HDD, and CDD by dividing by 100
#+begin_src R
  climate <- climate %>% mutate(HDD = HDD/100, CDD = CDD/100, precip = precip/100)
  ds <- left_join(ds, climate)
#+end_src

#+RESULTS:
: Joining, by = c("Region", "City")


Just precip for now
#+begin_src R
  mod_precip <- lmer(DBH ~ AGE + AGE2scaled - 1 + precip + precip:AGE +(AGE + AGE2scaled - 1 | SpCode) + (AGE - 1 | Region), data = ds)
#+end_src

#+RESULTS:

#+begin_src R
  dsAGE_min_max = ds %>%
      group_by(SpCode) %>%
      summarize(minAGE = min(AGE, na.rm = T),
                maxAGE = max(AGE, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsAGE_min_max), function(i) {
      x <- seq(dsAGE_min_max$minAGE[i], dsAGE_min_max$maxAGE[i],  (dsAGE_min_max$maxAGE[i] - dsAGE_min_max$minAGE[i]) / 9)
      cbind(dsAGE_min_max[i,], AGE = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logAGE = log(AGE + 1), AGE2scaled = AGE^2/100)

  regions <- rep(c("wet","dry"), each = nrow(newdata))
  newprecip <- rep(c(2.5,14), each = nrow(newdata))

  newdata <- do.call("rbind", replicate(length(unique(regions)), newdata, simplify = FALSE))

  newdata$Region <- regions
  newdata$precip <- newprecip


#+end_src

#+RESULTS:
: Warning messages:
: 1: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 2: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 3: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 4: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R
  pred <- predict(mod_precip, newdata, allow.new.levels = T)

  pred <- cbind(newdata, pred) %>%
      mutate(DBH = pred)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/precip_pred.png
  ggplot(pred, aes(x = AGE, y = DBH, color = precip, group = interaction(Region,precip))) + geom_line() +
      facet_wrap(~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/precip_pred.png]]

#+begin_src R :exports results :results graphics :file figs/precip_pred_wsomedata.png
  ggplot(pred, aes(x = AGE, y = DBH, color = precip, group = interaction(Region,precip))) + geom_line() +
      facet_wrap(~SpCode) +
      geom_point(data = ds)
#+end_src

#+RESULTS:
[[file:../figs/precip_pred_wsomedata.png]]


#+begin_src R
  ggplot() +

#+end_src


* Full model
:PROPERTIES:
:ARCHIVE_TIME: 2018-10-26 Fri 14:51
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

\[
DBH \sim N(\beta_0 * (1 - \exp(-\beta_1 * AGE ^ {\beta_2})), \sigma)
\]

\[
\beta_0, \beta_1, \beta_2 \sim
\]

\[
\sigma \sim
\]

species within genus within ...


Model selection
1) Do all the betas vary by groups (City, Species, or both), or just beta0?
   1) There would be 4 models to compare:
      1) \beta_0 + \beta_1 + \beta_2 ~ City + Species
      2) \beta_0 ~ City + Species, \beta_1 + \beta_2 ~ 1
      3) \beta_0 ~ City + Species, \beta_1 + \beta_2 ~ City
      4) \beta_0 ~ City + Species, \beta_1 + \beta_2 ~ Species
   2) It might be worth doing this test on a reasonable subset of the
      data, otherwise this may take a _very_ long time
2) What is the proper form of the climate variables on the beta's?
   1)


* COMMENT possible alternative model form.  One that doesn't have an asympote
:PROPERTIES:
:ARCHIVE_TIME: 2018-10-31 Wed 10:35
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling/Model requirements
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

y = a * log(b*(x+c)^d + 1)

or something like this.

y = 10 * log((.5x+1)^2 + 1)

The parameters in this model seem harder to interpret and they are
likely just as correlated.  But there is a little benefit in that
there is no asymptote.


#+begin_src R :exports results :results graphics :file ../figs/alt_model_test.png
            x <- 1:120
            a <- c(5,10,20)
            b <- seq(.01,.1, .02) #seq(-.1,1.5,.1) # how steep the curve is at the beginning.  not sure if this is needed?  .1 makes sense
            c <- .5    # shifts the curve to the left to account for age 0 actually being planting age
            d <- seq(1,3,1)

          alt.mod <- function(x, a, b, c, d) {
              a * log((b*x+c)^d +1)
          }

      alt.d <- expand.grid(x = x, a = a, b = b, c = c, d = d) %>%
          mutate(y = alt.mod(x,a,b,c,d))

  alt.d <- alt.d %>%
                 mutate(grp = rep(seq(1,nrow(alt.d) / 120), each =120))

            ggplot(alt.d, aes(x = x, y = y, group = grp)) + geom_line() +
              coord_cartesian(xlim = c(0,120), ylim = c(0,150)) +
              facet_grid(a~b)
#+end_src

#+RESULTS:
[[file:../figs/alt_model_test.png]]

#+begin_src R :exports results :results graphics :file ../figs/alt_model2_test.png
            x <- 1:120
            a <- c(5,10,20)
            b <- seq(.01,.1, .02) #seq(-.1,1.5,.1) # how steep the curve is at the beginning.  not sure if this is needed?  .1 makes sense
            c <- 1    # shifts the curve to the left to account for age 0 actually being planting age
            d <- seq(.5,2,.5)

          alt.mod <- function(x, a, b, c, d) {
              a * log((b*(x+c)^d +1))
          }

      alt.d <- expand.grid(x = x, a = a, b = b, c = c, d = d) %>%
          mutate(y = alt.mod(x,a,b,c,d))

  alt.d <- alt.d %>%
                 mutate(grp = rep(seq(1,nrow(alt.d) / 120), each =120))

            ggplot(alt.d, aes(x = x, y = y, group = grp)) + geom_line() +
              coord_cartesian(xlim = c(0,120), ylim = c(0,150)) +
              facet_grid(a~b)
#+end_src

#+RESULTS:
[[file:../figs/alt_model2_test.png]]

* COMMENT misc
:PROPERTIES:
:ARCHIVE_TIME: 2018-10-31 Wed 11:07
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:
** Meeting with Jun [2018-08-27 Mon]

What should the structure of the paper be?
- Premise of paper: showing a new method to fit multilevel non-linear
  growth models for trees
- Our working example is the urban tree

- Show different types of posterior predictions (e.g. new tree in a
  observed city of an observed species, versus new tree in an
  unobserved city of an unobserved species, but known climate and genus)

- Show predictions compared to the existing method.
  - will show better potential to extrapolate, both to unobserved ages
    and unobserved species/city combinations.

- Model selection

- posterior predicitive checks


* genus: many;  species: many; cities: many (not \beta_1); climate: b3linint; hetero: no; family: Gamma FULL DATA no Palm.  Max AGE is 150
:PROPERTIES:
:ARCHIVE_TIME: 2018-11-06 Tue 17:12
:ARCHIVE_FILE: ~/git/allo/code/allo.org
:ARCHIVE_OLPATH: Methods/Modelling
:ARCHIVE_CATEGORY: allo
:ARCHIVE_ITAGS: work allo
:END:

** [2018-11-06 Tue]  THere is no difference in the major parameter estimates of the model if the old trees are dropped.
** model R code
#+begin_src R :tangle genus_species_citiesNotB1_b3climate_fulldata_noPalm_ageless150.R
  library(dplyr)
  library(brms)


  genus <- "many"
  species <- "many"
  cities <- "many_notB1"
  climate <- "b3linint"
  hetero <- "no"
  family <- "Gamma"

  data_form <- formula(DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))))
  b0_form <- formula(b0 ~ (1 | City) + (1 | Genus/Species))
  b1_form <- formula(b1 ~ (1 | Genus/Species))
  b2_form <- formula(b2 ~ (1 | City) + (1 | Genus/Species))
  b3_form <- formula(b3 ~ precip * gdd +  (1 | City) + (1 | Genus / Species))


  form <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)


  nlprior <- c(prior(gamma(9, 3), nlpar = "b0",lb = 0),
               prior(gamma(34, 19.4), nlpar = "b1",lb = 0),
               prior(gamma(69.4, 55.5), nlpar = "b2", lb = 0),
               prior(gamma(16, 26), nlpar = "b3", lb = 0),
               prior(normal(0.01, 0.015), nlpar = "b3", coef = "gdd"),
               prior(normal(0.01, 0.01), nlpar = "b3", coef = "precip"),
               prior(normal(0.005, 0.005), nlpar = "b3", coef = "precip:gdd"),
               prior(gamma(20, 1), class = "shape"),
               prior(normal(0, .3), class = "sd", nlpar = "b0", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "City"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "City"),
               prior(normal(0, .4), class = "sd", nlpar = "b0", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b0", group = "Genus:Species"),
               prior(normal(.1, .4), class = "sd", nlpar = "b1", group = "Genus"),
               prior(normal(0, .1), class = "sd", nlpar = "b1", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b2", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b2", group = "Genus:Species"),
               prior(normal(0, .1), class = "sd", nlpar = "b3", group = "Genus"),
               prior(normal(0, .05), class = "sd", nlpar = "b3", group = "Genus:Species"))


  d <- readRDS("../data/age_dbh_full_noPalms.rds")

                                          # removing the very old trees
                                          # there are only 7 trees with an age greater than 150; 6 are 220 and 1 is 350.
                                          # I think these may have undue influence on the model, so I am omitting them and seeing if predictions change at all.
  d <- d %>% filter(AGE <= 150)

  mod <- brm(form,
             data = d,
             prior = nlprior,
             family = Gamma("identity"),
             chains = 12, cores = 12, init_r = .3, iter = 4000, control = list(adapt_delta = .9))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, "_FullData_ageless150.rds"))
#+end_src

** tangle
** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_species_citiesNotB1_b3climate_fulldata_noPalm_ageless150.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_species_citiesNotB1_b3climate_fulldata_noPalm_ageless150.R
:
: sent 1079 bytes  received 42 bytes  320.29 bytes/sec
: total size is 2845  speedup is 2.54
: You have new mail in /var/mail/erker

** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_species_citiesNotB1_b3climate_fulldata_noPalm_ageless150.R &
  exit
#+END_SRC

#+BEGIN_SRC sh

#+END_SRC

** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.rds ~/git/allo/models/
#+END_SRC

** assess model
#+begin_src R
mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150 <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.rds")
mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150
#+end_src

#+RESULTS:


#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ precip * gdd + (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 12149)
Samples: 12 chains, each with iter = 4000; warmup = 2000; thin = 1;
         total post-warmup samples = 24000

Group-Level Effects:
~City (Number of levels: 16)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.86      0.12     0.65     1.12      11420 1.00
sd(b2_Intercept)     0.26      0.04     0.20     0.35      10496 1.00
sd(b3_Intercept)     0.11      0.02     0.08     0.17      10269 1.00

~Genus (Number of levels: 76)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.27      0.09     0.08     0.44       3703 1.00
sd(b1_Intercept)     0.57      0.08     0.42     0.76       5484 1.00
sd(b2_Intercept)     0.22      0.05     0.12     0.32       2006 1.01
sd(b3_Intercept)     0.12      0.02     0.07     0.17       4766 1.00

~Genus:Species (Number of levels: 152)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.20      0.07     0.03     0.33       3053 1.00
sd(b1_Intercept)     0.07      0.04     0.00     0.17       2700 1.00
sd(b2_Intercept)     0.21      0.03     0.16     0.26       4086 1.00
sd(b3_Intercept)     0.10      0.01     0.08     0.12       4880 1.00

Population-Level Effects:
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.62      0.22     2.18     3.06       3849 1.00
b1_Intercept      1.50      0.10     1.31     1.71       1055 1.01
b2_Intercept      0.98      0.07     0.85     1.13       5334 1.00
b3_Intercept      0.91      0.06     0.79     1.02       6172 1.00
b3_precip         0.02      0.01     0.00     0.03      20869 1.00
b3_gdd            0.01      0.01     0.00     0.03      16842 1.00
b3_precip:gdd     0.01      0.00     0.00     0.01       9735 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    13.35      0.18    13.01    13.70      30522 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 33 divergent transitions after warmup. Increasing adapt_delta above 0.9 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.png :height 1300
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_mainparameters_ageless150.png :height 250
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[1:4],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_mainparameters_ageless150.png]]


#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_climate_effects_ageless150.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[5:7],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_climate_effects_ageless150.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_sd_beta0_ageless150.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[8:10],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_sd_beta0_ageless150.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_sd_beta1_ageless150.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[11:12],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_sd_beta1_ageless150.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_sd_beta2_ageless150.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[13:15],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_sd_beta2_ageless150.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_sd_beta3_ageless150.png :height 200
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[16:18],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_sd_beta3_ageless150.png]]

#+begin_src R :exports results :results graphics :file ../figs/posterior_distributions_model_FullData_shape_ageless150.png :height 100
  library(bayesplot)
  plot_title <- ggtitle("Posterior distributions",
                        "with medians and 80% intervals")

  posterior <- as.matrix(mod)
  mcmc_areas(posterior,
             pars = attr(posterior, "dimnames")$parameters[19],
             prob = 0.8) + plot_title
#+end_src

#+RESULTS:
[[file:../figs/posterior_distributions_model_FullData_shape_ageless150.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.png
  marginal_effects(mod, effects = "AGE:gdd")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.png
  marginal_effects(mod, effects = "AGE:precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEprecip_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.png]]


#+begin_src R :tangle calc_marginal_effects_fulldata_ageless150.R
  library(dplyr)
  library(brms)
  mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150 <- readRDS("../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.rds")
  mod <- mod_genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150
  precip.gdd <-   marginal_effects(mod, effects = "precip:gdd", surface = T, resolution = 100, nsamples = 10)
  saveRDS(precip.gdd, "../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150_precip.gdd.surface.rds")

  cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
  cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
  cond <- left_join(cond, unique(select(mod$data, City, precip, gdd)))

  me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict", nsamples = 1000)
  saveRDS(me, "../models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150_marginaleffects.rds")

#+end_src

#+RESULTS:

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz calc_marginal_effects_fulldata_ageless150.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: calc_marginal_effects_fulldata.R
:
: sent 579 bytes  received 54 bytes  97.38 bytes/sec
: total size is 1182  speedup is 1.87
: You have new mail in /var/mail/erker

#+BEGIN_SRC sh

  ssh krusty
  cd allo/code
  nohup R CMD BATCH calc_marginal_effects_fulldata_ageless150.R &
  cat calc_marginal_effects_fulldata_ageless150.Rout
  exit

#+END_SRC

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150_marginaleffects.rds ~/git/allo/models/
#rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150_precip.gdd.surface.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_marginaleffects.rds
:
: sent 38 bytes  received 7409376 bytes  1646536.44 bytes/sec
: total size is 7507573  speedup is 1.01
: You have new mail in /var/mail/erker


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150.png
precip.gdd <- readRDS("../models/genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150_precip.gdd.surface.rds")
precip.gdd
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipgdd_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150_wCities.png
  plot(precip.gdd)[[1]] +
      geom_point(data = unique(select(mod$data, City, gdd, precip)), aes(x = precip, y = gdd)) +
      geom_label(data = unique(select(mod$data, City, gdd, precip)), aes(x = precip, y = gdd, label = City), nudge_y = .15) +
    coord_flip()
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_precipCDD_genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_wCities.png]]


#+begin_src R
me <-readRDS("~/git/allo/models/genus_many_species_many_cities_notB1_many_climate_b3linint_hetero_no_family_Gamma_FullData_ageless150_marginaleffects.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full_ageless150.png :width 1000 :height 20000

  #arrange the cities by precip * gdd
  me2 <- me$AGE  %>% mutate(gddprecip = gdd * precip,
                          City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(gddprecip = gdd  * precip,
             City = factor(City, levels=unique(City[order(gddprecip)]), ordered=TRUE))

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = 1, size = .5, color = "red") +
          facet_grid(Species~City*gddprecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_notB1_climate_b3linint_hetero_no_family_Gamma_FullData_full.png]]

