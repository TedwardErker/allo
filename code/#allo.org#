#+TITLE: Multilevel Urban Tree Allometric equations
#+AUTHOR: Tedward Erker
#+email: erker@wisc.edu
#+PROPERTY:  header-args:R :cache no :results output :exports both :comments link :session *R:allo3* :eval yes
#+startup: indent
#+FILETAGS: work allo
#+HTML_HEAD: <link rel="stylesheet" href="main.css" type="text/css">
* Objective
To create better allometric equations for urban trees
* Caveat
I am not an expert on this, but I think I have a contribution to
make.  I'm using a dataset I did not work to collect and it may have
idiosyncrasies that I may not understand.  I also don't fully understand
the modelling approach used to create the equations, namely the
weighting.

* Why needed
Whoops.  They do have equations by tree type:
Tree types: BDL = broadleaf deciduous large, BDM = broadleaf deciduous
medium, BDS = broadleaf deciduous small, BEL = broadleaf evergreen
large, BEM = broadleaf evergreen medium, BES = broadleaf evergreen
small, CEL = conifer evergreen large, CEM = conifer evergreen medium,
CES = conifer evergreen small, PEL = palm evergreen large, PEM = palm
evergreen medium, PES= palm evergreen small.

http://www.cpp.edu/~sagarver/GEO309/exercises/allometry/Predicting_Diameter_Height_Crown_Width_Leaf_Area_peper.pdf

The urban tree allometry dataset is an incredibly valuable resource
for making better predictions about tree growth in urban environments,
and it is essential for accurate ecosystem service evaluation.
However, there are a number of limitations with the current set of
equations that multilevel modelling can address.

Limitations:
1) Limited number of species in each region.  There are only equations
   for the ten most common urban tree species in each region.  If a
   user wants an equation for a different species, they either need to
   use an equation for that species from a different region, or select
   the equation from the species they think is most similar.

2) Hard boundaries of regions.  There are separate allometric
   equations for 16 distinct climatic regions in the US.  However
   climate varies continuously across space.  Users of the equations
   have to pick which region they are closest to, or consider
   averaging two equations, but the weighting could be difficult to
   determine.  Climatic differences have been discretized/binned into
   relatively few groups, when it could be more continuous.

3) Some of the existing equations are based on smaller sample sizes
   than reported.  For example, dbh as a function of age for...  only
   has two observations and so the best fitting equation is a straight
   line, but we know that isn't right.

4) used the best fitting model of several forms based on AIC (i
   think).  This could potentially lead to overfitting, and depending
   on the model form selected, makes extrapolation very tenuous.

Solution: Allow for information to be shared across species and across
regions when fitting models.  Include climate variables as predictors
in the model so that the allometric equations vary continuously across
space.

A multilevel model would allow for the partial pooling of information
across species and across cities, so that in the cases where we have
little or even no data, we can still make reasonable predictions.  If
we want to make predictions about red maple in our city where we have
no observations, a multilevel model would allow us to take the red
maple equation from another city and adjust it to fit the climate of
our city.

Improvements:
1) Climate based rather than regions based.  Continuous rather than
   discrete, gradient rather than hard boundaries.
2) Rather than set Apps min and Apps Max, we can relax these hard
   boundaries, but include information about how uncertainty
   increases.  Appsmin and Appsmax significantly truncates predictive
   envelope.
3) Can use an equation form that makes sense to extrapolate with (this
   is probably more realistic and worth the decrease in equation form flexibility).
4) Species can be nested within Genus, Genus within broader type
   (conifer/broadleaf/palm etc).


1) One equation for 10 species in each region.  What about species not
   on the list?  What if I'm interested in the equation for red maple
   in the southeast, but the only equation comes from the northeast
   region?  How should I adjust the equation?
2) What if my location is on the border of two regions?  How should I
   average the equations from each region, espcially if they are of
   two different forms (e.g. cubic and log-log)?
   1) this could allow for easy integration of new cities too, because
      right now equations for each region just come from 1 or 2 cities.


1) Currently urban tree allometric equations are built separately for
   each species and for each region.  So there is a separate equation
   for red maple in the northeast and a separate equation for red
   maple in the midwest. These are hard differences when such hard
   divisions don't exist.  Better models for red maple could probably
   be made if the different regions could be pooled to the extent that
   their climates are similar.
2)


For practicioners who wish to use

what was the metric used to select from models?  was it r^2?  they
used AIC
shouldn't we select the model form based on expert knowledge about
universal tree growth patterns, rather than a small sample of
observations?  We'd expect to occasionally find with small samples
that a cubic relationship best fits the data.  But this relationship
suffers from lack of basis in what we know about how trees grow and
may give grossly inaccurate predictions if considered outside the
range of the data.


cite:Weiskittel_ForestGrowthAndYieldModeling
note on pg 130: for biomass equations:
"Zianis et al. (2005) found that more than two-thirds of the
equations they examined were functions of just DBH, and more than 75%
of the studies that reported a sample size had less than 50
trees. The use of just DBH assumes that the relationship between DBH
and height is static, which is often not the case, as noted above."

"The application to other populations of simple model forms fitted to
small datasets can produce large prediction errors (e.g. Wang et al.,
2002a). In addition, development of universal (Pilli et al., 2006) and
generalized (Muukkonen, 2007) static equations ignores significant
species variability and complex relationships, particularly when the
goal is to estimate regional and national biomass (Zianis and
Mancuccini, 2004)."

* What should the structure of the equations be?



DBH ~ age

assymetrical




** Height
from cite:Weiskittel_ForestGrowthAndYieldModeling:
For example, a cumulative growth curve of height over age shows three
primary stages: (1) juvenile period where growth is rapid and often
exponential; (2) a long period of maturation where the trend is nearly
linear; and (3) old age, where growth is nearly asymptotic

height ~ dbh - weibull? see pg 116 cite:Weiskittel_ForestGrowthAndYieldModeling

Constraining the model with very low dbh's
In addition to asymptotic behavior, most height-to-diameter equation
forms are also constrained to predict a height of 1.3 or 1.37
(i.e. breast height) when DBH is equal to zero, but this constraint
may cause poorer model performance across the full range of DBH
(Newton and Amponsah, 2007).

Hardwood heights tend to be harder to predict because of the lack of a
true leader and the difficulty of measuring hardwood heights
accurately (e.g. Kitahara et al., 2010).


Why Weibull is a decent option:  pg116 cite:Weiskittel_ForestGrowthAndYieldModeling
#+BEGIN_QUOTE
Significant differences between model forms can exist, however, when
limited data are available. For example, Temesgen and von Gadow (2004)
found that the percentage difference in root mean square error between
the best and worst equation for five commonly used model forms varied
from 5 to 33%. Huang et al. (1992) found in their analysis that the
Chapman–Richards, Weibull, and a modified logistic-type function were
consistently among the best performing models because they were
flexible, able to assume a variety of shapes, and extrapolated well.
#+END_QUOTE


** DBH
cite:Weiskittel_ForestGrowthAndYieldModeling
A diameter growth curve would show much the same trend, except there
is a tendency toward more sustained growth rate as the tree matures
(Hann and Hanus, 2002b). While height increment may nearly cease in
maturity, diameter increment must continue in order to produce the
xylem and phloem needed for tree survival
** sigmoidal forms, see the citations within:
cite:Weiskittel_ForestGrowthAndYieldModeling
Various theoretical sigmoid model forms are used to predict growth in
forestry (Zeide, 1993), but most of them can be generalized with a
single equation form (Garcıa, 2005c). The most common sigmoid model
forms include the Gompertz (1825), Bertalanffy (1949), and Richards
(1959) equations.

Although these theoretical models offer some biological
interpretability (e.g. Zeide, 2004), it is easily shown that
well-formulated empirical sigmoid equations can be just as accurate or
even more accurate for a wide range of data (e.g. Martin and Ek, 1984)



cite:garcia_2005

cite:zeide_2004

** It would be nice to have repeat measures of trees to get diameter increments.  Individual variation can be large and noisy.
** Could the response be multivariate?  For example: height, crown length, leaf area etc are covariate.  Modeling them together could make sense :ATTACH:
:PROPERTIES:
:Attachments: Screenshot%202018-04-26%2008.17.38.png
:ID:       4B81E555-8C81-4BD7-8DA9-0827A9F2FB79
:END:

cite:dietze_e_2008 have a multivariate response
The decision to fit all three-response variables simultaneously using
a full covariance matrix, rather than to fit each variable separately,
acknowledges the fact that response variables are likely related to
each other.

[[file:/Users/erker/projects/allo/data/4B/81E555-8C81-4BD7-8DA9-0827A9F2FB79/Screenshot 2018-04-26 08.17.38.png]]
** cite:mcpherson_simpson_99
see pg 168

they follow frelich 1992
look at his equation form.
also
* Introduction




maybe the framewaork should be broader, just growth equations for all
trees with urban tree as a case study/example of application.

Big problem   - urban ecosystem services depends on trees. predicting
depends on growth
narrower within - urban trees growth differently, there had been a
lack of data.
yet narrower
summary of approach and results

1) theoretically sound model form (through use of weibull)
2) expansion of predictive envelope/potential (through use of
   multilevel modeling).

Objective is to show how multilevel models can be used to predict tree
growth
1) Information about species functional groups and phylogeny to
   predict growth for unobserved species
2) Information about
3) Information about climate to predict growth in unobserved cities
4)


Urban trees have important ecological effects in cities that can
affect human wellbeing.  Forecasting ecosystem service provision by
trees requires a model of tree growth, since most services are
directly related to tree size (e.g. carbon storage in biomass, air
filtration by leaf area).  Until recently urban tree growth equations
have been rare because of lacking data.  In 2016 the US Forest Service
published the "Urban Tree Database and Allometric Equations", a
valuable dataset of the most common tree species in a dozen cities
across the US.  In addition to allometric equations, they also provide
growth equations.

While they are great step forward and an incredible resource, their
growth equations have limitations.  First, their method of model
selection simply chose the curve with the lowest AIC.  This meant that
any amount of extrapolation was highly suspect.  In the extreme case
where a species only had two observations in a city, the only possible
fit was a line. Second, they only fit equations for the most common
species in each of the cities they sampled.  It is not clear how to
modify an equation to fit a unobserved species or a unobserved city.
If red maple was not a species sampled in my city, should I use the
red maple equation from a climaticly dissimilar city?  Or should I use
the equation from the species most similar to red maple from my city?
What if I want to make a prediction about an unobserved species in an
unobserved city?

We remove these limitations by fitting a multilevel weibull model to
the data.  The weibull curve has a long history of use in forestry and
captures asymtotic growth well.  While it may not provide the best fit
to every dataset, it realistically models growth given what we know
about biological constraints, is flexible, and is less unreasonable to
extrapolate from.  The multilevel model allows information to be
shared across species and across cities, and, when combined with
species' phylogenetic data and cities' climate data, allows for
predictions at combinations of cities and species with little or no
individual level data, provided we know genus/functional group of the
species and the climate of the city.

DBH for illustrative purposes.

** past work



cite:nothdurft_e_2006

cite:yang_e_2009

cite:hall_bailey_2001

cite:Weiskittel_ForestGrowthAndYieldModeling

Growth estimate of Eucalyptus stands
based on nonlinear multilevel mixed-effects model theory

Miina, J., Heinonen, J., 2008. Stochastic simulation of forest regeneration establishment using a
multilevel multivariate model. Forest Science 54, 206–219.

Miina, J., Saksa, T., 2006. Predicting regeneration establishment in Norway spruce plantations
using a multivariate multilevel model. New Forests 32, 265–283.

Uzoh, F.C.C., Oliver, W.W., 2008. Individual tree diameter increment
model for managed even- aged stands of ponderosa pine throughout the
western United States using a multilevel linear mixed effects
model. Forest Ecology and Management 256, 438–445.

Kershaw Jr., J.A., Benjamin, J.G., Weiskittel, A.R., 2009. Approaches
for modeling vertical distribution of maximum knot size in black
spruce: A comparison of fixed- and mixed-effects nonlinear
models. Forest Science 55, 230–237.

Gregoire, T.G., Schabenberger, O., 1996. A non-linear mixed-effects
model to predict cumulative bole volume of standing trees. Journal of
Applied Statistics 23, 257–271.

Leites, L.P., Robinson, A.P., 2004. Improving taper equations of
loblolly pine with crown dimensions in a mixed-effects modeling
framework. Forest Science 50, 204–212.

Sharma, M., Parton, J., 2007. Height-diameter equations for boreal tree species in Ontario using a
mixed-effects modeling approach. Forest Ecology and Management 249,
187–198.

Wang, Y., LeMay, V.M., Baker, T.G., 2007b. Modelling and prediction of dominant height and site
index of Eucalyptus globulus plantations using a nonlinear mixed-effects model approach.
Canadian Journal of Forest Research 37, 1390–1403.



Urban Tree Database and Allometric Equations
E. Gregory McPherson, Natalie S. van Doorn, and Paula J. Peper

The economic, social, and ecological benefits of trees are directly
related to their size, as indicated by leaf area, crown volume, and
bio- mass (Scott et al. 1998, Stoffberg et al. 2010, Xiao et
al. 2000a). Growth equa- tions underpin the calculations produced by
many computer models used in urban forestry, such as i-Tree, National
Tree Benefit Calculator, OpenTreeMap, and ecoSmart Landscapes
(fig. 1).



* Methods
** Data
repeat measures on the same individuals would help much.

I wonder if the UFIA would have this eventually and if I could write
the code to incorporate the data.

In their dataset, AGE refers to years after planting.  Not true age.
This adds some noise and is the reason why in the dataset trees can
have significant dbh at "age" 0.

"AGE" it not actually known.  A modelling extension could incorporate
that uncertainty.  How would it be down?  multivariate?

*** Species
**** taxonomy
Nesting of taxonomy.

Cultivar < Species < Genus < Functional Type

Functional types:
1) Broad leaf
2) Conifer
3) Palm
4) ...
5) ...
| FunctionalType      |
|---------------------|
| broadleaf deciduous |
| broadleaf evergreen |
| conifer evergreen   |
| palm evergreen      |



|     | SpCode | ScientificName                         | FunctionalType      |                     |
|-----+--------+----------------------------------------+---------------------+---------------------|
|   1 | ACFA   | Acacia farnesiana                      | broadleaf deciduous |                     |
|   2 | ACME   | Acacia melanoxylon                     | broadleaf evergreen |                     |
|   3 | ACSA3  | Acacia salicina                        | broadleaf evergreen |                     |
|   4 | ACMA   | Acer macrophyllum                      | broadleaf deciduous |                     |
|   5 | ACNE   | Acer negundo                           | broadleaf deciduous |                     |
|   6 | ACPA   | Acer palmatum                          | broadleaf deciduous |                     |
|   7 | ACPL   | Acer platanoides                       | broadleaf deciduous |                     |
|   8 | ACRU   | Acer rubrum                            | broadleaf deciduous |                     |
|   9 | ACSA1  | Acer saccharinum                       | broadleaf deciduous |                     |
|  10 | ACSA2  | Acer saccharum                         | broadleaf deciduous |                     |
|  11 | AEHI   | Aesculus hippocastanum                 | broadleaf deciduous |                     |
|  12 | BABL   | Bauhinia x blakeana                    | broadleaf evergreen |                     |
|  13 | BENI   | Betula nigra                           | broadleaf deciduous |                     |
|  14 | BEPE   | Betula pendula                         | broadleaf deciduous |                     |
|  15 | BRPO   | Brachychiton populneum                 | broadleaf evergreen |                     |
|  16 | BUCA   | Butia capitata                         | palm evergreen      |                     |
|  17 | CACI   | Callistemon citrinus                   | broadleaf evergreen |                     |
|  18 | CADE2  | Calocedrus decurrens                   | conifer evergreen   |                     |
|  19 | CAIN4  | Calophyllum inophyllum                 | broadleaf evergreen |                     |
|  20 | CABEF  | Carpinus betulus 'Fastigiata'          | broadleaf deciduous |                     |
|  21 | CAIL   | Carya illinoinensis                    | broadleaf deciduous |                     |
|  22 | CANE33 | Cassia x nealiae                       | broadleaf deciduous |                     |
|  23 | CAEQ   | Casuarina equisetifolia                | broadleaf evergreen |                     |
|  24 | CASP   | Catalpa speciosa                       | broadleaf deciduous |                     |
|  25 | CEDE   | Cedrus deodara                         | conifer evergreen   |                     |
|  26 | CELA   | Celtis laevigata                       | conifer evergreen   | This can't be right |
|  27 | CEOC   | Celtis occidentalis                    | broadleaf deciduous |                     |
|  28 | CESI4  | Celtis sinensis                        | broadleaf deciduous |                     |
|  29 | CESI3  | Ceratonia siliqua                      | broadleaf evergreen |                     |
|  30 | CECA   | Cercis canadensis                      | broadleaf deciduous |                     |
|  31 | CHLI   | Chilopsis linearis                     | broadleaf deciduous |                     |
|  32 | CICA   | Cinnamomum camphora                    | broadleaf evergreen |                     |
|  33 | CISP2  | Citharexylum spinosum                  | broadleaf evergreen |                     |
|  34 | CONU   | Cocos nucifera                         | palm evergreen      |                     |
|  35 | COERA2 | Conocarpus erectus var. argenteus      | broadleaf evergreen |                     |
|  36 | COSU2  | Cordia subcordata                      | broadleaf evergreen |                     |
|  37 | COFL   | Cornus florida                         | broadleaf deciduous |                     |
|  38 | CR     | Crataegus sp.                          | broadleaf deciduous |                     |
|  39 | CRLA   | Crataegus x lavallei                   | broadleaf deciduous |                     |
|  40 | CUAN   | Cupaniopsis anacardioides              | broadleaf evergreen |                     |
|  41 | DERE   | Delonix regia                          | broadleaf deciduous |                     |
|  42 | ELAN   | Elaeagnus angustifolia                 | broadleaf deciduous |                     |
|  43 | ELOR2  | Elaeodendron orientale                 | broadleaf evergreen |                     |
|  44 | ERJA   | Eriobotrya japonica                    | broadleaf evergreen |                     |
|  45 | EUFI81 | Eucalyptus ficifolia                   | broadleaf evergreen |                     |
|  46 | EUGL   | Eucalyptus globulus                    | broadleaf evergreen |                     |
|  47 | EUMI2  | Eucalyptus microtheca                  | broadleaf evergreen |                     |
|  48 | EUSI   | Eucalyptus sideroxylon                 | broadleaf evergreen |                     |
|  49 | FASY   | Fagus sylvatica                        | broadleaf deciduous |                     |
|  50 | FIBE   | Ficus benjamina                        | broadleaf evergreen |                     |
|  51 | FIMI   | Ficus thonningii                       | broadleaf evergreen |                     |
|  52 | FIDE6  | Filicium decipiens                     | broadleaf evergreen |                     |
|  53 | FRAM   | Fraxinus americana                     | broadleaf deciduous |                     |
|  54 | FRAN2  | Fraxinus angustifolia                  | broadleaf deciduous |                     |
|  55 | FRAN_R | Fraxinus angustifolia 'Raywood'        | broadleaf deciduous |                     |
|  56 | FREX_H | Fraxinus excelsior 'Hessei'            | broadleaf deciduous |                     |
|  57 | FRHO   | Fraxinus holotricha                    | broadleaf deciduous |                     |
|  58 | FRLA   | Fraxinus latifolia                     | broadleaf deciduous |                     |
|  59 | FRPE   | Fraxinus pennsylvanica                 | broadleaf deciduous |                     |
|  60 | FRPE_M | Fraxinus pennsylvanica 'Marshall'      | broadleaf deciduous |                     |
|  61 | FRUH   | Fraxinus uhdei                         | broadleaf deciduous |                     |
|  62 | FRVE   | Fraxinus velutina                      | broadleaf deciduous |                     |
|  63 | FRVE_G | Fraxinus velutina 'Modesto'            | broadleaf deciduous |                     |
|  64 | GIBI   | Ginkgo biloba                          | broadleaf deciduous |                     |
|  65 | GLTR   | Gleditsia triacanthos                  | broadleaf deciduous |                     |
|  66 | GYDI   | Gymnocladus dioicus                    | broadleaf deciduous |                     |
|  67 | ILOP   | Ilex opaca                             | broadleaf evergreen |                     |
|  68 | ILPA2  | Ilex paraguariensis                    | broadleaf evergreen |                     |
|  69 | JAMI   | Jacaranda mimosifolia                  | broadleaf deciduous |                     |
|  70 | JUNI   | Juglans nigra                          | broadleaf deciduous |                     |
|  71 | JUVI   | Juniperus virginiana                   | conifer evergreen   |                     |
|  72 | JUSI   | Juniperus virginiana var. silicicola   | conifer evergreen   |                     |
|  73 | KOELFO | Koelreuteria elegans                   | broadleaf deciduous |                     |
|  74 | KOPA   | Koelreuteria paniculata                | broadleaf deciduous |                     |
|  75 | LAIN   | Lagerstroemia indica                   | broadleaf deciduous |                     |
|  76 | LA6    | Lagerstroemia sp.                      | broadleaf deciduous |                     |
|  77 | LASP   | Lagerstroemia speciosa                 | broadleaf deciduous |                     |
|  78 | LIST   | Liquidambar styraciflua                | broadleaf deciduous |                     |
|  79 | LITU   | Liriodendron tulipifera                | broadleaf deciduous |                     |
|  80 | MAGR   | Magnolia grandiflora                   | broadleaf evergreen |                     |
|  81 | PYAN   | Malus angustifolia                     | broadleaf deciduous |                     |
|  82 | MA2    | Malus sp.                              | broadleaf deciduous |                     |
|  83 | MEQU   | Melaleuca quinquenervia                | broadleaf evergreen |                     |
|  84 | MEEX   | Metrosideros excelsa                   | broadleaf evergreen |                     |
|  85 | MOAL   | Morus alba                             | broadleaf deciduous |                     |
|  86 | MO     | Morus sp.                              | broadleaf deciduous |                     |
|  87 | OLEU   | Olea europaea                          | broadleaf evergreen |                     |
|  88 | PAAC   | Parkinsonia aculeata                   | broadleaf deciduous |                     |
|  89 | CEFL   | Parkinsonia florida                    | broadleaf deciduous |                     |
|  90 | PHCA   | Phoenix canariensis                    | palm evergreen      |                     |
|  91 | PHDA4  | Phoenix dactylifera                    | palm evergreen      |                     |
|  92 | PIPU   | Picea pungens                          | conifer evergreen   |                     |
|  93 | PIBR2  | Pinus brutia                           | conifer evergreen   |                     |
|  94 | PICA   | Pinus canariensis                      | conifer evergreen   |                     |
|  95 | PICO   | Pinus contorta                         | conifer evergreen   |                     |
|  96 | PIEC   | Pinus echinata                         | conifer evergreen   |                     |
|  97 | PIED   | Pinus edulis                           | conifer evergreen   |                     |
|  98 | PIEL2  | Pinus eldarica                         | conifer evergreen   |                     |
|  99 | PIEL   | Pinus elliottii                        | conifer evergreen   |                     |
| 100 | PIHA   | Pinus halepensis                       | conifer evergreen   |                     |
| 101 | PINI   | Pinus nigra                            | conifer evergreen   |                     |
| 102 | PIPO   | Pinus ponderosa                        | conifer evergreen   |                     |
| 103 | PIRA   | Pinus radiata                          | conifer evergreen   |                     |
| 104 | PIST   | Pinus strobus                          | conifer evergreen   |                     |
| 105 | PISY   | Pinus sylvestris                       | conifer evergreen   |                     |
| 106 | PITA   | Pinus taeda                            | conifer evergreen   |                     |
| 107 | PITH   | Pinus thunbergiana                     | conifer evergreen   |                     |
| 108 | PICH   | Pistacia chinensis                     | broadleaf deciduous |                     |
| 109 | PIUN   | Pittosporum undulatum                  | broadleaf evergreen |                     |
| 110 | PLOC   | Platanus occidentalis                  | broadleaf deciduous |                     |
| 111 | PLRA   | Platanus racemosa                      | broadleaf deciduous |                     |
| 112 | PLAC   | Platanus x acerifolia                  | broadleaf deciduous |                     |
| 113 | THOR   | Platycladus orientalis                 | conifer evergreen   |                     |
| 114 | POMA   | Podocarpus macrophyllus                | conifer evergreen   |                     |
| 115 | POAN   | Populus angustifolia                   | broadleaf deciduous |                     |
| 116 | POTR2  | Populus balsamifera subsp. trichocarpa | broadleaf deciduous |                     |
| 117 | PODE   | Populus deltoides                      | broadleaf deciduous |                     |
| 118 | POFR   | Populus fremontii                      | broadleaf deciduous |                     |
| 119 | POSA   | Populus sargentii                      | broadleaf deciduous |                     |
| 120 | PRCH   | Prosopis chilensis                     | broadleaf deciduous |                     |
| 121 | PRCA   | Prunus caroliniana                     | broadleaf evergreen |                     |
| 122 | PRCE   | Prunus cerasifera                      | broadleaf deciduous |                     |
| 123 | PRCE   | Prunus cerasifera cvs.                 | broadleaf deciduous |                     |
| 124 | PRSE2  | Prunus serrulata                       | broadleaf deciduous |                     |
| 125 | PR     | Prunus sp.                             | broadleaf deciduous |                     |
| 126 | PRYE   | Prunus yedoensis                       | broadleaf deciduous |                     |
| 127 | PSME   | Pseudotsuga menziesii                  | conifer evergreen   |                     |
| 128 | PYCA   | Pyrus calleryana                       | broadleaf deciduous |                     |
| 129 | PYCA_B | Pyrus calleryana 'Bradford'            | broadleaf deciduous |                     |
| 130 | PYCA   | Pyrus calleryana cvs.                  | broadleaf deciduous |                     |
| 131 | PYKA   | Pyrus kawakamii                        | broadleaf evergreen |                     |
| 132 | PY     | Pyrus sp.                              | broadleaf deciduous |                     |
| 133 | QUAG   | Quercus agrifolia                      | broadleaf evergreen |                     |
| 134 | QUAL   | Quercus alba                           | broadleaf deciduous |                     |
| 135 | QUIL2  | Quercus ilex                           | broadleaf evergreen |                     |
| 136 | QULA2  | Quercus laurifolia                     | broadleaf deciduous |                     |
| 137 | QULO   | Quercus lobata                         | broadleaf deciduous |                     |
| 138 | QUMA1  | Quercus macrocarpa                     | broadleaf deciduous |                     |
| 139 | QUNI   | Quercus nigra                          | broadleaf deciduous |                     |
| 140 | QUPA   | Quercus palustris                      | broadleaf deciduous |                     |
| 141 | QUPH   | Quercus phellos                        | broadleaf deciduous |                     |
| 142 | QURU   | Quercus rubra                          | broadleaf deciduous |                     |
| 143 | QUSH   | Quercus shumardii                      | broadleaf deciduous |                     |
| 144 | QUVI   | Quercus virginiana                     | broadleaf evergreen |                     |
| 145 | RHLA   | Rhus lancea                            | broadleaf evergreen |                     |
| 146 | ROPS   | Robinia pseudoacacia                   | broadleaf deciduous |                     |
| 147 | SAPA   | Sabal palmetto                         | palm evergreen      |                     |
| 148 | PISA2  | Samanea saman                          | broadleaf deciduous |                     |
| 149 | SCMO   | Schinus molle                          | broadleaf evergreen |                     |
| 150 | SCTE   | Schinus terebinthifolius               | broadleaf evergreen |                     |
| 151 | SESE   | Sequoia sempervirens                   | conifer evergreen   |                     |
| 152 | SWMA   | Swietenia mahagoni                     | broadleaf evergreen |                     |
| 153 | SYRO   | Syagrus romanzoffiana                  | palm evergreen      |                     |
| 154 | TAAR   | Tabebuia aurea                         | broadleaf evergreen |                     |
| 155 | TAPA   | Tabebuia heterophylla                  | broadleaf evergreen |                     |
| 156 | TAOC   | Tabebuia ochracea subsp. neochrysantha | broadleaf evergreen |                     |
| 157 | TIAM   | Tilia americana                        | broadleaf deciduous |                     |
| 158 | TICO   | Tilia cordata                          | broadleaf deciduous |                     |
| 159 | TITO   | Tilia tomentosa                        | broadleaf deciduous |                     |
| 160 | TRSE6  | Triadica sebifera                      | broadleaf deciduous |                     |
| 161 | TRCO   | Tristaniopsis conferta                 | broadleaf evergreen |                     |
| 162 | ULAL   | Ulmus alata                            | broadleaf deciduous |                     |
| 163 | ULAM   | Ulmus americana                        | broadleaf deciduous |                     |
| 164 | ULPA   | Ulmus parvifolia                       | broadleaf deciduous |                     |
| 165 | ULPU   | Ulmus pumila                           | broadleaf deciduous |                     |
| 166 | VEME   | Veitchia merrillii                     | palm evergreen      |                     |
| 167 | WAFI   | Washingtonia filifera                  | palm evergreen      |                     |
| 168 | WARO   | Washingtonia robusta                   | palm evergreen      |                     |
| 169 | ZESE   | Zelkova serrata                        | broadleaf deciduous |                     |
**** species traits
think about species level traits - shade tolerance, water use,
morphology (wood, leaf, etc).

where would these come from, what would they be?  What are the traits
that are important for urban environments?



*** Cities and Climate


#+name: city_climate
| Region | City             |  CDD |  HDD | Precip |  Longitude | Latitude |
|--------+------------------+------+------+--------+------------+----------|
| CenFla | Orlando, FL      | 1806 |  289 |   1367 |  -81.37924 | 28.53834 |
| GulfCo | Charleston, SC   | 1124 | 1221 |   1555 |   -79.9311 |  32.7765 |
| InlEmp | Claremont, CA    |  134 |  872 |    523 |  -117.7198 |  34.0967 |
| InlVal | Modesto, CA      | 1052 | 1439 |    315 | -120.99688 | 37.63910 |
| SacVal | Sacramento, CA   |  773 | 1718 |    470 | -121.49440 | 38.58157 |
| InterW | Albuquerque, NM  |  677 | 2416 |    250 | -106.60555 | 35.08533 |
| LoMidW | Indianapolis, IN |  510 | 3153 |    392 |  -86.15807 | 39.76840 |
| MidWst | Minneapolis, MN  |  355 | 4436 |    622 |  -93.26501 | 44.97775 |
| NMtnPr | Fort Collins, CO |  349 | 3332 |    452 | -105.08442 | 40.58526 |
| NoCalC | Berkeley, CA     |   39 | 1786 |    564 | -122.27275 | 37.87159 |
| NoEast | Queens, NY       |  560 | 2819 |   1041 |   -73.7949 |  40.7282 |
| PacfNW | Longview, WA     |  157 | 2468 |   1059 |  -94.74049 | 32.50070 |
| Piedmt | Charlotte, NC    |  847 | 1891 |   1426 |  -80.84313 | 35.22709 |
| SoCalC | Santa Monica, CA |  266 |  710 |    570 | -118.49119 | 34.01945 |
| SWDsrt | Glendale, AZ     | 2128 |  637 |    174 |  -112.1860 |  33.5387 |
| TpIntW | Boise, ID        |  387 | 3325 |    417 |  -116.2023 |  43.6150 |
| Tropic | Honolulu, HI     | 2416 |    0 |   2206 | -157.85833 | 21.30694 |


*** Get new climate data.  Growing degree days and Precip.  HDD is super high for minneapolis, but harsh winters aren't relevant.

#+BEGIN_SRC sh
wget -O ../data/gdd.txt https://www1.ncdc.noaa.gov/pub/data/normals/1981-2010/supplemental/products/agricultural/ann-grdd-tb4886.txt
wget -O ../data/temp-station-info.txt https://www1.ncdc.noaa.gov/pub/data/normals/1981-2010/station-inventories/temp-inventory.txt
#+END_SRC

#+RESULTS:

#+begin_src R
  library(ggplot2)
  library(dplyr)
  library(tidyr)
  library(stringr)
  d <- read.table("../data/gdd.txt")

            colnames(d) <- c("station", "grdd")

          d <- d %>%
              mutate(gdd = as.numeric(str_match(grdd, "-*[0-9]+")[,1]),
                     qual = str_match(grdd, "[A-Z]")[,1])
    head(d)
  dim(d)

  d <- d %>%
      filter(qual %in% c("C","S","R"),
             gdd >= 0)
  dim(d)

      ll <- read.table("../data/temp-station-info.txt", fill = T, stringsAsFactors = F)
      ll <- ll[,1:3] # get station, lat, and long
      colnames(ll) <- c("station","lat","long")

  ll <-  ll %>%
      mutate(station = as.character(station),
             lat = as.numeric(lat))

  dl <- left_join(d, ll)

  write.csv(dl, "../data/gdd_qt_ll.csv")
#+end_src

#+RESULTS:
#+begin_example
      station   grdd   gdd qual
1 AQW00061705 12073C 12073    C
2 CAW00064757  2636Q  2636    Q
3 CQC00914080 11168P 11168    P
4 CQC00914801 11656R 11656    R
5 FMC00914395 11423P 11423    P
6 FMC00914419 11860P 11860    P
[1] 7501    4
[1] 6340    4
Warning message:
In evalq(as.numeric(lat), <environment>) : NAs introduced by coercion
Joining, by = "station"
Warning message:
Column `station` joining factor and character vector, coercing into character vector
#+end_example

#+begin_src R :var city_climate=city_climate

      library(sp)
        library(jsonlite)
      library(dplyr)

  cities <- city_climate %>%
          select(City, Latitude, Longitude, Precip)

      coordinates(cities) <- ~ Longitude + Latitude
      proj4string(cities) <- CRS("+init=epsg:4326")

      gdd <- read.csv("../data/gdd_qt_ll.csv", stringsAsFactors =F)
      coordinates(gdd) <- ~long + lat
      proj4string(gdd) <- CRS("+init=epsg:4326")

      gdd.dists <- spDists(cities, gdd, longlat = T)
      gdd.dists.min <- apply(gdd.dists, 1, function(x) which(x == min(x))[1])
      gdd <- gdd[cdd.dists.min,]

    d <- bind_cols(gdd@data,cities@data, data.frame(coordinates(cities))) %>%
        select(gdd, Precip, City, Longitude, Latitude) %>%
      rename(GDD = gdd)

    write.csv(d, "../data/cities_gdd.csv")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/GDD_Precip_Cities.png
  ggplot(d, aes(x = GDD, y = Precip, label = City)) + geom_text()
#+end_src

#+RESULTS:
[[file:../figs/GDD_Precip_Cities.png]]

*** Tree Dimensions
| Tree Dimension            | abbr |
|---------------------------+------|
| leaf area                 | la   |
| crown diameter            | cd   |
| crown height              | ch   |
| age                       | age  |
| diameter at breast height | dbh  |
| tree height               | th   |

Equations:

| Independent Variable (IV) | Dependent Variable (DV) |
|---------------------------+-------------------------|
| dbh                       | age                     |
| cd                        | dbh                     |
| dbh                       | cd                      |
| dbh                       | ch                      |
| age                       | dbh                     |
| dbh                       | la                      |
| dbh                       | th                      |

*** tidy data, age and dbh
**** load libraries
#+begin_src R :exports none
  library(plyr)
  library(dplyr)
  library(ggplot2)
  library(readr)
  library(ascii)
  library(tidyr)
#+end_src

#+RESULTS:
**** functions
#+begin_src R
  options(asciiType = "org")
  ascii.nowarn.print <- function(x,...) {
                                          #op <- options(warn = -1)
                                          #      on.exit(options(op))

      suppressWarnings(print(ascii(x,...)))

  }
#+end_src

#+RESULTS:

**** read in data
#+begin_src R :exports code
  d <- read_csv("../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv")
#+end_src

#+RESULTS:
#+begin_example
Parsed with column specification:
cols(
  .default = col_integer(),
  Region = col_character(),
  City = col_character(),
  Source = col_character(),
  Zone = col_character(),
  `Park/Street` = col_character(),
  SpCode = col_character(),
  ScientificName = col_character(),
  CommonName = col_character(),
  TreeType = col_character(),
  street = col_character(),
  `DBH (cm)` = col_double(),
  `TreeHt (m)` = col_double(),
  CrnBase = col_double(),
  `CrnHt (m)` = col_double(),
  `CdiaPar (m)` = col_double(),
  `CDiaPerp (m)` = col_double(),
  `AvgCdia (m)` = col_double(),
  `Leaf (m2)` = col_double(),
  dbh1 = col_double()
)
See spec(...) for full column specifications.
Warning: 24255 parsing failures.
row [90m# A tibble: 5 x 5[39m col     row col   expected   actual file                                            expected   [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m      [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m                                           actual [90m1[39m  126[90m2[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… file [90m2[39m  126[90m3[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… row [90m3[39m  126[90m4[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… col [90m4[39m  126[90m5[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… expected [90m5[39m  126[90m6[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.…
... ........................... ... ............................................................................... ........ ............ [... truncated]
Warning message:
In rbind(names(probs), probs_f) :
  number of columns of result is not a multiple of vector length (arg 1)
#+end_example


#+begin_src R
                                          #str(d)
#+end_src

#+RESULTS:
**** fix some species things
***** fix lower case species codes
#+begin_src R
  d$SpCode <- toupper(d$SpCode)
#+end_src

#+RESULTS:
***** fix QUAG1 to be QUAG
#+begin_src R
  d$SpCode[d$SpCode == "QUAG1"] <- "QUAG"
#+end_src

#+RESULTS:
***** fix common names

Not all are fixed!

#+begin_src R
  d$CommonName[d$CommonName == "Kurrajong"] <- "Kurrajong/Bottle tree"
  d$CommonName[d$CommonName == "Bottle tree"] <- "Kurrajong/Bottle tree"

  d$CommonName[d$CommonName == "Apple"] <- "Apple/Crabapple"
  d$CommonName[d$CommonName == "Crabapple"] <- "Apple/Crabapple"


  d$CommonName[d$CommonName == "silver maple"] <- "Silver maple"
  d$CommonName[d$CommonName == "camphor tree"] <- "Camphor tree"
  d$CommonName[d$CommonName == "ginkgo"] <- "Ginkgo"
  d$CommonName[d$CommonName == "honeylocust"] <- "Honeylocust"
  d$CommonName[d$CommonName == "ginkgo"] <- "Ginkgo"
  d$CommonName[d$CommonName == "common crapemyrtle"] <- "Common crapemyrtle"
  d$CommonName[d$CommonName == "sweetgum"] <- "Sweetgum"
  d$CommonName[d$CommonName == "southern magnolia"] <- "Southern magnolia"



#+end_src

#+RESULTS:
***** fix scientific names
#+begin_src R
  d$ScientificName[d$ScientificName == "Prunus cerasifera cvs."] <- "Prunus cerasifera"
  d$ScientificName[d$ScientificName == "Pyrus calleryana cvs."] <- "Pyrus calleryana"

#+end_src

#+RESULTS:

**** species are
#+name: tree_types
| TreeType | FunctionalType      |
|----------+---------------------|
| BDL      | broadleaf deciduous |
| BDM      | broadleaf deciduous |
| BDS      | broadleaf deciduous |
| BEL      | broadleaf evergreen |
| BEM      | broadleaf evergreen |
| BES      | broadleaf evergreen |
| CEL      | conifer evergreen   |
| CEM      | conifer evergreen   |
| CES      | conifer evergreen   |
| PEL      | palm evergreen      |
| PEM      | palm evergreen      |
| PES      | palm evergreen      |
I got rid of the small medium and large distinctions for
simplification here.

#+begin_src R :var tt=tree_types
  sp <- d %>% select(SpCode, ScientificName, TreeType) %>%
      left_join(tt) %>%
      select(-TreeType) %>%
      unique() %>%
      arrange(ScientificName) %>%
      ascii.nowarn.print()
#+end_src

#+RESULTS:
#+begin_example
Joining, by = "TreeType"
|     | SpCode | ScientificName                         | FunctionalType      |
|-----+--------+----------------------------------------+---------------------|
| 1   | ACFA   | Acacia farnesiana                      | broadleaf deciduous |
| 2   | ACME   | Acacia melanoxylon                     | broadleaf evergreen |
| 3   | ACSA3  | Acacia salicina                        | broadleaf evergreen |
| 4   | ACMA   | Acer macrophyllum                      | broadleaf deciduous |
| 5   | ACNE   | Acer negundo                           | broadleaf deciduous |
| 6   | ACPA   | Acer palmatum                          | broadleaf deciduous |
| 7   | ACPL   | Acer platanoides                       | broadleaf deciduous |
| 8   | ACRU   | Acer rubrum                            | broadleaf deciduous |
| 9   | ACSA1  | Acer saccharinum                       | broadleaf deciduous |
| 10  | ACSA2  | Acer saccharum                         | broadleaf deciduous |
| 11  | AEHI   | Aesculus hippocastanum                 | broadleaf deciduous |
| 12  | BABL   | Bauhinia x blakeana                    | broadleaf evergreen |
| 13  | BENI   | Betula nigra                           | broadleaf deciduous |
| 14  | BEPE   | Betula pendula                         | broadleaf deciduous |
| 15  | BRPO   | Brachychiton populneum                 | broadleaf evergreen |
| 16  | BUCA   | Butia capitata                         | palm evergreen      |
| 17  | CACI   | Callistemon citrinus                   | broadleaf evergreen |
| 18  | CADE2  | Calocedrus decurrens                   | conifer evergreen   |
| 19  | CAIN4  | Calophyllum inophyllum                 | broadleaf evergreen |
| 20  | CABEF  | Carpinus betulus 'Fastigiata'          | broadleaf deciduous |
| 21  | CAIL   | Carya illinoinensis                    | broadleaf deciduous |
| 22  | CANE33 | Cassia x nealiae                       | broadleaf deciduous |
| 23  | CAEQ   | Casuarina equisetifolia                | broadleaf evergreen |
| 24  | CASP   | Catalpa speciosa                       | broadleaf deciduous |
| 25  | CEDE   | Cedrus deodara                         | conifer evergreen   |
| 26  | CELA   | Celtis laevigata                       | conifer evergreen   |
| 27  | CEOC   | Celtis occidentalis                    | broadleaf deciduous |
| 28  | CESI4  | Celtis sinensis                        | broadleaf deciduous |
| 29  | CESI3  | Ceratonia siliqua                      | broadleaf evergreen |
| 30  | CECA   | Cercis canadensis                      | broadleaf deciduous |
| 31  | CHLI   | Chilopsis linearis                     | broadleaf deciduous |
| 32  | CICA   | Cinnamomum camphora                    | broadleaf evergreen |
| 33  | CISP2  | Citharexylum spinosum                  | broadleaf evergreen |
| 34  | CONU   | Cocos nucifera                         | palm evergreen      |
| 35  | COERA2 | Conocarpus erectus var. argenteus      | broadleaf evergreen |
| 36  | COSU2  | Cordia subcordata                      | broadleaf evergreen |
| 37  | COFL   | Cornus florida                         | broadleaf deciduous |
| 38  | CR     | Crataegus sp.                          | broadleaf deciduous |
| 39  | CRLA   | Crataegus x lavallei                   | broadleaf deciduous |
| 40  | CUAN   | Cupaniopsis anacardioides              | broadleaf evergreen |
| 41  | DERE   | Delonix regia                          | broadleaf deciduous |
| 42  | ELAN   | Elaeagnus angustifolia                 | broadleaf deciduous |
| 43  | ELOR2  | Elaeodendron orientale                 | broadleaf evergreen |
| 44  | ERJA   | Eriobotrya japonica                    | broadleaf evergreen |
| 45  | EUFI81 | Eucalyptus ficifolia                   | broadleaf evergreen |
| 46  | EUGL   | Eucalyptus globulus                    | broadleaf evergreen |
| 47  | EUMI2  | Eucalyptus microtheca                  | broadleaf evergreen |
| 48  | EUSI   | Eucalyptus sideroxylon                 | broadleaf evergreen |
| 49  | FASY   | Fagus sylvatica                        | broadleaf deciduous |
| 50  | FIBE   | Ficus benjamina                        | broadleaf evergreen |
| 51  | FIMI   | Ficus thonningii                       | broadleaf evergreen |
| 52  | FIDE6  | Filicium decipiens                     | broadleaf evergreen |
| 53  | FRAM   | Fraxinus americana                     | broadleaf deciduous |
| 54  | FRAN2  | Fraxinus angustifolia                  | broadleaf deciduous |
| 55  | FRAN_R | Fraxinus angustifolia 'Raywood'        | broadleaf deciduous |
| 56  | FREX_H | Fraxinus excelsior 'Hessei'            | broadleaf deciduous |
| 57  | FRHO   | Fraxinus holotricha                    | broadleaf deciduous |
| 58  | FRLA   | Fraxinus latifolia                     | broadleaf deciduous |
| 59  | FRPE   | Fraxinus pennsylvanica                 | broadleaf deciduous |
| 60  | FRPE_M | Fraxinus pennsylvanica 'Marshall'      | broadleaf deciduous |
| 61  | FRUH   | Fraxinus uhdei                         | broadleaf deciduous |
| 62  | FRVE   | Fraxinus velutina                      | broadleaf deciduous |
| 63  | FRVE_G | Fraxinus velutina 'Modesto'            | broadleaf deciduous |
| 64  | GIBI   | Ginkgo biloba                          | broadleaf deciduous |
| 65  | GLTR   | Gleditsia triacanthos                  | broadleaf deciduous |
| 66  | GYDI   | Gymnocladus dioicus                    | broadleaf deciduous |
| 67  | ILOP   | Ilex opaca                             | broadleaf evergreen |
| 68  | ILPA2  | Ilex paraguariensis                    | broadleaf evergreen |
| 69  | JAMI   | Jacaranda mimosifolia                  | broadleaf deciduous |
| 70  | JUNI   | Juglans nigra                          | broadleaf deciduous |
| 71  | JUVI   | Juniperus virginiana                   | conifer evergreen   |
| 72  | JUSI   | Juniperus virginiana var. silicicola   | conifer evergreen   |
| 73  | KOELFO | Koelreuteria elegans                   | broadleaf deciduous |
| 74  | KOPA   | Koelreuteria paniculata                | broadleaf deciduous |
| 75  | LAIN   | Lagerstroemia indica                   | broadleaf deciduous |
| 76  | LA6    | Lagerstroemia sp.                      | broadleaf deciduous |
| 77  | LASP   | Lagerstroemia speciosa                 | broadleaf deciduous |
| 78  | LIST   | Liquidambar styraciflua                | broadleaf deciduous |
| 79  | LITU   | Liriodendron tulipifera                | broadleaf deciduous |
| 80  | MAGR   | Magnolia grandiflora                   | broadleaf evergreen |
| 81  | PYAN   | Malus angustifolia                     | broadleaf deciduous |
| 82  | MA2    | Malus sp.                              | broadleaf deciduous |
| 83  | MEQU   | Melaleuca quinquenervia                | broadleaf evergreen |
| 84  | MEEX   | Metrosideros excelsa                   | broadleaf evergreen |
| 85  | MOAL   | Morus alba                             | broadleaf deciduous |
| 86  | MO     | Morus sp.                              | broadleaf deciduous |
| 87  | OLEU   | Olea europaea                          | broadleaf evergreen |
| 88  | PAAC   | Parkinsonia aculeata                   | broadleaf deciduous |
| 89  | CEFL   | Parkinsonia florida                    | broadleaf deciduous |
| 90  | PHCA   | Phoenix canariensis                    | palm evergreen      |
| 91  | PHDA4  | Phoenix dactylifera                    | palm evergreen      |
| 92  | PIPU   | Picea pungens                          | conifer evergreen   |
| 93  | PIBR2  | Pinus brutia                           | conifer evergreen   |
| 94  | PICA   | Pinus canariensis                      | conifer evergreen   |
| 95  | PICO   | Pinus contorta                         | conifer evergreen   |
| 96  | PIEC   | Pinus echinata                         | conifer evergreen   |
| 97  | PIED   | Pinus edulis                           | conifer evergreen   |
| 98  | PIEL2  | Pinus eldarica                         | conifer evergreen   |
| 99  | PIEL   | Pinus elliottii                        | conifer evergreen   |
| 100 | PIHA   | Pinus halepensis                       | conifer evergreen   |
| 101 | PINI   | Pinus nigra                            | conifer evergreen   |
| 102 | PIPO   | Pinus ponderosa                        | conifer evergreen   |
| 103 | PIRA   | Pinus radiata                          | conifer evergreen   |
| 104 | PIST   | Pinus strobus                          | conifer evergreen   |
| 105 | PISY   | Pinus sylvestris                       | conifer evergreen   |
| 106 | PITA   | Pinus taeda                            | conifer evergreen   |
| 107 | PITH   | Pinus thunbergiana                     | conifer evergreen   |
| 108 | PICH   | Pistacia chinensis                     | broadleaf deciduous |
| 109 | PIUN   | Pittosporum undulatum                  | broadleaf evergreen |
| 110 | PLOC   | Platanus occidentalis                  | broadleaf deciduous |
| 111 | PLRA   | Platanus racemosa                      | broadleaf deciduous |
| 112 | PLAC   | Platanus x acerifolia                  | broadleaf deciduous |
| 113 | THOR   | Platycladus orientalis                 | conifer evergreen   |
| 114 | POMA   | Podocarpus macrophyllus                | conifer evergreen   |
| 115 | POAN   | Populus angustifolia                   | broadleaf deciduous |
| 116 | POTR2  | Populus balsamifera subsp. trichocarpa | broadleaf deciduous |
| 117 | PODE   | Populus deltoides                      | broadleaf deciduous |
| 118 | POFR   | Populus fremontii                      | broadleaf deciduous |
| 119 | POSA   | Populus sargentii                      | broadleaf deciduous |
| 120 | PRCH   | Prosopis chilensis                     | broadleaf deciduous |
| 121 | PRCA   | Prunus caroliniana                     | broadleaf evergreen |
| 122 | PRCE   | Prunus cerasifera                      | broadleaf deciduous |
| 123 | PRSE2  | Prunus serrulata                       | broadleaf deciduous |
| 124 | PR     | Prunus sp.                             | broadleaf deciduous |
| 125 | PRYE   | Prunus yedoensis                       | broadleaf deciduous |
| 126 | PSME   | Pseudotsuga menziesii                  | conifer evergreen   |
| 127 | PYCA   | Pyrus calleryana                       | broadleaf deciduous |
| 128 | PYCA_B | Pyrus calleryana 'Bradford'            | broadleaf deciduous |
| 129 | PYKA   | Pyrus kawakamii                        | broadleaf evergreen |
| 130 | PY     | Pyrus sp.                              | broadleaf deciduous |
| 131 | QUAG   | Quercus agrifolia                      | broadleaf evergreen |
| 132 | QUAL   | Quercus alba                           | broadleaf deciduous |
| 133 | QUIL2  | Quercus ilex                           | broadleaf evergreen |
| 134 | QULA2  | Quercus laurifolia                     | broadleaf deciduous |
| 135 | QULO   | Quercus lobata                         | broadleaf deciduous |
| 136 | QUMA1  | Quercus macrocarpa                     | broadleaf deciduous |
| 137 | QUNI   | Quercus nigra                          | broadleaf deciduous |
| 138 | QUPA   | Quercus palustris                      | broadleaf deciduous |
| 139 | QUPH   | Quercus phellos                        | broadleaf deciduous |
| 140 | QURU   | Quercus rubra                          | broadleaf deciduous |
| 141 | QUSH   | Quercus shumardii                      | broadleaf deciduous |
| 142 | QUVI   | Quercus virginiana                     | broadleaf evergreen |
| 143 | RHLA   | Rhus lancea                            | broadleaf evergreen |
| 144 | ROPS   | Robinia pseudoacacia                   | broadleaf deciduous |
| 145 | SAPA   | Sabal palmetto                         | palm evergreen      |
| 146 | PISA2  | Samanea saman                          | broadleaf deciduous |
| 147 | SCMO   | Schinus molle                          | broadleaf evergreen |
| 148 | SCTE   | Schinus terebinthifolius               | broadleaf evergreen |
| 149 | SESE   | Sequoia sempervirens                   | conifer evergreen   |
| 150 | SWMA   | Swietenia mahagoni                     | broadleaf evergreen |
| 151 | SYRO   | Syagrus romanzoffiana                  | palm evergreen      |
| 152 | TAAR   | Tabebuia aurea                         | broadleaf evergreen |
| 153 | TAPA   | Tabebuia heterophylla                  | broadleaf evergreen |
| 154 | TAOC   | Tabebuia ochracea subsp. neochrysantha | broadleaf evergreen |
| 155 | TIAM   | Tilia americana                        | broadleaf deciduous |
| 156 | TICO   | Tilia cordata                          | broadleaf deciduous |
| 157 | TITO   | Tilia tomentosa                        | broadleaf deciduous |
| 158 | TRSE6  | Triadica sebifera                      | broadleaf deciduous |
| 159 | TRCO   | Tristaniopsis conferta                 | broadleaf evergreen |
| 160 | ULAL   | Ulmus alata                            | broadleaf deciduous |
| 161 | ULAM   | Ulmus americana                        | broadleaf deciduous |
| 162 | ULPA   | Ulmus parvifolia                       | broadleaf deciduous |
| 163 | ULPU   | Ulmus pumila                           | broadleaf deciduous |
| 164 | VEME   | Veitchia merrillii                     | palm evergreen      |
| 165 | WAFI   | Washingtonia filifera                  | palm evergreen      |
| 166 | WARO   | Washingtonia robusta                   | palm evergreen      |
| 167 | ZESE   | Zelkova serrata                        | broadleaf deciduous |
#+end_example
**** tidy a few names and select variables of interest here
#+begin_src R
  d <- d %>% rename(DBH = `DBH (cm)`, Leaf = `Leaf (m2)`) %>% select(Region, City, TreeID, SpCode, DBH, Leaf, DBH, Age, ScientificName)
#+end_src

#+RESULTS:

#+begin_src R
  summary(d$Leaf)
  sum(d$Leaf == -1) / length(d$Leaf)
  sum(d$DBH == -1) / length(d$DBH)
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
:    -1.0    12.9   116.1   302.5   389.2  9516.0
: [1] 0.1143094
: [1] 0

#+begin_src R
  d <- filter(d, DBH != -1, Age != -1) %>%
      rename(AGE = Age)
#+end_src

#+RESULTS:
**** save data
#+begin_src R
  saveRDS(d, "../data/tidy_age_dbh.rds")
#+end_src

#+RESULTS:
**** save subset of data for testing
#+begin_src R
  d <- readRDS("../data/tidy_age_dbh.rds")
  clim <- read.csv("../data/cities_gdd.csv", stringsAsFactors = F) %>%
      select(-X)

    species.to.filter <- c("LIST", "MAGR", "PYCA", "CICA", "GLTR", "PICH", "PLAC", "ACPL", "ACRU", "ACSA1", "ACSA2", "GIBI", "LAIN", "MA2", "PRCE", "QURU", "FRAM", "FRPE", "TIAM", "ULAM", "ULPA", "ULPU", "WARO", "CEOC", "FRVE")

      d2 <- d %>%
          mutate(Genus = stringr::str_extract(ScientificName, '\\w*')) %>%
          rename(Species = SpCode) %>%
          select(-Leaf,-TreeID) %>%
          left_join(.,clim) %>%
          mutate(Precip = round(Precip/ 1000, 4),
                 GDD = round(GDD/ 1000, 4))


      saveRDS(d2, "../data/age_dbh_full.rds")

    d3 <- d2 %>%
          filter(Species %in% species.to.filter)

      saveRDS(d3, "../data/age_dbh_testing.rds")
#+end_src
**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
rsync -avz ../data/age_dbh_full.rds erker@krusty:~/allo/data/
rsync -avz ../data/age_dbh_testing.rds erker@krusty:~/allo/data/
#+END_SRC

#+RESULTS:
#+begin_example
erker@krusty's password:
building file list ... done
age_dbh_full.rds

sent 26672 bytes  received 804 bytes  2616.76 bytes/sec
total size is 88550  speedup is 3.22
erker@krusty's password:
building file list ... done
age_dbh_testing.rds

sent 36460 bytes  received 372 bytes  4910.93 bytes/sec
total size is 37842  speedup is 1.03
#+end_example

*** a couple plots
**** species by city raster, black if the combination exists
#+begin_src R
  library(dplyr)
  library(ggplot2)

  d <- readRDS("../data/tidy_age_dbh.rds")

  cs <- expand.grid(City = unique(d$City), SpCode = unique(d$SpCode)) %>%
      mutate(join = paste0(City, SpCode))

  dj <- d %>% mutate(join = paste0(City, SpCode)) %>% pull(join)

  cs <- cs %>% mutate(InData = join %in% dj)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/CitySpeciesData_CityCentric.png :height 400 :width 1400
  ggplot(cs, aes(x = SpCode, y = City, fill = InData)) +
      geom_raster() +
      coord_equal() +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
      scale_fill_manual(values = c("white","black"))
#+end_src

#+RESULTS:
[[file:../figs/CitySpeciesData_CityCentric.png]]

#+begin_src R :exports results :results graphics :file ../figs/CitySpeciesData_SpeciesCentric.png :height 400 :width 1400
  cs_sp <- left_join(cs, unique(select(d, SpCode, ScientificName)))

  ggplot(cs_sp, aes(x = SpCode, y = City, fill = InData)) +
      geom_raster() +
      coord_equal() +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
      scale_fill_manual(values = c("white","black"))
#+end_src

#+RESULTS:
[[file:../figs/CitySpeciesData_SpeciesCentric.png]]

#+begin_src R :exports results :results graphics :file ../figs/CitySpeciesData_CommonSpeciesCentric.png :height 400 :width 1400
  cs_sp_cmn <- cs_sp %>%
      group_by(SpCode, ScientificName) %>%
      summarize(n = sum(InData)) %>%
      ungroup() %>%
      arrange(-n) %>%
      mutate(SpCode = as.factor(SpCode))

  cs_sp_cmn <- cs_sp %>%
      mutate(SpCode = as.character(SpCode),
             SpCode = factor(SpCode, levels(cs_sp_cmn$SpCode)[as.numeric(cs_sp_cmn$SpCode)]))

  ggplot(cs_sp_cmn, aes(x = SpCode, y = City, fill = InData)) +
      geom_raster() +
      coord_equal() +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
      scale_fill_manual(values = c("white","black"))
#+end_src

#+RESULTS:
[[file:../figs/CitySpeciesData_CommonSpeciesCentric.png]]

#+begin_src R :exports results :results graphics :file ../figs/CitySpeciesData_SciNameCentric.png :height 400 :width 1400
  cs_sci_cmn <- cs_sp %>%
      group_by(ScientificName) %>%
      summarize(n = sum(InData)) %>%
      ungroup() %>%
      arrange(-n) %>%
      mutate(ScientificName = as.factor(ScientificName))

  cs_sci_cmn <- cs_sp %>%
      mutate(ScientificName = as.character(ScientificName),
             ScientificName = factor(ScientificName, levels(cs_sci_cmn$ScientificName)[as.numeric(cs_sci_cmn$ScientificName)]))


  ggplot(cs_sci_cmn, aes(x = ScientificName, y = City, fill = InData)) +
      geom_raster() +
      coord_equal() +
      theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
      scale_fill_manual(values = c("white","black"))
#+end_src

#+RESULTS:
[[file:../figs/CitySpeciesData_SciNameCentric.png]]
**** look at climate variables
#+begin_src R
d <-   readRDS("../data/age_dbh_testing.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/d_testing_clim.png
ggplot(d, aes(x = AGE, y = DBH, color = HDD)) + geom_point() + facet_wrap(~Precip)
#+end_src

#+RESULTS:
[[file:../figs/d_testing_clim.png]]

#+begin_src R :exports results :results graphics :file ../figs/d_testing_clim_list.png
ggplot(filter(d, Species == "LIST"), aes(x = AGE, y = DBH, color = HDD)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/d_testing_clim.png]]


Is minneapolis an influential point?



** Modelling

- Goal is to model tree dimensions as a function of age (and other factors).
  - I'm not doing allometric models (relating dimensions to one
    another) because
    - they are usually log-log, simpler and less interesting
    - But doing them would be a natural extension
- from simple to complex
  - single species, single location, homoskedasticity
  - single species, single location, heteroskedasticity
  - multiple species, single location, heteroskedasticity
  - multiple species, vary by climate, heteroskedasticity
- other possible extensions, but ones I maybe won't do because time constraints:
  - smarter priors (e.g. max dbh based on champion trees)
  - include possible nonlinear effects of climate on growth parameters?
- for each of these approaches follow the workflow:
  - problem
  - model
  - fake data
  - fit
  - diagnostics
  - graph fit
  - PPCs (Posterior Predictive Check)
  - Compare models
- criteria for model form
  - Theoretically realistic
    - follow what we know about biology
    - increase confidence in extrapolation
    - assymetrical sigmoidal for growth
  - Interpretable and parsimonious
    - few parameters that correspond as much as possible to an
      interpretable part of growth
  - Can fit in Stan
- think hard about smart priors to help with convergence.
  - I need to address the initial value errors.

*** notes on how to do modeling in brms
IN STAN:
vignette("brms_nonlinear")
http://discourse.mc-stan.org/t/hierarchical-nonlinear-regression/4382/6

https://cran.r-project.org/web/packages/brms/vignettes/brms_nonlinear.html

see notes on bayesian approach in cite:Weiskittel_ForestGrowthAndYieldModeling

Approach:

Generative

Build up Complexity

heteroscedasticity:
http://discourse.mc-stan.org/t/what-prior-model-formula-should-i-use-to-account-for-heteroscedasticity/4271/2
formula = bf(Y ~ X, sigma ~ X)
example 2: https://arxiv.org/pdf/1705.11123.pdf

advanced brms:
https://journal.r-project.org/archive/2018/RJ-2018-017/index.html

about brms:
cite:buerkner_2017

**** great example explaning hamiltonian monte carlo
http://elevanth.org/blog/2017/11/28/build-a-better-markov-chain/
*** model form: Weibull
model form:
cite:Weiskittel_ForestGrowthAndYieldModeling:
"This reality should lead to model forms that are complex enough to
accurately and adequately characterize the expected major behaviors of
the population, but simple enough to avoid being overly influenced by
the sample’s peculiarities."

**** why weibull
it was good for height:

Why Weibull is a decent option:  pg116 cite:Weiskittel_ForestGrowthAndYieldModeling
#+BEGIN_QUOTE
Significant differences between model forms can exist, however, when
limited data are available. For example, Temesgen and von Gadow (2004)
found that the percentage difference in root mean square error between
the best and worst equation for five commonly used model forms varied
from 5 to 33%. Huang et al. (1992) found in their analysis that the
Chapman–Richards, Weibull, and a modified logistic-type function were
consistently among the best performing models because they were
flexible, able to assume a variety of shapes, and extrapolated well.
#+END_QUOTE

It should also be good for dbh.  height and dbh are different though:

#+BEGIN_QUOTE
A diameter growth curve would show much the same trend, except there
is a tendency toward more sustained growth rate as the tree matures
(Hann and Hanus, 2002b). While height increment may nearly cease in
maturity, diameter increment must continue in order to produce the
xylem and phloem needed for tree survival
#+END_QUOTE
**** look at weibull

\[
\beta_0  (1 - exp(\beta_1 * DBH^{\beta_2})
\]


from huang 1992

H = 1.3 + a * (1 - exp(-b*DBH^c)


from wikipedia:
cdf:
\[
1 - e^{-(x/\lambda)^k}
\]


#+begin_src R :exports results :results graphics :file ../figs/weibull_test.png

  dbh <- 1:100

  a <- 31
  b <- .0209
  c <- 1.1973
  y <- 1.3 + a * (1 - exp(-b*dbh^c))

  a <- 100
  b <- .13
  c <- .5
  age <- seq(0,100,.1)
  dbh <- 1.3 + a * (1 - exp(-b * age^c))
  plot(age, dbh)
#+end_src

#+RESULTS:
[[file:../figs/weibull_test.png]]

play with the parameters to understand the flexibility and control.

#+begin_src R
  d <- readRDS("../data/tidy_age_dbh.rds")
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/ageVdbh_fram.png :bg transparent
  fram <- filter(d, SpCode == "FRAM")
  ggplot(fram, aes( x = AGE, y = DBH)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_fram.png]]

#+begin_src R
                                          #  m <- nls(DBH ~ a * (1 - exp(-b * AGE^c)), fram, list(a = 100, b = .1, c = .5))
  m <- nls(DBH ~ a * (1 - exp(-b * AGE^c)), fram_ftcollins, list(a = 100, b = .1, c = .5))
#+end_src

#+RESULTS:

#+begin_src R
  summary(m)
#+end_src

#+RESULTS:
#+begin_example

Formula: DBH ~ a * (1 - exp(-b * AGE^c))

Parameters:
   Estimate Std. Error t value Pr(>|t|)
a 1.298e+02  4.928e+01   2.633 0.013606 *
b 9.289e-03  2.137e-03   4.346 0.000165 ***
c 1.112e+00  1.745e-01   6.373 6.75e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 5.467 on 28 degrees of freedom

Number of iterations to convergence: 18
Achieved convergence tolerance: 1.869e-06
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/fram_test.png

  fram <- fram %>%
      mutate(pred = predict(m)) %>%
      gather(DBH, value, -Region, -City, -SpCode, -TreeID, -Leaf, -AGE)

  ggplot(fram, aes( x = AGE, y = value, color = DBH)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/fram_test.png]]


"a" can't be negative because dbh must be positive
"b" can't be negative because it causes negative growth and negative
dbh values, impossible
"c" can't be negative because it causes negative growth, impossible
***** what is the range of reasonable parameter values,  can be helpful for priors
#+begin_src R :exports results :results graphics :file ../figs/weibull.png
  data <- readRDS("../data/tidy_age_dbh.rds") %>%
      select(DBH, AGE) %>%
      rename(x = AGE, y = DBH)

  x <- 1:200
  a <- seq(50,250,50)
  b <- 10^(-1*1:3)
  c <- seq(.5, 1.5, .5)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

  d <- d %>%
      mutate(y = w(a,b,c,x))

  ggplot(d, aes( x = x, y = y)) +
      geom_point(data = data, alpha = .01) +
      geom_line(aes(color =  a, group = interaction(a,b,c))) + facet_grid(b~c) +
      xlim(c(0,150))
#+end_src

#+RESULTS:
[[file:../figs/weibull.png]]

range of realistic values:
b1 : 50 - 250
b2 : 0.01 - 0.1
b3 : .5 - 1.5

the higher values of b2 only make sense with lower values of b3.  they
are correlated.  I wonder if I could include that information in the prior?


#+begin_src R :exports results :results graphics :file ../figs/weibull_colorA.png
  x <- 1:100
  a <- seq(60,100,20)
  b <- c(.003,.006,.009)
  c <- seq(1, 1.5, .25)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

  d <- d %>%
      mutate(y = w(a,b,c,x))

  ggplot(d, aes( x = x, y = y, color =  a, group = interaction(a,b,c))) + geom_line() + facet_grid(b~c)

#+end_src

#+RESULTS:
[[file:../figs/weibull_colorA.png]]


#+begin_src R :exports results :results graphics :file ../figs/weibull_colorB.png
  ggplot(d, aes( x = x, y = y, color =  b, group = interaction(a,b,c))) + geom_line() + facet_grid(a~c)
#+end_src

#+RESULTS:
[[file:../figs/weibull_colorB.png]]

#+begin_src R :exports results :results graphics :file ../figs/weibull_colorC.png
  ggplot(d, aes( x = x, y = y, color =  c, group = interaction(a,b,c))) + geom_line() + facet_grid(a~b)
#+end_src

#+RESULTS:
[[file:../figs/weibull_colorC.png]]

#+begin_src R :exports results :results graphics :file ../figs/w2.png
  x <- 1:100
  b <- c(.003,.006,.009)
  c <- seq(1, 1.5, .25)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w2 <- function(b,c,x) (1 - exp(-b * x^c))

  d <- d %>%
      mutate(y = w2(b,c,x))

  ggplot(d, aes( x = x, y = y, group = interaction(b,c))) + geom_line() + facet_grid(b~c)
#+end_src

#+RESULTS:
[[file:../figs/w2.png]]

#+begin_src R :exports results :results graphics :file ../figs/w3.png
  x <- 1:100
  b <- c(.003,.006,.009)
  c <- seq(1, 1.5, .25)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w3 <- function(b,c,x) exp(-b * x^c)

  d <- d %>%
      mutate(y = w3(b,c,x))

  ggplot(d, aes( x = x, y = y, group = interaction(b,c))) + geom_line() + facet_grid(b~c)
#+end_src

#+RESULTS:
[[file:../figs/w3.png]]

#+begin_src R :exports results :results graphics :file ../figs/w4.png
  x <- 1:100
  b <- c(.003,.006,.009)
  c <- seq(1, 1.5, .25)

  d <- expand.grid(x = x,a = a, b = b, c = c)

  w4 <- function(b,c,x) -b * x^c

  d <- d %>%
      mutate(y = w4(b,c,x))

  ggplot(d, aes( x = x, y = y, group = interaction(b,c))) + geom_line() + facet_grid(b~c)
#+end_src

#+RESULTS:
[[file:../figs/w4.png]]

#+begin_src R :exports results :results graphics :file ../figs/w5.png
  x <- 1:100
  c <- seq(1, 1.5, .25)
  d <- expand.grid(x = x,a = a, c = c)

  w5 <- function(c,x) x^c

  d <- d %>%
      mutate(y = w5(c,x))

  ggplot(d, aes( x = x, y = y, group = c)) + geom_line() + facet_grid(1~c)
#+end_src

#+RESULTS:
[[file:../figs/w5.png]]
*** a look at gamma family
#+begin_src R
    library(brms)
    source("allo_functions.R")

    genus <- "none"
    species <- "single"
    cities <- "single"
    climate <- "none"
    hetero <- "no"
    family <- "Gamma"


    form <- generate_formula(genus, species, cities, climate, hetero, family)

    nlprior <- generate_prior(genus, species, cities, climate, family)

  n <- 100
        b1 <- 1.2
        b2 <- 2
        b3 <- 1
        shape <- 40

        w <- function(a,b,c,x) 100 * a * (1 - exp(-(b/100) * x^c))
                                                  #  w <- function(a,b,c,x) a * (1 - exp(-b * x^c))

        AGE <- runif(n , 0, 150)

        mu <- w(b1,b2,b3, AGE)

      DBH <- rgamma(n, rate = shape / mu, shape = shape)
    df <- data.frame(AGE, DBH)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/testest.png
plot(df)

#+end_src

#+RESULTS:
[[file:../figs/testest.png]]


#+begin_src R


  mod <- brm(form, chains = 2, cores = 2, data = df, init_r = .3, prior = nlprior, iter = 1000, family = Gamma(link = "identity"))
#+end_src

#+RESULTS:
#+begin_example
Compiling the C++ model
Start sampling

SAMPLING FOR MODEL 'gamma brms-model' NOW (CHAIN 1).

Gradient evaluation took 0.000672 seconds
1000 transitions using 10 leapfrog steps per transition would take 6.72 seconds.
Adjust your expectations accordingly!


Iteration:   1 / 1000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gamma brms-model' NOW (CHAIN 2).

Gradient evaluation took 0.00056 seconds
1000 transitions using 10 leapfrog steps per transition would take 5.6 seconds.
Adjust your expectations accordingly!


Iteration:   1 / 1000 [  0%]  (Warmup)
Iteration: 100 / 1000 [ 10%]  (Warmup)
Iteration: 100 / 1000 [ 10%]  (Warmup)
Iteration: 200 / 1000 [ 20%]  (Warmup)
Iteration: 200 / 1000 [ 20%]  (Warmup)
Iteration: 300 / 1000 [ 30%]  (Warmup)
Iteration: 300 / 1000 [ 30%]  (Warmup)
Iteration: 400 / 1000 [ 40%]  (Warmup)
Iteration: 400 / 1000 [ 40%]  (Warmup)
Iteration: 500 / 1000 [ 50%]  (Warmup)
Iteration: 501 / 1000 [ 50%]  (Sampling)
Iteration: 500 / 1000 [ 50%]  (Warmup)
Iteration: 501 / 1000 [ 50%]  (Sampling)
Iteration: 600 / 1000 [ 60%]  (Sampling)
Iteration: 700 / 1000 [ 70%]  (Sampling)
Iteration: 600 / 1000 [ 60%]  (Sampling)
Iteration: 800 / 1000 [ 80%]  (Sampling)
Iteration: 700 / 1000 [ 70%]  (Sampling)
Iteration: 900 / 1000 [ 90%]  (Sampling)
Iteration: 800 / 1000 [ 80%]  (Sampling)
Iteration: 1000 / 1000 [100%]  (Sampling)

 Elapsed Time: 5.63711 seconds (Warm-up)
               4.44767 seconds (Sampling)
               10.0848 seconds (Total)

Iteration: 900 / 1000 [ 90%]  (Sampling)
Iteration: 1000 / 1000 [100%]  (Sampling)

 Elapsed Time: 5.94742 seconds (Warm-up)
               4.96327 seconds (Sampling)
               10.9107 seconds (Total)
#+end_example

#+begin_src R
mod
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: df (Number of observations: 100)
Samples: 2 chains, each with iter = 1000; warmup = 500; thin = 1;
         total post-warmup samples = 1000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     1.17      0.09     1.04     1.38        397 1.00
b2_Intercept     2.19      0.25     1.74     2.76        453 1.00
b3_Intercept     0.97      0.05     0.87     1.06        442 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    24.82      3.40    18.66    31.75        458 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/test_gamma.png
pp_check(mod, type = "ecdf_overlay") + xlim(c(-10,200))
#+end_src

#+RESULTS:
[[file:../figs/test_gamma.png]]

*** all the models  model_table

smaller models to build:
#+name: model_table
| genus | species | cities | climate  | hetero  | data                                           | b1                                                                 | b2                                              | b3                                              | sigma                 |
|-------+---------+--------+----------+---------+------------------------------------------------+--------------------------------------------------------------------+-------------------------------------------------+-------------------------------------------------+-----------------------|
| none  | single  | single | none     | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          |                       |
| none  | single  | single | none     | linear  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ AGE - 1       |
| none  | single  | single | none     | smooth2 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 2) |
| none  | single  | single | none     | smooth3 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 3) |
| none  | single  | single | none     | smooth5 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 5) |
| none  | single  | single | none     | smooth7 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 7) |
| none  | single  | single | none     | smooth8 | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE, k = 8) |
| none  | single  | single | none     | smooth  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ 1                                                             | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ s(AGE)        |
| none  | many    | single | none     | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert Species)                                             | b2 ~ (1 \vert Species)                          | b3 ~ (1 \vert Species)                          |                       |
| many  | many    | single | none     | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert Genus / Species)                                     | b2 ~ (1 \vert Genus / Species)                  | b3 ~ (1 \vert Genus / Species)                  |                       |
| many  | many    | single | none     | yes     | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert Genus / Species)                                     | b2 ~ (1 \vert Genus / Species)                  | b3 ~ (1 \vert Genus / Species)                  | sigma ~ AGE -1        |
| none  | single  | many   | none     | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert City)                                                | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             |                       |
| none  | single  | many   | b1       | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City)                             | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             |                       |
| none  | single  | many   | b1       | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD, k = ) +  (1 \vert City)                       | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             |                       |
| none  | single  | many   | none     | yes     | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert City)                                                | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             | sigma ~ AGE -1        |
| none  | single  | many   | b1       | yes     | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City)                             | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             | sigma ~ AGE -1        |
| many  | many    | many   | none     | smooth  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert City) + (1 \vert Genus / Species)                    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ s(AGE)        |
| many  | many    | many   | none     | linear  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ (1 \vert City) + (1 \vert Genus / Species)                    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ AGE - 1       |
| many  | many    | many   | b1       | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) |                       |
| many  | many    | many   | b1linint | no      | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ Precip * GDD +  (1 \vert City) + (1 \vert Genus / Species)    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) |                       |
| many  | many    | many   | b1       | smooth  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ s(AGE)        |
| many  | many    | many   | b1linint | smooth  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ Precip * GDD +  (1 \vert City) + (1 \vert Genus / Species)    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ s(AGE)        |
| many  | many    | many   | b1linint | linear  | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ Precip * GDD +  (1 \vert City) + (1 \vert Genus / Species)    | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ AGE - 1       |

export the table to ../data/model_table.csv

#+begin_src sh :session a
rsync -avz ../data/model_table.csv erker@krusty:~/allo/data/
#+end_src

#+RESULTS:
| erker@krusty's  | password: |       |          |         |       |       |           |
| building        | file      | list  | ...      | done    |       |       |           |
| model_table.csv |           |       |          |         |       |       |           |
|                 |           |       |          |         |       |       |           |
| sent            | 206       | bytes | received | 78      | bytes | 43.69 | bytes/sec |
| total           | size      | is    | 3943     | speedup | is    | 13.88 |           |

build up to the full model, then test relaxing some of the effects on
the different betas.  Thinking about it, the full model makes the most sense...

| genus | species | cities | climate predictors | heteroskedasticity | data                                           | b1                                                                 | b2                                              | b3                                              | sigma          | formula |
|-------+---------+--------+--------------------+--------------------+------------------------------------------------+--------------------------------------------------------------------+-------------------------------------------------+-------------------------------------------------+----------------+---------|
| many  | many    | many   | on \beta_0         | yes                | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert City) + (1 \vert Genus / Species) | b3 ~ (1 \vert City) + (1 \vert Genus / Species) | sigma ~ AGE -1 |         |
|       |         |        |                    |                    | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert City)                             | b3 ~ (1 \vert City)                             | sigma ~ AGE -1 |         |
| many  | many    | many   | on \beta_0         | yes                | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ (1 \vert Genus / Species)                  | b3 ~ (1 \vert Genus / Species)                  | sigma ~ AGE -1 |         |
| many  | many    | many   | on \beta_0         | yes                | DBH ~ 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)) | b1 ~ t2(Precip, GDD) +  (1 \vert City) + (1 \vert Genus / Species) | b2 ~ 1                                          | b3 ~ 1                                          | sigma ~ AGE -1 |         |
*** Libraries and functions

There are many models.  Some will be quite big and take a long time.
I need to run them remotely, say on krusty.

I can generate a single script that fits all models.

I can generate a script for each model.

each script specifies genus, species, cities, climate, and hetero.
then functions subset data, generate formula and prior, and fit model.
**** libraries
#+begin_src R
  library(dplyr)
  library(brms)
  library(ggplot2)
  library(gridExtra)

#  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

#+end_src
**** functions
#+begin_src R :tangle allo_functions.R

    ## generate_formula <- function(model_table, gen, sp, cit, clim, het) {
    ##     f <- filter(model_table, genus == gen, species == sp, cities == cit, climate == clim, hetero == het)

    ##     f[] <- gsub("\\vert", "|", f, fixed = T)


    ##     if(f$sigma == "") {
    ##         bf(formula(f$data), formula(f$b1), formula(f$b2), formula(f$b3), nl = T)
    ##     } else {
    ##         bf(f$data, f$b1, f$b2, f$b3, f$sigma, nl = T)
    ##     }
    ## }

    generate_formula <- function(gen, sp, cit, clim, het, family) {
        if(family == "gaussian") {
            data_form <- formula(DBH ~ b0 + 100*b1 * (1 - exp(-(b2/100) * AGE ^ b3)))
            if(het == "linear") {
                v_form <- formula(sigma ~ AGE - 1)
            }
            if(het == "sqrt") {
                v_form <- formula(sigma ~ sqrt(AGE))
            }
            if (het == "smooth") {
                v_form <- formula(sigma ~  s(AGE))
            }
            if (het == "no") {
                v_form <- formula(sigma ~ 1)
            }
        }
        if (family == "Gamma") {
            data_form <- formula(DBH ~ b0 + 100*b1 * (1 - exp(-(b2/100) * AGE ^ (b3))))
            if (het == "no") {
                v_form <- formula(shape ~ 1)
            }
        }
        if(sp == "single") {
            if(cit == "single") {
                b0_form <- formula(b0 ~ 1)
                b1_form <- formula(b1 ~ 1)
                b2_form <- formula(b2 ~ 1)
                b3_form <- formula(b3 ~ 1)
            }
            if (cit == "many") {
                b0_form <- formula(b0 ~ (1 | City))
                b1_form <- formula(b1 ~ (1 | City))
                b2_form <- formula(b2 ~ (1 | City))
                b3_form <- formula(b3 ~ (1 | City))
            }
        }
        if (sp == "many") {
            if (gen == "none") {
                if(cit == "single") {
                    b0_form <- formula(b0 ~ (1 | Species))
                    b1_form <- formula(b1 ~ (1 | ID | Species))
                    b2_form <- formula(b2 ~ (1 | Species))
                    b3_form <- formula(b3 ~ (1 | ID | Species))
                }
                if (cit == "many") {
                    b0_form <- formula(b0 ~ (1 | City) + (1 | Species))
                    b1_form <- formula(b1 ~ (1 | City) + (1 | Species))
                    b2_form <- formula(b2 ~ (1 | City) + (1 | Species))
                    b3_form <- formula(b3 ~ (1 | City) + (1 | Species))
                }
            }
            if (gen == "many") {
                if(cit == "single") {
                    b0_form <- formula(b0 ~ (1 | Genus/Species))
                    b1_form <- formula(b1 ~ (1 | Genus/Species))
                    b2_form <- formula(b2 ~ (1 | Genus/Species))
                    b3_form <- formula(b3 ~ (1 | Genus/Species))
                }
                if (cit == "many") {
                    b0_form <- formula(b0 ~ (1 | City) + (1 | Genus/Species))
                    b1_form <- formula(b1 ~ (1 | City) + (1 | Genus/Species))
                    b2_form <- formula(b2 ~ (1 | City) + (1 | Genus/Species))
                    b3_form <- formula(b3 ~ (1 | City) + (1 | Genus/Species))
                    if (clim == "b1linint") {
                        b1_form <- formula(b1 ~ Precip * GDD +  (1 | City) + (1 | Genus / Species))
                    }
                }
            }
        }

        if (het == "no") {
            f <- bf(data_form, b0_form, b1_form, b2_form, b3_form, nl = T)
        } else {
            f <- bf(data_form, b0_form, b1_form, b2_form, b3_form, v_form, nl = T)
        }
        return(f)


    }

    generate_prior <- function (gen, sp, cit, clim, fam) {
        if(fam == "gaussian") {
            nlprior <- c(prior(gamma(7.5, 3), nlpar = "b0",lb = 0),
                         prior(gamma(8, 8), nlpar = "b1",lb = 0),       #mean = 4/3 = 1.3; variance = 4/9 = .4
                         prior(gamma(8, 8), nlpar = "b2", lb = 0),      #mean = 5/1 = 5; variance = 5/1 = 5
                         prior(gamma(8, 8), nlpar = "b3",lb = 0))

            if("many" %in% c(gen, sp, cit)) {

                nlprior <- c(nlprior,
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b0"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b1"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b2"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b3"))

            }

            if(clim == "b1") {
                nlprior <- c(nlprior,
                             prior(normal(0,.25), class = "sds", nlpar = "b1"))
            }

            if(hetero == "linear") {
                nlprior <- c(nlprior,
                             prior(gamma(1,10), class = "b", dpar = "sigma"))
            }

            if(hetero == "smooth") {
                nlprior <- c(nlprior,
                             prior(normal(1,.3), class = "b", dpar = "sigma"),
                             prior(normal(1,.3), class = "sds", dpar = "sigma"),
                             prior(normal(0,1), class = "Intercept", dpar = "sigma"))
            }
        }

        if(fam == "Gamma") {
            nlprior <- c(prior(gamma(7.5, 3), nlpar = "b0",lb = 0),
                         prior(gamma(8, 6), nlpar = "b1",lb = 0),
                         prior(gamma(8, 8), nlpar = "b2", lb = 0),
                         prior(gamma(8, 6), nlpar = "b3",lb = 0),
                         prior(gamma(5, .3), class = "shape"))

            if("many" %in% c(gen, sp, cit)) {

                nlprior <- c(nlprior,
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b0"),
                             prior(gamma(10,10), class = "sd", nlpar = "b1"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b2"),
                             prior(gamma(1.3,1.3), class = "sd", nlpar = "b3"))

            }

            if(clim == "b1") {
                nlprior <- c(nlprior,
                             prior(normal(0,.25), class = "sds", nlpar = "b1"))
            }

            if(hetero == "linear") {
                nlprior <- c(nlprior,
                             prior(gamma(1,10), class = "b", dpar = "sigma"))
            }

            if(hetero == "smooth") {
                nlprior <- c(nlprior,
                             prior(normal(1,.3), class = "b", dpar = "sigma"),
                             prior(normal(1,.3), class = "sds", dpar = "sigma"),
                             prior(normal(0,1), class = "Intercept", dpar = "sigma"))
            }
        }

        nlprior
    }

#+end_src

#+RESULTS:

Tangle (C-c C-v t) then send functions to krusty
#+BEGIN_SRC sh :session a :results verbatim
rsync -avz allo_functions.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
:
: sent 87 bytes  received 20 bytes  30.57 bytes/sec
: total size is 6194  speedup is 57.89


What is the prior on sigma in hetero models?  Can I adjust that prior?
would that help?  maybe esp when the climate predictors are in the model.
*** priors

Priors

gamma
alpha called shape
beta called rate
 mean is alpha/beta; variance is alpha/beta^2

#+begin_src R :exports results :results graphics :file ../figs/ftest.png
  x <- seq(0,8,.1)
  y <- dgamma(x, 7.5, 3)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftest.png]]

#+begin_src R :exports results :results graphics :file ../figs/ftest2.png
  x <- seq(0,8,.1)
  y <- dgamma(x, shape = 8, rate = 6)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftest2.png]]

#+begin_src R :exports results :results graphics :file ../figs/ftest_bsigma.png
  x <- seq(0,1,.01)
  y <- dgamma(x, shape = 10, rate = 100)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftest_bsigma.png]]


#+begin_src R :exports results :results graphics :file ../figs/ftestt.png
  x <- seq(0,40,.1)
  y <- dgamma(x, 5, .3)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftestt.png]]


#+begin_src R :exports results :results graphics :file ../figs/ftesttt.png
  x <- seq(0,5,.1)
  y <- dgamma(x, 10, 10)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ftesttt.png]]


#+begin_src R :exports results :results graphics :file ../figs/cauchtest.png
  x <- seq(0,5,.1)
  y <- dt(x,.2)
  y <- dcauchy(x,0,2)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/cauchtest.png]]


#+begin_src R :exports results :results graphics :file ../figs/ttest.png
  x <- seq(0,5,.1)
  y <- dt(x,.2)
  plot(x, y, type = "l")
#+end_src

#+RESULTS:
[[file:../figs/ttest.png]]

*** genus: none;  species: single; cities: single; climate: none; hetero: no; family gamma
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

**** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "Gamma"

#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

    form <- generate_formula(genus, species, cities, climate, hetero, family)

    nlprior <- generate_prior(genus, species, cities, climate, family)

            nlprior <- c(prior(gamma(7, 3.5), nlpar = "b0",lb = 0),
                         prior(gamma(7, 7), nlpar = "b1",lb = 0),
                         prior(gamma(8, 8), nlpar = "b2", lb = 0),
                         prior(gamma(8, 8), nlpar = "b3",lb = 0),
                         prior(gamma(20, 1), class = "shape"))

#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  if(family == "Gamma") fam <- Gamma("identity")
  if(family == "gaussian") fam <- gaussian()

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000, family = fam)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_",family,".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
:
: sent 148 bytes  received 20 bytes  37.33 bytes/sec
: total size is 1521  speedup is 9.05

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_no_family_gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh

#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds
:
: sent 10226 bytes  received 12216499 bytes  627011.54 bytes/sec
: total size is 12312658  speedup is 1.01
: You have new mail in /var/mail/erker


**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:

#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma <- readRDS("../models/genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ 1
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 6000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.77      0.08     2.61     2.93       3416 1.00
b1_Intercept     1.12      0.05     1.03     1.24       2694 1.00
b2_Intercept     1.08      0.04     1.00     1.17       3530 1.00
b3_Intercept     1.11      0.02     1.08     1.14       2806 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     7.69      0.14     7.42     7.96       3579 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma.png]]

*** genus: none;  species: single; cities: single; climate: none; hetero: no; family gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Want to understand how all the pieces fit together? See the R for Data
Science book: http://r4ds.had.co.nz/
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "gaussian"

#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000, family = family)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_",family,".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim
  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.R erker@krusty:~/allo/code/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.R
:
: sent 323 bytes  received 54 bytes  58.00 bytes/sec
: total size is 1125  speedup is 2.98


**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.R &
  exit
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
:
: sent 16 bytes  received 161 bytes  27.23 bytes/sec
: total size is 11811795  speedup is 66733.31



**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:

#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian <- readRDS("../models/genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: d (Number of observations: 5548)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     1.45      0.10     1.29     1.68        845 1.00
b2_Intercept     1.42      0.06     1.31     1.54       1063 1.00
b3_Intercept     0.96      0.02     0.91     1.00        901 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma    14.54      0.14    14.27    14.81       1318 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example




#+begin_example
 Family: gamma
  Links: mu = log; shape = identity
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
   Data: d (Number of observations: 5548)
Samples: 4 chains, each with iter = 500; warmup = 250; thin = 1;
         total post-warmup samples = 1000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     0.05      0.00     0.05     0.05        330 1.00
b2_Intercept    28.55      0.39    27.79    29.30        720 1.00
b3_Intercept     0.48      0.01     0.46     0.50        348 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     6.11      0.11     5.91     6.31        322 1.01

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian.png]]

*** compare gamma to gaussian
#+begin_src R
  loo_res <- loo(mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_Gamma,
                 mod_genus_none_species_single_cities_single_climate_none_hetero_no_family_gaussian)
#+end_src
*** genus: none;  species: single; cities: single; climate: none; hetero: linear; family gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "linear"
  family <- "gaussian"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.R
:
: sent 660 bytes  received 42 bytes  200.57 bytes/sec
: total size is 1114  speedup is 1.59

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.R &
  exit
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.rds
:
: sent 38 bytes  received 12104510 bytes  1152814.10 bytes/sec
: total size is 12200412  speedup is 1.01


**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
         sigma ~ AGE - 1
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 6000

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     1.90      0.31     1.38     2.56        974 1.01
b2_Intercept     1.38      0.21     1.01     1.82       1026 1.01
b3_Intercept     0.87      0.01     0.85     0.89       1098 1.01
sigma_AGE        0.10      0.00     0.10     0.10       5347 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png
  plot(mod)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png
  pp_check(mod) + xlim(c(-15,150))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_linear_family_gaussian.png]]

*** genus: none;  species: single; cities: single; climate: none; hetero: smooth; family: gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "smooth"
  family <- "gaussian"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 2, cores = 2, data = d, init_r = .3, prior = nlprior, iter = 500,
             knots = list(k = -1))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R
:
: sent 677 bytes  received 42 bytes  68.48 bytes/sec
: total size is 1147  speedup is 1.60

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R &
  exit
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
:
: sent 16 bytes  received 165 bytes  51.71 bytes/sec
: total size is 11953842  speedup is 66043.33


**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
         sigma ~ s(AGE)
   Data: d (Number of observations: 5548)
Samples: 2 chains, each with iter = 500; warmup = 250; thin = 1;
         total post-warmup samples = 500

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     1.73      0.20     1.37     2.15        319 1.00

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.46      0.01     2.44     2.48        500 1.00
b1_Intercept        1.89      0.19     1.60     2.28        246 1.00
b2_Intercept        1.30      0.10     1.11     1.48        317 1.00
b3_Intercept        0.89      0.01     0.86     0.92        260 1.01
sigma_sAGE_1        1.52      0.17     1.20     1.82        249 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_smooths_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  marginal_smooths(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooths_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  pp_check(mod) + xlim(c(-30,200))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

*** NOT TRIED YET genus: none;  species: single; cities: single; climate: none; hetero: sqrt; family: gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "none"
  species <- "single"
  cities <- "single"
  climate <- "none"
  hetero <- "sqrt"
  family <- "gaussian"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 2, cores = 2, data = d, init_r = .3, prior = nlprior, iter = 500,
             knots = list(k = -1))

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R
:
: sent 677 bytes  received 42 bytes  68.48 bytes/sec
: total size is 1147  speedup is 1.60

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.R &
  exit
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
:
: sent 16 bytes  received 165 bytes  51.71 bytes/sec
: total size is 11953842  speedup is 66043.33


**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian <- readRDS("~/git/allo/models/genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.rds")
mod <- mod_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ 1
         b2 ~ 1
         b3 ~ 1
         sigma ~ s(AGE)
   Data: d (Number of observations: 5548)
Samples: 2 chains, each with iter = 500; warmup = 250; thin = 1;
         total post-warmup samples = 500

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     1.73      0.20     1.37     2.15        319 1.00

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept     2.46      0.01     2.44     2.48        500 1.00
b1_Intercept        1.89      0.19     1.60     2.28        246 1.00
b2_Intercept        1.30      0.10     1.11     1.48        317 1.00
b3_Intercept        0.89      0.01     0.86     0.92        260 1.01
sigma_sAGE_1        1.52      0.17     1.20     1.82        249 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_smooths_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  marginal_smooths(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooths_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]



#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png
  pp_check(mod) + xlim(c(-30,200))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_single_cities_single_climate_none_hetero_smooth_family_gaussian.png]]

*** genus: none;  species: many; cities: single; climate: none; hetero: no; family: gaussian
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "none"
  species <- "many"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "gaussian"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 4000, family = family)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.R
:
: sent 402 bytes  received 54 bytes  130.29 bytes/sec
: total size is 1125  speedup is 2.47

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.R &
  exit
#+END_SRC

#+begin_src R
cat genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.Rout
#+end_src

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.rds
:
: sent 24998 bytes  received 27462592 bytes  2893430.53 bytes/sec
: total size is 27559692  speedup is 1.00
: You have new mail in /var/mail/erker


**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian <- readRDS("~/git/allo/models/genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.rds")
mod <- mod_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ (1 | Species)
         b2 ~ (1 | Species)
         b3 ~ (1 | Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 4000; warmup = 2000; thin = 1;
         total post-warmup samples = 12000

Group-Level Effects:
~Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1_Intercept)     0.80      0.24     0.42     1.37       3375 1.00
sd(b2_Intercept)     0.68      0.18     0.40     1.10       4825 1.00
sd(b3_Intercept)     0.23      0.04     0.17     0.32       5139 1.00

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1_Intercept     1.54      0.20     1.18     1.99       4399 1.00
b2_Intercept     1.39      0.16     1.09     1.73       6513 1.00
b3_Intercept     0.98      0.05     0.88     1.08       4862 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma    12.35      0.12    12.12    12.58      12000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 5 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png :width 600 :height 600
  cond <- data.frame(Species = unique(mod$data$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 5)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_many_cities_single_climate_none_hetero_no_family_gaussian.png]]

*** TODO genus: none;  species: many; cities: single; climate: none; hetero: no; family: gamma
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.R
:END:

There was no convergence for b1 and b3 when there was no correlation

**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "none"
  species <- "many"
  cities <- "single"
  climate <- "none"
  hetero <- "no"
  family <- "Gamma"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)
  form
  nlprior <- generate_prior(genus, species, cities, climate, family)
  nlprior
#+end_src

#+RESULTS:
#+begin_example
DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
b0 ~ (1 | Species)
b1 ~ (1 | Species)
b2 ~ (1 | Species)
b3 ~ (1 | Species)
           prior class coef group resp dpar nlpar     bound
1  gamma(7, 3.5)     b                         b0 <lower=0>
2    gamma(7, 7)     b                         b1 <lower=0>
3    gamma(8, 8)     b                         b2 <lower=0>
4    gamma(8, 8)     b                         b3 <lower=0>
5  gamma(5, 0.3) shape
6 cauchy(0, 0.1)    sd                         b1
7 cauchy(0, 0.1)    sd                         b2
8 cauchy(0, 0.1)    sd                         b3
#+end_example

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

if(family == "Gamma") fam <- Gamma("identity")
if(family == "gaussian") fam <- gaussian()

  mod <- brm(form, chains = 7, cores = 7, data = d, init_r = .3, prior = nlprior, iter = 3000, family = fam)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.R
:
: sent 441 bytes  received 54 bytes  141.43 bytes/sec
: total size is 1226  speedup is 2.48

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.Rout
#+END_SRC
**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.rds
:
: sent 33398 bytes  received 30736923 bytes  3238981.16 bytes/sec
: total size is 30854969  speedup is 1.00
: You have new mail in /var/mail/erker

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.rds")
mod <- mod_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png :height 1000 :width 1000
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | Species)
         b1 ~ (1 | ID | Species)
         b2 ~ (1 | Species)
         b3 ~ (1 | ID | Species)
   Data: d (Number of observations: 5548)
Samples: 7 chains, each with iter = 3000; warmup = 1500; thin = 1;
         total post-warmup samples = 10500

Group-Level Effects:
~Species (Number of levels: 25)
                               Estimate Est.Error l-95% CI u-95% CI Eff.Sample
sd(b0_Intercept)                   0.17      0.10     0.01     0.39       3360
sd(b1_Intercept)                   0.85      0.18     0.54     1.24         43
sd(b3_Intercept)                   0.24      0.04     0.18     0.32       3615
sd(b2_Intercept)                   0.43      0.11     0.27     0.70         11
cor(b1_Intercept,b3_Intercept)    -0.92      0.05    -0.99    -0.79       1583
                               Rhat
sd(b0_Intercept)               1.00
sd(b1_Intercept)               1.05
sd(b3_Intercept)               1.00
sd(b2_Intercept)               1.20
cor(b1_Intercept,b3_Intercept) 1.01

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.81      0.09     2.64     2.98      10500 1.00
b1_Intercept     1.35      0.19     0.99     1.74         45 1.05
b2_Intercept     0.98      0.10     0.80     1.20         35 1.06
b3_Intercept     1.15      0.05     1.05     1.24         54 1.04

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape     9.85      0.19     9.48    10.22      10500 1.01

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 4 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png :height 1500
  plot(mod, ask = F, N = 50)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png :width 600 :height 600
  cond <- data.frame(Species = unique(mod$data$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 5)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

*** Think about fitting b3 as fixed.
*** TODO genus: many;  species: many; cities: many; climate: none; hetero: no; family: gamma
:PROPERTIES:
:header-args:R: :cache no :resulfts output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

**** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "none"
  hetero <- "no"
  family <- "Gamma"
#+end_src

#+RESULTS:
: Gamma
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:
| gamma(7, 3.5)  | b  |   |   |   |   | b0 | <lower=0> |
| gamma(7, 7)    | b  |   |   |   |   | b1 | <lower=0> |
| gamma(8, 8)    | b  |   |   |   |   | b2 | <lower=0> |
| gamma(8, 8)    | b  |   |   |   |   | b3 | <lower=0> |
| cauchy(0, 0.1) | sd |   |   |   |   | b1 |           |
| cauchy(0, 0.1) | sd |   |   |   |   | b2 |           |
| cauchy(0, 0.1) | sd |   |   |   |   | b3 |           |

**** fit model to real data
#+begin_src R
    d <- readRDS("../data/age_dbh_testing.rds")

  if(family == "Gamma") fam <- Gamma("identity")
  if(family == "gaussian") fam <- gaussian()


    mod <- brm(form, chains = 8, cores = 8, data = d, init_r = .3, prior = nlprior, iter = 2000, family = fam)
    saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.R
:
: sent 442 bytes  received 54 bytes  76.31 bytes/sec
: total size is 1213  speedup is 2.45
: You have new mail in /var/mail/erker

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.rds
:
: sent 43522 bytes  received 47346463 bytes  3791198.80 bytes/sec
: total size is 47510547  speedup is 1.00

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.rds")
mod <- mod_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3)))
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 3000; warmup = 1500; thin = 1;
         total post-warmup samples = 9000

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     1.39      0.36     0.84     2.23         42 1.04
sd(b1_Intercept)     0.41      0.24     0.17     1.06          4 2.05
sd(b2_Intercept)     0.38      0.09     0.25     0.59         64 1.03
sd(b3_Intercept)     0.14      0.04     0.08     0.25         11 1.20

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     1.21      1.75     0.02     5.64          4 2.36
sd(b1_Intercept)     0.71      0.41     0.02     1.64         16 1.23
sd(b2_Intercept)     0.49      0.49     0.01     1.70          5 1.48
sd(b3_Intercept)     0.16      0.07     0.02     0.33          5 1.55

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.40      0.19     0.07     0.80         34 1.05
sd(b1_Intercept)     0.23      0.19     0.01     0.77         10 1.20
sd(b2_Intercept)     0.16      0.10     0.06     0.36         83 1.06
sd(b3_Intercept)     0.06      0.03     0.01     0.14         23 1.07

Population-Level Effects:
             Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept     2.26      0.45     1.39     3.20        508 1.02
b1_Intercept     1.53      0.26     1.03     2.09         20 1.11
b2_Intercept     0.95      0.18     0.66     1.39         19 1.09
b3_Intercept     1.09      0.07     0.96     1.25         10 1.19

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    14.97      0.29    14.39    15.54       9000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 949 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example

#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png
  marginal_effects(mod)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpeciesCity_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png :width 1200 :height 1000
  cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
  cond <- left_join(cond, unique(select(mod$data, Species, Genus)))

   me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

    ggplot(me$AGE) +
        geom_line(aes(x = AGE, y = estimate__)) +
        geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
        geom_point(data = mod$data, aes(x = AGE, y = DBH), alpha = .3, size = .5) +
        facet_grid(City~Species)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_none_species_many_cities_single_climate_none_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png
  pp_check(mod) +xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_none_hetero_no_family_Gamma.png]]

*** genus: many;  species: many; cities: many; climate: b1linint; hetero: no; family: gaussian
:PROPERTIES:
  :header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:

**** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1linint"
  hetero <- "no"
  family <- "gaussian"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 2000, family = family)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src


**** tangle
C-c C-v t


**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.R
:
: sent 660 bytes  received 42 bytes  82.59 bytes/sec
: total size is 1127  speedup is 1.61

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.R &
  exit
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.rds
:
: sent 55366 bytes  received 30871852 bytes  2290905.04 bytes/sec
: total size is 31017908  speedup is 1.00

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = identity
Formula: DBH ~ 100 * b1linint * (1 - exp(-(b2/100) * AGE^b3))
         b1linint ~ t2(Precip, CDD) + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 6000

Smooth Terms:
                      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(b1linint_t2PrecipCDD_1)     0.48      0.40     0.01     1.08          4 2.50
sds(b1linint_t2PrecipCDD_2)     0.47      0.39     0.00     1.04          4 2.10
sds(b1linint_t2PrecipCDD_3)     0.58      0.52     0.01     1.30          3 3.24

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1linint_Intercept)     0.93      0.36     0.30     1.66          5 1.59
sd(b2_Intercept)     0.75      0.38     0.16     1.30          3 3.16
sd(b3_Intercept)     0.50      0.50     0.10     2.06          6 1.90

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1linint_Intercept)     0.46      0.42     0.01     1.02          5 1.84
sd(b2_Intercept)     0.64      0.53     0.01     1.42          4 2.12
sd(b3_Intercept)     0.41      0.41     0.01     1.00          4 3.41

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1linint_Intercept)     0.97      0.31     0.41     1.57          5 1.67
sd(b2_Intercept)     0.56      0.30     0.12     1.09          6 1.62
sd(b3_Intercept)     0.45      0.43     0.06     1.14          3 4.71

Population-Level Effects:
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b1linint_Intercept         1.40      0.46     0.69     2.56          4 1.98
b1linint_t2PrecipCDD_1     0.84      0.38     0.20     1.49          4 2.45
b1linint_t2PrecipCDD_2     0.68      0.34     0.15     1.23          4 2.72
b1linint_t2PrecipCDD_3     0.96      0.48     0.21     1.89          3 3.04
b2_Intercept         0.98      0.22     0.64     1.48          6 1.47
b3_Intercept         0.86      0.08     0.76     1.04          4 1.78

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma     7.39      5.15     1.00    22.93          4 2.84

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 2307 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGECDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  marginal_effects(mod, effects = "AGE:CDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGECDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  marginal_effects(mod, effects = "Precip:CDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_gaussian.png]]

*** TODO genus: many;  species: many; cities: many; climate: b1linint; hetero: no; family: Gamma
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1linint"
  hetero <- "no"
  family <- "Gamma"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  form <- generate_formula(genus, species, cities, climate, hetero, family)

  nlprior <- generate_prior(genus, species, cities, climate, family)


#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
    d <- readRDS("../data/age_dbh_testing.rds")

  if(family == "Gamma") fam <- Gamma("identity")
  if(family == "gaussian") fam <- gaussian()

  mod <- brm(form, chains = 8, cores = 8, data = d, init_r = .3, prior = nlprior, iter = 2000, family = fam)

  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_family_", family, ".rds"))
#+end_src

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R
:
: sent 441 bytes  received 54 bytes  90.00 bytes/sec
: total size is 1213  speedup is 2.45

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.R &
  exit
#+END_SRC

#+BEGIN_SRC sh
cat genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.Rout
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password: 
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds
: 
: sent 77857 bytes  received 43656452 bytes  2364016.70 bytes/sec
: total size is 43833742  speedup is 1.00
: You have new mail in /var/mail/erker

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.rds")
mod <- mod_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma 
  Links: mu = identity; shape = identity 
Formula: DBH ~ b0 + 100 * b1 * (1 - exp(-(b2/100) * AGE^(b3))) 
         b0 ~ (1 | City) + (1 | Genus/Species)
         b1 ~ Precip * GDD + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
   Data: d (Number of observations: 5548) 
Samples: 8 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 8000

Group-Level Effects: 
~City (Number of levels: 15) 
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     1.41      0.31     0.90     2.12        231 1.03
sd(b1_Intercept)     0.85      0.27     0.43     1.48       1625 1.01
sd(b2_Intercept)     0.34      0.08     0.22     0.53       3866 1.00
sd(b3_Intercept)     0.19      0.04     0.12     0.29       3661 1.00

~Genus (Number of levels: 18) 
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.42      0.20     0.05     0.83       1916 1.00
sd(b1_Intercept)     1.16      0.29     0.63     1.78       1825 1.01
sd(b2_Intercept)     0.13      0.07     0.01     0.29       1529 1.01
sd(b3_Intercept)     0.11      0.05     0.01     0.21       1268 1.01

~Genus:Species (Number of levels: 25) 
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b0_Intercept)     0.27      0.16     0.02     0.60       1542 1.01
sd(b1_Intercept)     0.64      0.21     0.31     1.14       3183 1.00
sd(b2_Intercept)     0.14      0.05     0.06     0.24       2888 1.00
sd(b3_Intercept)     0.11      0.03     0.05     0.18       2355 1.01

Population-Level Effects: 
              Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
b0_Intercept      2.31      0.37     1.57     3.04       3547 1.00
b1_Intercept      0.68      0.23     0.31     1.19       8000 1.00
b1_Precip         0.67      0.23     0.29     1.19       8000 1.00
b1_GDD            0.22      0.06     0.11     0.35       8000 1.00
b1_Precip:GDD     0.19      0.06     0.09     0.32       8000 1.02
b2_Intercept      0.80      0.11     0.60     1.02       2819 1.00
b3_Intercept      1.05      0.06     0.93     1.18       3680 1.00

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape    15.06      0.29    14.50    15.64       8000 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample 
is a crude measure of effective sample size, and Rhat is the potential 
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning message:
There were 3 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png :height 1300
  plot(mod, ask = F, N = 40)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEGDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:GDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEGDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]



#+begin_src R
precip.gdd <-   marginal_effects(mod, effects = "Precip:GDD", surface = T)
#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipGDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
precip.gdd
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipGDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma_wCities.png
  plot(precip.gdd)[[1]] +
      geom_point(data = unique(select(mod$data, City, GDD, Precip)), aes(x = Precip, y = GDD)) +
      geom_label(data = unique(select(mod$data, City, GDD, Precip)), aes(x = Precip, y = GDD, label = City), nudge_y = .15)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipCDD_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma_wCities.png]]


#+begin_src R
    cond <- expand.grid(Species = unique(mod$data$Species),  City = unique(mod$data$City))
    cond <- left_join(cond, unique(select(mod$data, Species, Genus)))
    cond <- left_join(cond, unique(select(mod$data, City, Precip, GDD)))
#    cond <- filter(cond, Species %in%  c("LIST"))

     me <- marginal_effects(mod, effects = "AGE", conditions = cond, re_formula = NULL, method = "predict")
#+end_src

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png :width 1000 :height 100

  #arrange the cities by precip * GDD
  me2 <- me$AGE  %>% mutate(GDDPrecip = GDD * Precip,
                          City = factor(City, levels=unique(City[order(GDDPrecip)]), ordered=TRUE))

  dd <- mod$data %>%
      mutate(GDDPrecip = (GDD - min(GDD)) * (Precip - min(Precip)),
             City = factor(City, levels=unique(City[order(GDDPrecip)]), ordered=TRUE))

      ggplot(me2) +
          geom_line(aes(x = AGE, y = estimate__), size = 1) +
          geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
          geom_point(data = dd, aes(x = AGE, y = DBH), alpha = .3, size = .5) +
          facet_grid(Species~City*GDDPrecip)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png
   pp_check(mod) + xlim(c(-30,250))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_no_family_Gamma.png]]




*** genus: many;  species: many; cities: many; climate: b1; hetero: smooth
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1_hetero_smooth.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1"
  hetero <- "smooth"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 8000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

#+RESULTS:

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1_hetero_smooth.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
:
: sent 133 bytes  received 20 bytes  61.20 bytes/sec
: total size is 1138  speedup is 7.44

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1_hetero_smooth.R &
  exit
#+END_SRC

**** pull back from krusty


#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1_hetero_smooth.rds ~/git/allo/models/
#+END_SRC

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1_hetero_smooth.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ t2(Precip, HDD) + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 3403)
Samples: 6 chains, each with iter = 8000; warmup = 4000; thin = 1;
         total post-warmup samples = 24000

Smooth Terms:
                      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(b1_t2PrecipHDD_1)     0.36      0.20     0.03     0.79      24000 1.00
sds(b1_t2PrecipHDD_2)     0.40      0.24     0.03     0.90         24 1.15
sds(b1_t2PrecipHDD_3)     0.36      0.20     0.03     0.80      24000 1.00
sds(sigma_sAGE_1)         1.30      0.21     0.93     1.74        158 1.03

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1_Intercept)     1.24      0.47     0.16     2.24         46 1.14
sd(b2_Intercept)     0.31      0.08     0.19     0.49       8936 1.00
sd(b3_Intercept)     0.14      0.03     0.09     0.22         75 1.03

~Genus (Number of levels: 8)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1_Intercept)     0.11      0.11     0.00     0.40        117 1.04
sd(b2_Intercept)     0.07      0.06     0.00     0.23         72 1.07
sd(b3_Intercept)     0.03      0.03     0.00     0.09        107 1.06

~Genus:Species (Number of levels: 16)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(b1_Intercept)     0.36      0.10     0.21     0.60       2877 1.01
sd(b2_Intercept)     0.17      0.05     0.09     0.29       6972 1.00
sd(b3_Intercept)     0.05      0.02     0.02     0.09        871 1.01

Population-Level Effects:
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sigma_Intercept      2.11      0.01     2.09     2.14         48 1.12
b1_Intercept         1.67      0.38     0.92     2.35         12 1.15
b1_t2PrecipHDD_1     0.58      0.21     0.25     1.07        825 1.01
b1_t2PrecipHDD_2     0.54      0.19     0.23     0.99        554 1.01
b1_t2PrecipHDD_3     0.47      0.17     0.19     0.89       2772 1.00
b2_Intercept         0.96      0.11     0.75     1.20        101 1.03
b3_Intercept         0.99      0.05     0.89     1.08        109 1.05
sigma_sAGE_1         1.11      0.16     0.79     1.45      11714 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 2511 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  marginal_effects(mod, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  marginal_effects(mod, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_smooths_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  marginal_smooths(mod, smooths = "s(AGE)", ask = F)
#+end_src

#+RESULTS:
[[file:../figs/marginal_smooths_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1_hetero_smooth.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1_hetero_smooth.png]]

*** genus: many;  species: many; cities: many; climate: b1linint; hetero: smooth  NO CONVERGE
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1linint"
  hetero <- "smooth"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_testing.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 10000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, ".rds"))
#+end_src

#+RESULTS:

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.R
:
: sent 181 bytes  received 54 bytes  67.14 bytes/sec
: total size is 1145  speedup is 4.87

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.R &
  exit
#+END_SRC

**** pull back from krusty


#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.rds
:
: sent 38 bytes  received 97053567 bytes  4313493.56 bytes/sec
: total size is 97181497  speedup is 1.00
: You have new mail in /var/mail/erker

**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ Precip * GDD + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 5548)
Samples: 6 chains, each with iter = 10000; warmup = 5000; thin = 1;
         total post-warmup samples = 30000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     1.41      0.22     1.15     1.88          7 1.32

Group-Level Effects:
~City (Number of levels: 15)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.52      0.35     0.15     1.13          3  3.81
sd(b2_Intercept)     0.58      0.33     0.24     1.12          3  5.20
sd(b3_Intercept)     0.38      0.35     0.09     0.94          3 16.15

~Genus (Number of levels: 18)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     1.37      0.49     0.08     2.43         36  1.06
sd(b2_Intercept)     0.40      0.46     0.01     1.26          3  7.66
sd(b3_Intercept)     0.41      0.50     0.01     1.30          3 15.35

~Genus:Species (Number of levels: 25)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.59      0.31     0.20     1.28          7  1.30
sd(b2_Intercept)     0.53      0.39     0.16     1.13          3  8.84
sd(b3_Intercept)     0.42      0.45     0.06     1.20          3 21.87

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample   Rhat
sigma_Intercept     1.47      0.92     0.01     2.13          3 117.66
b1_Intercept        1.60      0.60     0.79     2.62          4   1.96
b1_Precip           0.64      0.17     0.30     0.88          7   1.30
b1_GDD              0.63      0.34     0.27     1.19          3   5.43
b1_Precip:GDD       0.66      0.19     0.34     0.97          4   1.71
b2_Intercept        1.09      0.15     0.89     1.38          5   1.51
b3_Intercept        0.86      0.05     0.80     0.97          5   1.48
sigma_sAGE_1        0.84      0.67    -0.27     1.60          3   5.07

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 10149 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  marginal_effects(mod, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  marginal_effects(mod, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.png]]

*** FULL DATA genus: many;  species: many; cities: many; climate: b1linint; hetero: smooth
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.R
:END:
**** libraries and functions
#+begin_src R
  library(dplyr)
  library(brms)
  source("allo_functions.R")

#+end_src

#+RESULTS:
#+begin_example

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union
Loading required package: Rcpp
Loading required package: ggplot2
Loading 'brms' package (version 2.3.1). Useful instructions
can be found by typing help('brms'). A more detailed introduction
to the package is available through vignette('brms_overview').
Run theme_set(theme_default()) to use the default bayesplot theme.
Warning messages:
1: package ‘brms’ was built under R version 3.4.4
2: package ‘Rcpp’ was built under R version 3.4.4
#+end_example

**** set values
#+begin_src R
  genus <- "many"
  species <- "many"
  cities <- "many"
  climate <- "b1linint"
  hetero <- "smooth"
#+end_src

#+RESULTS:
**** generate formula and priors
#+begin_src R

  model_table <- read.csv("../data/model_table.csv", stringsAsFactors = F)

  form <- generate_formula(model_table, genus, species, cities, climate, hetero)

  nlprior <- generate_prior(genus, species, cities, climate)
#+end_src

#+RESULTS:

**** fit model to real data
#+begin_src R
  d <- readRDS("../data/age_dbh_full.rds")

  mod <- brm(form, chains = 6, cores = 6, data = d, init_r = .3, prior = nlprior, iter = 10000)
  saveRDS(mod, paste0("../models/genus_",genus,"_species_",species,"_cities_", cities, "_climate_", climate, "_hetero_", hetero, "_fulldata.rds"))
#+end_src

#+RESULTS:

**** tangle
C-c C-v t

**** send to krusty
#+BEGIN_SRC sh :session a :results verbatim

  rsync -avz genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.R erker@krusty:~/allo/code/

#+END_SRC

#+RESULTS:
: erker@krusty's password:
: building file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.R
:
: sent 190 bytes  received 54 bytes  69.71 bytes/sec
: total size is 1151  speedup is 4.72

**** run on krusty

run from krusty terminal

#+BEGIN_SRC sh :session b :results raw
  ssh krusty
  cd allo/code
  nohup R CMD BATCH genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.R &
  exit
#+END_SRC

**** pull back from krusty

#+BEGIN_SRC sh :session a :results verbatim
rsync -avz erker@krusty:~/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.rds ~/git/allo/models/
#+END_SRC

#+RESULTS:
: erker@krusty's password:
: receiving file list ... done
: genus_many_species_many_cities_many_climate_b1linint_hetero_smooth.rds
:
: sent 62394 bytes  received 350744374 bytes  5524516.03 bytes/sec
: total size is 350727547  speedup is 1.00


**** diagnostics
:PROPERTIES:
:header-args:R: :cache no :results output :exports both :comments link :session *R:allo3* :eval yes :tangle no
:END:
#+begin_src R
mod <- readRDS("~/git/allo/models/genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.rds")
#+end_src

#+RESULTS:


#+begin_src R :exports results :results graphics :file ../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  pairs(mod)
#+end_src

#+RESULTS:
[[file:../figs/pairs_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
 Family: gaussian
  Links: mu = identity; sigma = log
Formula: DBH ~ 100 * b1 * (1 - exp(-(b2/100) * AGE^b3))
         b1 ~ Precip * HDD + (1 | City) + (1 | Genus/Species)
         b2 ~ (1 | City) + (1 | Genus/Species)
         b3 ~ (1 | City) + (1 | Genus/Species)
         sigma ~ s(AGE)
   Data: d (Number of observations: 12687)
Samples: 6 chains, each with iter = 10000; warmup = 5000; thin = 1;
         total post-warmup samples = 30000

Smooth Terms:
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sds(sigma_sAGE_1)     2.77      0.81     1.00     3.50          3 5.00

Group-Level Effects:
~City (Number of levels: 16)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.73      0.20     0.43     1.17         13  1.15
sd(b2_Intercept)     0.41      0.20     0.21     0.82          3  3.37
sd(b3_Intercept)     0.27      0.36     0.07     1.07          3 18.33

~Genus (Number of levels: 83)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.62      0.77     0.01     2.39          3  5.14
sd(b2_Intercept)     0.57      0.36     0.03     1.27          4  2.55
sd(b3_Intercept)     0.30      0.42     0.01     1.22          3 10.55

~Genus:Species (Number of levels: 161)
                 Estimate Est.Error l-95% CI u-95% CI Eff.Sample  Rhat
sd(b1_Intercept)     0.68      0.19     0.27     1.02          4  2.21
sd(b2_Intercept)     0.56      0.33     0.22     1.27          3  5.93
sd(b3_Intercept)     0.42      0.38     0.09     1.25          3 20.55

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample   Rhat
sigma_Intercept     1.86      0.80     0.08     2.23          3 155.27
b1_Intercept        1.90      0.56     0.82     2.76          4   2.58
b1_Precip           1.07      0.29     0.48     1.70          9   1.23
b1_HDD              0.46      0.32     0.13     1.10          3   3.19
b1_Precip:HDD       0.64      0.25     0.26     0.99          5   1.57
b2_Intercept        1.27      0.21     0.96     1.65          5   1.87
b3_Intercept        0.94      0.06     0.85     1.05          5   1.69
sigma_sAGE_1        0.48      0.19     0.13     0.80          4   1.89

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
Warning messages:
1: The model has not converged (some Rhats are > 1.1). Do not analyse the results!
We recommend running more iterations and/or setting stronger priors.
2: There were 12742 divergent transitions after warmup. Increasing adapt_delta above 0.8 may help.
See http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
#+end_example



#+begin_src R :exports results :results graphics :file ../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  plot(mod, ask = F)
#+end_src

#+RESULTS:
[[file:../figs/plot_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "AGE:HDD")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "AGE:Precip")
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_AGEPrecip_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  marginal_effects(mod, effects = "Precip:HDD", surface = T)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_surface_PrecipHDD_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]


#+begin_src R :exports results :results graphics :file ../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png :width 800
  cond <- data.frame(Species = unique(d$Species))
  me <- marginal_effects(mod, conditions = cond, re_formula = NULL)

  ggplot(me$AGE) +
      geom_line(aes(x = AGE, y = estimate__)) +
      geom_ribbon(aes(x = AGE, ymin = estimate__ - se__, ymax = estimate__ + se__), alpha = .3, fill = "blue") +
      geom_point(data = d, aes(x = AGE, y = DBH), alpha = .3) +
      facet_wrap(~Species, nrow = 2)
#+end_src

#+RESULTS:
[[file:../figs/marginal_effects_BySpecies_Genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]

#+begin_src R :exports results :results graphics :file ../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png
  pp_check(mod)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_genus_many_species_many_cities_many_climate_b1linint_hetero_smooth_fulldata.png]]



*** Meeting with Jun [2018-08-27 Mon]

What should the structure of the paper be?
- Premise of paper: showing a new method to fit multilevel non-linear
  growth models for trees
- Our working example is the urban tree

- Show different types of posterior predictions (e.g. new tree in a
  observed city of an observed species, versus new tree in an
  unobserved city of an unobserved species, but known climate and genus)

- Show predictions compared to the existing method.
  - will show better potential to extrapolate, both to unobserved ages
    and unobserved species/city combinations.

- Model selection

- posterior predicitive checks


*** Full model

\[
DBH \sim N(\beta_0 * (1 - \exp(-\beta_1 * AGE ^ {\beta_2})), \sigma)
\]

\[
\beta_0, \beta_1, \beta_2 \sim
\]

\[
\sigma \sim
\]

species within genus within ...


Model selection
1) Do all the betas vary by groups (City, Species, or both), or just beta0?
   1) There would be 4 models to compare:
      1) \beta_0 + \beta_1 + \beta_2 ~ City + Species
      2) \beta_0 ~ City + Species, \beta_1 + \beta_2 ~ 1
      3) \beta_0 ~ City + Species, \beta_1 + \beta_2 ~ City
      4) \beta_0 ~ City + Species, \beta_1 + \beta_2 ~ Species
   2) It might be worth doing this test on a reasonable subset of the
      data, otherwise this may take a _very_ long time
2) What is the proper form of the climate variables on the beta's?
   1)

*** explaining priors
can't be negative...  in brms nonlinear advanced, mention the
importance of setting strong priors.  Also non negative.



* Results
* Discussoins

make better
- more data, duh, perhaps used results to identify where to sample
- more cities, this is important for interpolation across climate
  space.
- better climate predictors
-

* Exploring age and dbh
** load libraries
#+begin_src R :exports none
  library(plyr)
  library(dplyr)
  library(ggplot2)
  library(readr)
  library(ascii)
  library(tidyr)
#+end_src

#+RESULTS:
** functions
#+begin_src R
  options(asciiType = "org")
  ascii.nowarn.print <- function(x,...) {
                                          #op <- options(warn = -1)
                                          #      on.exit(options(op))

      suppressWarnings(print(ascii(x,...)))

  }
#+end_src

#+RESULTS:

** read in data
#+begin_src R :exports code
  d <- read_csv("../data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv")
#+end_src

#+RESULTS:
#+begin_example
Parsed with column specification:
cols(
  .default = col_integer(),
  Region = col_character(),
  City = col_character(),
  Source = col_character(),
  Zone = col_character(),
  `Park/Street` = col_character(),
  SpCode = col_character(),
  ScientificName = col_character(),
  CommonName = col_character(),
  TreeType = col_character(),
  street = col_character(),
  `DBH (cm)` = col_double(),
  `TreeHt (m)` = col_double(),
  CrnBase = col_double(),
  `CrnHt (m)` = col_double(),
  `CdiaPar (m)` = col_double(),
  `CDiaPerp (m)` = col_double(),
  `AvgCdia (m)` = col_double(),
  `Leaf (m2)` = col_double(),
  dbh1 = col_double()
)
See spec(...) for full column specifications.
Warning: 24255 parsing failures.
row [90m# A tibble: 5 x 5[39m col     row col   expected   actual file                                            expected   [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m [3m[90m<chr>[39m[23m      [3m[90m<chr>[39m[23m  [3m[90m<chr>[39m[23m                                           actual [90m1[39m  126[90m2[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… file [90m2[39m  126[90m3[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… row [90m3[39m  126[90m4[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… col [90m4[39m  126[90m5[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.… expected [90m5[39m  126[90m6[39m side  an integer C      '../data/RDS-2016-0005/Data/TS3_Raw_tree_data.…
... ........................... ... ............................................................................... ........ ............ [... truncated]
Warning message:
In rbind(names(probs), probs_f) :
  number of columns of result is not a multiple of vector length (arg 1)
#+end_example


#+begin_src R
                                          #str(d)
#+end_src

#+RESULTS:
** fix some species things
*** fix lower case species codes
#+begin_src R
  d$SpCode <- toupper(d$SpCode)
#+end_src

#+RESULTS:
*** fix QUAG1 to be QUAG
#+begin_src R
  d$SpCode[d$SpCode == "QUAG1"] <- "QUAG"
#+end_src

#+RESULTS:
*** fix common names

Not all are fixed!

#+begin_src R
  d$CommonName[d$CommonName == "Kurrajong"] <- "Kurrajong/Bottle tree"
  d$CommonName[d$CommonName == "Bottle tree"] <- "Kurrajong/Bottle tree"

  d$CommonName[d$CommonName == "Apple"] <- "Apple/Crabapple"
  d$CommonName[d$CommonName == "Crabapple"] <- "Apple/Crabapple"


  d$CommonName[d$CommonName == "silver maple"] <- "Silver maple"
  d$CommonName[d$CommonName == "camphor tree"] <- "Camphor tree"
  d$CommonName[d$CommonName == "ginkgo"] <- "Ginkgo"
  d$CommonName[d$CommonName == "honeylocust"] <- "Honeylocust"
  d$CommonName[d$CommonName == "ginkgo"] <- "Ginkgo"
  d$CommonName[d$CommonName == "common crapemyrtle"] <- "Common crapemyrtle"
  d$CommonName[d$CommonName == "sweetgum"] <- "Sweetgum"
  d$CommonName[d$CommonName == "southern magnolia"] <- "Southern magnolia"



#+end_src

#+RESULTS:

** species are
#+name: tree_types
| TreeType | FunctionalType      |
|----------+---------------------|
| BDL      | broadleaf deciduous |
| BDM      | broadleaf deciduous |
| BDS      | broadleaf deciduous |
| BEL      | broadleaf evergreen |
| BEM      | broadleaf evergreen |
| BES      | broadleaf evergreen |
| CEL      | conifer evergreen   |
| CEM      | conifer evergreen   |
| CES      | conifer evergreen   |
| PEL      | palm evergreen      |
| PEM      | palm evergreen      |
| PES      | palm evergreen      |
I got rid of the small medium and large distinctions for
simplification here.

#+begin_src R :var tt=tree_types
  sp <- d %>% select(SpCode, ScientificName, TreeType) %>%
      left_join(tt) %>%
      select(-TreeType) %>%
      unique() %>%
      arrange(ScientificName) %>%
      ascii.nowarn.print()
#+end_src

#+RESULTS:
#+begin_example
Joining, by = "TreeType"
|     | SpCode | ScientificName                         | FunctionalType      |
|-----+--------+----------------------------------------+---------------------|
| 1   | ACFA   | Acacia farnesiana                      | broadleaf deciduous |
| 2   | ACME   | Acacia melanoxylon                     | broadleaf evergreen |
| 3   | ACSA3  | Acacia salicina                        | broadleaf evergreen |
| 4   | ACMA   | Acer macrophyllum                      | broadleaf deciduous |
| 5   | ACNE   | Acer negundo                           | broadleaf deciduous |
| 6   | ACPA   | Acer palmatum                          | broadleaf deciduous |
| 7   | ACPL   | Acer platanoides                       | broadleaf deciduous |
| 8   | ACRU   | Acer rubrum                            | broadleaf deciduous |
| 9   | ACSA1  | Acer saccharinum                       | broadleaf deciduous |
| 10  | ACSA2  | Acer saccharum                         | broadleaf deciduous |
| 11  | AEHI   | Aesculus hippocastanum                 | broadleaf deciduous |
| 12  | BABL   | Bauhinia x blakeana                    | broadleaf evergreen |
| 13  | BENI   | Betula nigra                           | broadleaf deciduous |
| 14  | BEPE   | Betula pendula                         | broadleaf deciduous |
| 15  | BRPO   | Brachychiton populneum                 | broadleaf evergreen |
| 16  | BUCA   | Butia capitata                         | palm evergreen      |
| 17  | CACI   | Callistemon citrinus                   | broadleaf evergreen |
| 18  | CADE2  | Calocedrus decurrens                   | conifer evergreen   |
| 19  | CAIN4  | Calophyllum inophyllum                 | broadleaf evergreen |
| 20  | CABEF  | Carpinus betulus 'Fastigiata'          | broadleaf deciduous |
| 21  | CAIL   | Carya illinoinensis                    | broadleaf deciduous |
| 22  | CANE33 | Cassia x nealiae                       | broadleaf deciduous |
| 23  | CAEQ   | Casuarina equisetifolia                | broadleaf evergreen |
| 24  | CASP   | Catalpa speciosa                       | broadleaf deciduous |
| 25  | CEDE   | Cedrus deodara                         | conifer evergreen   |
| 26  | CELA   | Celtis laevigata                       | conifer evergreen   |
| 27  | CEOC   | Celtis occidentalis                    | broadleaf deciduous |
| 28  | CESI4  | Celtis sinensis                        | broadleaf deciduous |
| 29  | CESI3  | Ceratonia siliqua                      | broadleaf evergreen |
| 30  | CECA   | Cercis canadensis                      | broadleaf deciduous |
| 31  | CHLI   | Chilopsis linearis                     | broadleaf deciduous |
| 32  | CICA   | Cinnamomum camphora                    | broadleaf evergreen |
| 33  | CISP2  | Citharexylum spinosum                  | broadleaf evergreen |
| 34  | CONU   | Cocos nucifera                         | palm evergreen      |
| 35  | COERA2 | Conocarpus erectus var. argenteus      | broadleaf evergreen |
| 36  | COSU2  | Cordia subcordata                      | broadleaf evergreen |
| 37  | COFL   | Cornus florida                         | broadleaf deciduous |
| 38  | CR     | Crataegus sp.                          | broadleaf deciduous |
| 39  | CRLA   | Crataegus x lavallei                   | broadleaf deciduous |
| 40  | CUAN   | Cupaniopsis anacardioides              | broadleaf evergreen |
| 41  | DERE   | Delonix regia                          | broadleaf deciduous |
| 42  | ELAN   | Elaeagnus angustifolia                 | broadleaf deciduous |
| 43  | ELOR2  | Elaeodendron orientale                 | broadleaf evergreen |
| 44  | ERJA   | Eriobotrya japonica                    | broadleaf evergreen |
| 45  | EUFI81 | Eucalyptus ficifolia                   | broadleaf evergreen |
| 46  | EUGL   | Eucalyptus globulus                    | broadleaf evergreen |
| 47  | EUMI2  | Eucalyptus microtheca                  | broadleaf evergreen |
| 48  | EUSI   | Eucalyptus sideroxylon                 | broadleaf evergreen |
| 49  | FASY   | Fagus sylvatica                        | broadleaf deciduous |
| 50  | FIBE   | Ficus benjamina                        | broadleaf evergreen |
| 51  | FIMI   | Ficus thonningii                       | broadleaf evergreen |
| 52  | FIDE6  | Filicium decipiens                     | broadleaf evergreen |
| 53  | FRAM   | Fraxinus americana                     | broadleaf deciduous |
| 54  | FRAN2  | Fraxinus angustifolia                  | broadleaf deciduous |
| 55  | FRAN_R | Fraxinus angustifolia 'Raywood'        | broadleaf deciduous |
| 56  | FREX_H | Fraxinus excelsior 'Hessei'            | broadleaf deciduous |
| 57  | FRHO   | Fraxinus holotricha                    | broadleaf deciduous |
| 58  | FRLA   | Fraxinus latifolia                     | broadleaf deciduous |
| 59  | FRPE   | Fraxinus pennsylvanica                 | broadleaf deciduous |
| 60  | FRPE_M | Fraxinus pennsylvanica 'Marshall'      | broadleaf deciduous |
| 61  | FRUH   | Fraxinus uhdei                         | broadleaf deciduous |
| 62  | FRVE   | Fraxinus velutina                      | broadleaf deciduous |
| 63  | FRVE_G | Fraxinus velutina 'Modesto'            | broadleaf deciduous |
| 64  | GIBI   | Ginkgo biloba                          | broadleaf deciduous |
| 65  | GLTR   | Gleditsia triacanthos                  | broadleaf deciduous |
| 66  | GYDI   | Gymnocladus dioicus                    | broadleaf deciduous |
| 67  | ILOP   | Ilex opaca                             | broadleaf evergreen |
| 68  | ILPA2  | Ilex paraguariensis                    | broadleaf evergreen |
| 69  | JAMI   | Jacaranda mimosifolia                  | broadleaf deciduous |
| 70  | JUNI   | Juglans nigra                          | broadleaf deciduous |
| 71  | JUVI   | Juniperus virginiana                   | conifer evergreen   |
| 72  | JUSI   | Juniperus virginiana var. silicicola   | conifer evergreen   |
| 73  | KOELFO | Koelreuteria elegans                   | broadleaf deciduous |
| 74  | KOPA   | Koelreuteria paniculata                | broadleaf deciduous |
| 75  | LAIN   | Lagerstroemia indica                   | broadleaf deciduous |
| 76  | LA6    | Lagerstroemia sp.                      | broadleaf deciduous |
| 77  | LASP   | Lagerstroemia speciosa                 | broadleaf deciduous |
| 78  | LIST   | Liquidambar styraciflua                | broadleaf deciduous |
| 79  | LITU   | Liriodendron tulipifera                | broadleaf deciduous |
| 80  | MAGR   | Magnolia grandiflora                   | broadleaf evergreen |
| 81  | PYAN   | Malus angustifolia                     | broadleaf deciduous |
| 82  | MA2    | Malus sp.                              | broadleaf deciduous |
| 83  | MEQU   | Melaleuca quinquenervia                | broadleaf evergreen |
| 84  | MEEX   | Metrosideros excelsa                   | broadleaf evergreen |
| 85  | MOAL   | Morus alba                             | broadleaf deciduous |
| 86  | MO     | Morus sp.                              | broadleaf deciduous |
| 87  | OLEU   | Olea europaea                          | broadleaf evergreen |
| 88  | PAAC   | Parkinsonia aculeata                   | broadleaf deciduous |
| 89  | CEFL   | Parkinsonia florida                    | broadleaf deciduous |
| 90  | PHCA   | Phoenix canariensis                    | palm evergreen      |
| 91  | PHDA4  | Phoenix dactylifera                    | palm evergreen      |
| 92  | PIPU   | Picea pungens                          | conifer evergreen   |
| 93  | PIBR2  | Pinus brutia                           | conifer evergreen   |
| 94  | PICA   | Pinus canariensis                      | conifer evergreen   |
| 95  | PICO   | Pinus contorta                         | conifer evergreen   |
| 96  | PIEC   | Pinus echinata                         | conifer evergreen   |
| 97  | PIED   | Pinus edulis                           | conifer evergreen   |
| 98  | PIEL2  | Pinus eldarica                         | conifer evergreen   |
| 99  | PIEL   | Pinus elliottii                        | conifer evergreen   |
| 100 | PIHA   | Pinus halepensis                       | conifer evergreen   |
| 101 | PINI   | Pinus nigra                            | conifer evergreen   |
| 102 | PIPO   | Pinus ponderosa                        | conifer evergreen   |
| 103 | PIRA   | Pinus radiata                          | conifer evergreen   |
| 104 | PIST   | Pinus strobus                          | conifer evergreen   |
| 105 | PISY   | Pinus sylvestris                       | conifer evergreen   |
| 106 | PITA   | Pinus taeda                            | conifer evergreen   |
| 107 | PITH   | Pinus thunbergiana                     | conifer evergreen   |
| 108 | PICH   | Pistacia chinensis                     | broadleaf deciduous |
| 109 | PIUN   | Pittosporum undulatum                  | broadleaf evergreen |
| 110 | PLOC   | Platanus occidentalis                  | broadleaf deciduous |
| 111 | PLRA   | Platanus racemosa                      | broadleaf deciduous |
| 112 | PLAC   | Platanus x acerifolia                  | broadleaf deciduous |
| 113 | THOR   | Platycladus orientalis                 | conifer evergreen   |
| 114 | POMA   | Podocarpus macrophyllus                | conifer evergreen   |
| 115 | POAN   | Populus angustifolia                   | broadleaf deciduous |
| 116 | POTR2  | Populus balsamifera subsp. trichocarpa | broadleaf deciduous |
| 117 | PODE   | Populus deltoides                      | broadleaf deciduous |
| 118 | POFR   | Populus fremontii                      | broadleaf deciduous |
| 119 | POSA   | Populus sargentii                      | broadleaf deciduous |
| 120 | PRCH   | Prosopis chilensis                     | broadleaf deciduous |
| 121 | PRCA   | Prunus caroliniana                     | broadleaf evergreen |
| 122 | PRCE   | Prunus cerasifera                      | broadleaf deciduous |
| 123 | PRCE   | Prunus cerasifera cvs.                 | broadleaf deciduous |
| 124 | PRSE2  | Prunus serrulata                       | broadleaf deciduous |
| 125 | PR     | Prunus sp.                             | broadleaf deciduous |
| 126 | PRYE   | Prunus yedoensis                       | broadleaf deciduous |
| 127 | PSME   | Pseudotsuga menziesii                  | conifer evergreen   |
| 128 | PYCA   | Pyrus calleryana                       | broadleaf deciduous |
| 129 | PYCA_B | Pyrus calleryana 'Bradford'            | broadleaf deciduous |
| 130 | PYCA   | Pyrus calleryana cvs.                  | broadleaf deciduous |
| 131 | PYKA   | Pyrus kawakamii                        | broadleaf evergreen |
| 132 | PY     | Pyrus sp.                              | broadleaf deciduous |
| 133 | QUAG   | Quercus agrifolia                      | broadleaf evergreen |
| 134 | QUAL   | Quercus alba                           | broadleaf deciduous |
| 135 | QUIL2  | Quercus ilex                           | broadleaf evergreen |
| 136 | QULA2  | Quercus laurifolia                     | broadleaf deciduous |
| 137 | QULO   | Quercus lobata                         | broadleaf deciduous |
| 138 | QUMA1  | Quercus macrocarpa                     | broadleaf deciduous |
| 139 | QUNI   | Quercus nigra                          | broadleaf deciduous |
| 140 | QUPA   | Quercus palustris                      | broadleaf deciduous |
| 141 | QUPH   | Quercus phellos                        | broadleaf deciduous |
| 142 | QURU   | Quercus rubra                          | broadleaf deciduous |
| 143 | QUSH   | Quercus shumardii                      | broadleaf deciduous |
| 144 | QUVI   | Quercus virginiana                     | broadleaf evergreen |
| 145 | RHLA   | Rhus lancea                            | broadleaf evergreen |
| 146 | ROPS   | Robinia pseudoacacia                   | broadleaf deciduous |
| 147 | SAPA   | Sabal palmetto                         | palm evergreen      |
| 148 | PISA2  | Samanea saman                          | broadleaf deciduous |
| 149 | SCMO   | Schinus molle                          | broadleaf evergreen |
| 150 | SCTE   | Schinus terebinthifolius               | broadleaf evergreen |
| 151 | SESE   | Sequoia sempervirens                   | conifer evergreen   |
| 152 | SWMA   | Swietenia mahagoni                     | broadleaf evergreen |
| 153 | SYRO   | Syagrus romanzoffiana                  | palm evergreen      |
| 154 | TAAR   | Tabebuia aurea                         | broadleaf evergreen |
| 155 | TAPA   | Tabebuia heterophylla                  | broadleaf evergreen |
| 156 | TAOC   | Tabebuia ochracea subsp. neochrysantha | broadleaf evergreen |
| 157 | TIAM   | Tilia americana                        | broadleaf deciduous |
| 158 | TICO   | Tilia cordata                          | broadleaf deciduous |
| 159 | TITO   | Tilia tomentosa                        | broadleaf deciduous |
| 160 | TRSE6  | Triadica sebifera                      | broadleaf deciduous |
| 161 | TRCO   | Tristaniopsis conferta                 | broadleaf evergreen |
| 162 | ULAL   | Ulmus alata                            | broadleaf deciduous |
| 163 | ULAM   | Ulmus americana                        | broadleaf deciduous |
| 164 | ULPA   | Ulmus parvifolia                       | broadleaf deciduous |
| 165 | ULPU   | Ulmus pumila                           | broadleaf deciduous |
| 166 | VEME   | Veitchia merrillii                     | palm evergreen      |
| 167 | WAFI   | Washingtonia filifera                  | palm evergreen      |
| 168 | WARO   | Washingtonia robusta                   | palm evergreen      |
| 169 | ZESE   | Zelkova serrata                        | broadleaf deciduous |
#+end_example
** tidy a few names and select variables of interest here
#+begin_src R
  d <- d %>% rename(DBH = `DBH (cm)`, Leaf = `Leaf (m2)`) %>% select(Region, City, TreeID, SpCode, DBH, Leaf, DBH, Age)
#+end_src

#+RESULTS:

#+begin_src R
  summary(d$Leaf)
  sum(d$Leaf == -1) / length(d$Leaf)
  sum(d$DBH == -1) / length(d$DBH)
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
:    -1.0    12.9   116.1   302.5   389.2  9516.0
: [1] 0.1143094
: [1] 0

#+begin_src R
  d <- filter(d, DBH != -1, Age != -1) %>%
      rename(AGE = Age)
#+end_src

#+RESULTS:

** plot age versus dbh for all trees
#+begin_src R :exports results :results graphics :file ../figs/ageVdbh_all.png :bg transparent
  ggplot(d, aes( x = AGE, y = DBH)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_all.png]]


** AGE versus dbh by cities
#+begin_src R :exports results :results graphics :file figs/ageVdbh_byCity_focusCoords.png :height 1000 :width 1000
  ggplot(d, aes( x = AGE, y = DBH, color = SpCode)) + geom_point(alpha = .7, size = .5) +
      facet_wrap(~City) +
      coord_cartesian(xlim = c(0, 70), ylim = c(0,100)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_byCity_focusCoords.png]]

** AGE versus DBH by species
#+begin_src R :exports results :results graphics :file figs/ageVdbh_bySpecies_focusCoords.png :height 1500 :width 800
  ggplot(d, aes( x = AGE, y = DBH, color = City)) + geom_point(alpha = .2, size = .5) +
      facet_wrap(~SpCode, ncol = 8) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_bySpecies_focusCoords.png]]

Woah, there are lots of species.  Clearly there is some variability in
the relationship between age and dbh across species.

** AGE versus DBH by species for species that are in more than 1 city
Does the relationship between AGE and DBH for a species change
depending on the city where it is?

Is there evidence for a different equation for every species city
combination?  Or can we use one equation for each species, regardless
of city?
#+begin_src R
  sp.w.multiple.cities <- d %>% group_by(City, SpCode) %>% summarize(n = n()) %>% ungroup() %>% group_by(SpCode) %>%
      summarize(n_cities_per_species = n()) %>%
      filter(n_cities_per_species > 1) %>%
      pull(SpCode)

  d.sp.w.multiple.cities <- filter(d, SpCode %in% sp.w.multiple.cities)

#+end_src

#+RESULTS:


*** Each panel is a species, Each color is a different city
#+begin_src R :exports results :results graphics :file figs/ageVdbh_bySpecies_focusCoords_multiplecities.png :height 1000 :width 800
  ggplot(d.sp.w.multiple.cities, aes( x = AGE, y = DBH, color = City)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free", ncol = 8) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_bySpecies_focusCoords_multiplecities.png]]
*** Adding Loess trend lines

#+begin_src R :exports results :results graphics :file figs/ageVdbh_bySpecies_focusCoords_multiplecities_trendlines.png :height 1100 :width 800
  ggplot(d.sp.w.multiple.cities, aes( x = AGE, y = DBH, color = City)) +
      geom_point(alpha = .7, size = .8) +
      facet_wrap(~SpCode, scales = "free", ncol = 8) +
                                          #  coord_cartesian(xlim = c(0, 200), ylim = c(0,40)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      stat_smooth()
#+end_src

#+RESULTS:
[[file:../figs/ageVdbh_bySpecies_focusCoords_multiplecities_trendlines.png]]

ACPL's cities
#+begin_src R
  filter(d.sp.w.multiple.cities, SpCode == "ACPL") %>% pull(City) %>% unique
#+end_src

#+RESULTS:
: [1] "Fort Collins, CO" "Minneapolis, MN"  "Queens, NY"       "Boise, ID"
: [5] "Longview, WA"

MOAL's cities
#+begin_src R
  filter(d.sp.w.multiple.cities, SpCode == "MOAL") %>% pull(City) %>% unique
#+end_src

#+RESULTS:
: [1] "Glendale, AZ" "Longview, WA"
** Plot Urban Tree Allometric equations on top of data

#+begin_src R
  predict.allo <- function(x, EqName, a, b, c, d, e) {
      if(EqName == "loglogw1") {
          y = exp(a + b*log(log(x + 1) + c/2))
      }
      else if(EqName == "loglogw2") {
          y = exp(a + b*log(log(x + 1))+(sqrt(x) * (c/2)))
      }
      else if (EqName == "loglogw3") {
          y = exp(a + b*log(log(x + 1)) + x * c/2)
      }
      else if (EqName == "loglogw4") {
          y = exp(a + b*log(log(x + 1)) + x^2 * c/2)
      }
      else if (EqName == "expow1") {
          y = exp(a+ b * (x) + (c/2))
      }
      else if (EqName == "lin") {
          y = a + b * x
      }
      else if (EqName == "quad") {
          y = a + b * x + c* x^2
      }
      else if (EqName == "cub") {
          y = a+b * x+c *x^2 + d * x^3
      }
      else if (EqName == "quart") {
          y = a+b * x+c *x^2 + d * x^3 + e * x^4
      }
      return(y)
  }

#+end_src

#+RESULTS:


#+begin_src R
  eqn <- read.csv("data/RDS-2016-0005/Data/TS6_Growth_coefficients_fromNatalie.csv", stringsAsFactors = F) %>%
      mutate(a = as.numeric(a))

  eqn <- eqn %>%
      filter(Predicts.component %in% c("dbh"), Independent.variable == "age")

  age_min_max = d %>%
      group_by(Region, SpCode) %>%
      summarize(minAGE = min(AGE, na.rm = T),
                maxAGE = max(AGE, na.rm = T))

  eqn <- left_join(eqn, age_min_max)

  DBH_min_max = d %>%
      group_by(Region, SpCode) %>%
      summarize(minDBH = min(DBH, na.rm = T),
                maxDBH = max(DBH, na.rm = T))

  eqn <- left_join(eqn, DBH_min_max)


                                          # fill in the NAs due to equations existing for species in regions where they weren't sampled.
  eqn$minAGE[is.na(eqn$minAGE)] <- 0
  eqn$maxAGE[is.na(eqn$maxAGE)] <- 100

  newdata <- lapply(1:nrow(eqn), function(i) {
      x <- seq(eqn$minAGE[i], eqn$maxAGE[i],  (eqn$maxAGE[i] - eqn$minAGE[i]) / 20)
      cbind(x, eqn[i,])
  })

  newdata <- bind_rows(newdata)

  predictions <- newdata %>% rowwise %>% mutate(predicted_dbh = predict.allo(x = x, EqName = EqName, a = a, b = b, c = c, d = d, e = e))



                                          #filter out predictions that are outside range of data and label those in range of appsmin and appsmax
  predictions_apprange <- predictions %>%
      filter(predicted_dbh > Apps.min & predicted_dbh < Apps.max)

  predictions_datarange <- predictions %>%
      filter(predicted_dbh > minDBH & predicted_dbh < maxDBH)

#+end_src

#+RESULTS:
: Joining, by = c("Region", "SpCode")
: Joining, by = c("Region", "SpCode")
: There were 50 or more warnings (use warnings() to see the first 50)



#+begin_src R :exports results :results graphics :file figs/predictions_dbh__byRegion.png

  ggplot(predictions_apprange, aes(x = x, y = predicted_dbh, group = SpCode)) +
      geom_line() +
      facet_wrap(~Region, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh__byRegion.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies.png :height 1200 :width 1200

  ggplot(predictions_apprange, aes(x = x, y = predicted_dbh, group = Region)) +
      geom_line() +
      facet_wrap(~SpCode, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpeciesFull_wData.png :height 1200 :width 1200
  predictions_apprange <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh)

  ggplot(d, aes( x = AGE, y = DBH, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange, aes(group = Region), size = 1.5)

#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpeciesFull_wData.png]]


#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies_wData.png :height 1200 :width 1200
  predictions_apprange.sp.w.multiple.cities <- predictions_apprange %>%       filter(SpCode %in% d.sp.w.multiple.cities$SpCode)


  ggplot(d.sp.w.multiple.cities, aes( x = AGE, y = DBH, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange.sp.w.multiple.cities, aes(group = Region), size = 1.5)

#+end_src


#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies_wData_ACPL.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "ACPL")

  ggplot(filter(d, SpCode == "ACPL"), aes( x = AGE, y = DBH, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region), size = 2, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region), size = 2)


#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData_ACPL.png]]

Funny thing about the Apps range is that for functions that eventually
decrease, they don't properly stop inference.  Look at the pink line
above.  The application range should be given for both the predictor
and the response variable.

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies_wData_ACPL_facet.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "ACPL")

  ggplot(filter(d, SpCode == "ACPL"), aes( x = AGE, y = DBH)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region, color = Region), size = 1, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region, color = Region), size = 1) +
      facet_wrap(~Region)


#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData_ACPL_facet.png]]

We should be able to borrow information from other regions to extend
the applicable range for regions with smaller ranges.

There is an equation for the lower midwest, but no data?

#+begin_src R :results org
  ascii.nowarn.print(filter(eqn, SpCode == "ACPL"))
#+end_src

#+RESULTS:
#+BEGIN_SRC org
  |   | Region | Scientific.Name  | SpCode | Independent.variable | Predicts.component | Units.of.predicted.components | Model.weight | EqName |     a |    b |     c |     d | e | Apps.min | Apps.max | Sigma |     n | adj.R2 | Data.min..from.raw.data. | Data.max..from.raw.data. |    DF | minAGE | maxAGE | minDBH | maxDBH |
  |---+--------+------------------+--------+----------------------+--------------------+-------------------------------+--------------+--------+-------+------+-------+-------+---+----------+----------+-------+-------+--------+--------------------------+--------------------------+-------+--------+--------+--------+--------|
  | 1 | LoMidW | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1/age        | cub    |  0.98 | 0.25 |  0.04 | -0.00 |   |     0.98 |   103.07 |  0.48 | 13.00 |   0.98 |                     4.80 |                    98.60 |  9.00 |   0.00 | 100.00 |        |        |
  | 2 | MidWst | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1            | cub    | -7.95 | 3.81 | -0.09 |  0.00 |   |     2.66 |    93.26 |  8.92 | 48.00 |   0.97 |                     4.60 |                    77.50 | 44.00 |   2.00 |  44.00 |   4.60 |  77.50 |
  | 3 | NMtnPr | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1/age^2      | quad   |  2.84 | 1.32 | -0.00 |       |   |     2.84 |    92.73 |  0.08 | 60.00 |   0.94 |                     2.90 |                   103.10 | 57.00 |   0.00 |  88.00 |   2.90 | 103.10 |
  | 4 | NoEast | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1            | lin    |  5.62 | 0.92 |       |       |   |     5.62 |   114.66 | 36.41 | 48.00 |   0.91 |                     2.70 |                   120.70 | 46.00 |   0.00 |  75.00 |   3.80 |  87.10 |
  | 5 | PacfNW | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1/age        | cub    | -0.85 | 2.44 | -0.03 |  0.00 |   |     1.56 |   146.78 |  1.40 | 74.00 |   0.98 |                     1.10 |                   129.40 | 70.00 |   1.00 |  81.00 |   1.10 | 129.40 |
  | 6 | TpIntW | Acer platanoides | ACPL   | age                  | dbh                | centimeters                   | 1/age        | cub    |  4.42 | 1.08 |  0.01 | -0.00 |   |     4.42 |    79.42 |  0.81 | 62.00 |   0.96 |                     5.30 |                    95.00 | 58.00 |   1.00 | 105.00 |   5.30 |  95.00 |
#+END_SRC

#+begin_src R :results org
  ascii.nowarn.print(filter(d, SpCode == "ACPL", Region == "NoEast"))
#+end_src

#+RESULTS:
#+BEGIN_SRC org
  |   | Region | City       |    TreeID | SpCode |   DBH |   Leaf |   Age |   AGE |
  |---+--------+------------+-----------+--------+-------+--------+-------+-------|
  | 1 | NoEast | Queens, NY | 900243.00 | ACPL   |  3.80 |   3.10 |  0.00 |  0.00 |
  | 2 | NoEast | Queens, NY |  46681.00 | ACPL   | 87.10 | 445.50 | 75.00 | 75.00 |
#+END_SRC

The reason that the equation for ACPL in the North East is linear is
because there are only two observations.  Yikes.


TIAM TpIntW
#+begin_src R :exports results :results graphics :file figs/predictions_dbh_bySpecies_wData_TIAM.pdf :height 3 :width 5

  theme_set(theme_classic(base_size = 12))
  predictions_apprange.tiam <- predictions_apprange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "TIAM", Region == "TpIntW")

  predictions_datarange.tiam <- predictions_datarange %>% mutate(AGE = x, DBH = predicted_dbh) %>%
      filter(SpCode == "TIAM", Region == "TpIntW")

  ggplot(filter(d, SpCode == "TIAM", Region == "TpIntW"), aes( x = AGE, y = DBH)) +
      geom_point(alpha = .7, size = 1) +
      theme(text = element_text(size = 20)) +
      geom_line(data = predictions_datarange.tiam, aes(group = Region), size = 1, linetype = "1111") +
      geom_line(data = predictions_apprange.tiam, aes(group = Region), size = 1)


#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_bySpecies_wData_TIAM.pdf]]


#+begin_src R :exports results :results graphics :file figs/quadratic.png :height 1200 :width 1200
  ggplot(predictions_apprange %>% filter(EqName == "quad"), aes(x = AGE, y = DBH)) +
      geom_line() +
      facet_wrap(~interaction(SpCode, Region))
#+end_src

#+RESULTS:
[[file:../figs/quadratic.png]]

TIAM TpIntW

** NEXT modelling

Just do the climate effects now

Subset down to 5 species
#+begin_src R
  sp.sub <- c("ACPL", "QURU", "PIST", "CEOC", "FRPE")
  ds <- filter(d, SpCode %in% sp.sub)
#+end_src

#+RESULTS:

*** lme4
#+begin_src R
  library(lme4)
#+end_src

#+RESULTS:

#+begin_src R
  ds <- mutate(ds, logDBH = log(DBH), logAGE = log(AGE + 1), AGE2 = AGE^2, AGE2scaled = AGE2/100)
                                          #mod <- lmer(DBH ~ AGE + (1 + AGE | SpCode) + ( 1 + AGE | Region), data = ds)
                                          #mod <- lmer(DBH ~ poly(AGE,2) + (1 + poly(AGE,2) | SpCode) + ( 1 + poly(AGE,2) | Region), data = ds)
                                          #mod <- lmer(DBH ~ poly(AGE,2) + (1 + poly(AGE,2) | SpCode) + ( 1 + AGE | Region), data = ds)
                                          #mod <- lmer(DBH ~ sqrt(AGE) + (1 + sqrt(AGE) | SpCode) + ( 1 + sqrt(AGE) | Region), data = ds)
                                          #mod <- lmer(DBH ~ AGE + (1 + AGE | SpCode) + ( 1 + AGE | Region), data = ds)


                                          #no intercept.  This is a good looking model.
  mod <- lmer(DBH ~ AGE + AGE2scaled - 1 + (AGE + AGE2scaled - 1 | SpCode) + (AGE - 1 | Region), data = ds)

#+end_src

#+RESULTS:

#+begin_src R
  summary(mod)
#+end_src

#+RESULTS:
#+begin_example
Linear mixed model fit by REML ['lmerMod']
Formula:
DBH ~ AGE + AGE2scaled - 1 + (AGE + -1 | SpCode) + (AGE + AGE2scaled -
    1 | Region)
   Data: ds

REML criterion at convergence: 6096.9

Scaled residuals:
    Min      1Q  Median      3Q     Max
-3.4742 -0.5288 -0.0049  0.5247  3.8558

Random effects:
 Groups   Name       Variance Std.Dev. Corr
 Region   AGE         0.16326 0.40406
          AGE2scaled  0.08519 0.29187  -0.93
 SpCode   AGE         0.00158 0.03975
 Residual            91.47154 9.56408
Number of obs: 822, groups:  Region, 8; SpCode, 4

Fixed effects:
           Estimate Std. Error t value
AGE          1.8479     0.1511  12.233
AGE2scaled  -0.8656     0.1199  -7.221

Correlation of Fixed Effects:
           AGE
AGE2scaled -0.895
#+end_example

#+begin_src R

  dsAGE_min_max = ds %>%
      group_by(Region, SpCode) %>%
      summarize(minAGE = min(AGE, na.rm = T),
                maxAGE = max(AGE, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsAGE_min_max), function(i) {
      x <- seq(dsAGE_min_max$minAGE[i], dsAGE_min_max$maxAGE[i],  (dsAGE_min_max$maxAGE[i] - dsAGE_min_max$minAGE[i]) / 9)
      cbind(dsAGE_min_max[i,], AGE = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logAGE = log(AGE + 1), AGE2scaled = AGE^2/100)

#+end_src

#+RESULTS:
: There were 17 warnings (use warnings() to see them)

#+begin_src R
  pred <- predict(mod, newdata)

  pred <- cbind(newdata, pred) %>%
      mutate(DBH = pred)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1.png
  ggplot(pred, aes(x = AGE, y = DBH)) + geom_line() +
      facet_grid(Region~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1.png]]


#+begin_src R

  dsAGE_min_max = ds %>%
      group_by(SpCode) %>%
      summarize(minAGE = min(AGE, na.rm = T),
                maxAGE = max(AGE, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsAGE_min_max), function(i) {
      x <- seq(dsAGE_min_max$minAGE[i], dsAGE_min_max$maxAGE[i],  (dsAGE_min_max$maxAGE[i] - dsAGE_min_max$minAGE[i]) / 9)
      cbind(dsAGE_min_max[i,], AGE = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logAGE = log(AGE + 1), AGE2scaled = AGE^2/100)


  regions <- rep(unique(ds$Region), each = nrow(newdata))

  newdata <- do.call("rbind", replicate(length(unique(regions)), newdata, simplify = FALSE))

  newdata$Region <- regions

#+end_src

#+RESULTS:
: Warning messages:
: 1: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 2: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 3: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 4: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R
  pred <- predict(mod, newdata)

  pred <- cbind(newdata, pred) %>%
      mutate(DBH = pred)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies.png
  ggplot(pred, aes(x = AGE, y = DBH)) + geom_line() +
      facet_grid(Region~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies_wData.png :width 600 :height 600
  ggplot(pred, aes(x = AGE, y = DBH)) + geom_line() +
      facet_grid(Region~SpCode) +
      geom_point(data = ds, size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies_wData.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetSpCode.png :width 1000 :height 300
  ggplot(pred, aes(x = AGE, y = DBH, color = Region)) + geom_line() +
      facet_wrap(~SpCode, ncol = 5) +
      geom_point(data = ds, size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetSpCode.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetRegion_ACPL.png :width 420 :height 400
  ggplot(filter(pred, SpCode == "ACPL", Region %in% unique(filter(ds, SpCode == "ACPL")$Region)), aes(x = AGE, y = DBH, color = Region)) + geom_line() +
      geom_point(data = filter(ds, SpCode == "ACPL"), size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetRegion_ACPL.png]]


#+begin_src R :exports results :results graphics :file figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetRegion_ACPL_wUTDeqn.png :width 1000 :height 400
  ggplot(filter(pred, SpCode == "ACPL", Region %in% unique(filter(ds, SpCode == "ACPL")$Region)), aes(x = AGE, y = DBH)) +
      geom_line(aes(color = Region)) +
      facet_wrap(~Region, ncol = 3) +
      geom_point(data = filter(ds, SpCode == "ACPL"), size = .5, alpha = .5) +
      geom_line(data = predictions_apprange.acpl, aes(group = Region), color = "black", size = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_dbh_m1_RegionsWoSpecies_wData_facetRegion_ACPL_wUTDeqn.png]]


#+begin_src R
  filter(d, SpCode == "ACPL") %>% group_by(Region) %>% summarize(n = n())
#+end_src

#+RESULTS:
: # A tibble: 5 x 2
:   Region     n
:    <chr> <int>
: 1 MidWst    48
: 2 NMtnPr    60
: 3 NoEast     2
: 4 PacfNW    74
: 5 TpIntW    62

#+begin_src R :results org :eval no
  ascii.nowarn.print(filter(eqn, SpCode == "ACPL"))
#+end_src


| Region | SpCode | Independent.variable | Predicts.component | Model.weight | EqName |     a |    b |     c |     d | Apps.min | Apps.max | Sigma |     n | adj.R2 | Data.min..from.raw.data. | Data.max..from.raw.data. |    DF | minAGE | maxAGE | minDBH | maxDBH |
|--------+--------+----------------------+--------------------+--------------+--------+-------+------+-------+-------+----------+----------+-------+-------+--------+--------------------------+--------------------------+-------+--------+--------+--------+--------|
| LoMidW | ACPL   | age                  | dbh                | 1/age        | cub    |  0.98 | 0.25 |  0.04 | -0.00 |     0.98 |   103.07 |  0.48 | 13.00 |   0.98 |                     4.80 |                    98.60 |  9.00 |   0.00 | 100.00 |        |        |
| MidWst | ACPL   | age                  | dbh                | 1            | cub    | -7.95 | 3.81 | -0.09 |  0.00 |     2.66 |    93.26 |  8.92 | 48.00 |   0.97 |                     4.60 |                    77.50 | 44.00 |   2.00 |  44.00 |   4.60 |  77.50 |
| NMtnPr | ACPL   | age                  | dbh                | 1/age^2      | quad   |  2.84 | 1.32 | -0.00 |       |     2.84 |    92.73 |  0.08 | 60.00 |   0.94 |                     2.90 |                   103.10 | 57.00 |   0.00 |  88.00 |   2.90 | 103.10 |
| NoEast | ACPL   | age                  | dbh                | 1            | lin    |  5.62 | 0.92 |       |       |     5.62 |   114.66 | 36.41 | 48.00 |   0.91 |                     2.70 |                   120.70 | 46.00 |   0.00 |  75.00 |   3.80 |  87.10 |
| PacfNW | ACPL   | age                  | dbh                | 1/age        | cub    | -0.85 | 2.44 | -0.03 |  0.00 |     1.56 |   146.78 |  1.40 | 74.00 |   0.98 |                     1.10 |                   129.40 | 70.00 |   1.00 |  81.00 |   1.10 | 129.40 |
| TpIntW | ACPL   | age                  | dbh                | 1/age        | cub    |  4.42 | 1.08 |  0.01 | -0.00 |     4.42 |    79.42 |  0.81 | 62.00 |   0.96 |                     5.30 |                    95.00 | 58.00 |   1.00 | 105.00 |   5.30 |  95.00 |

There are 5 regions with data for dbh and age of ACPL.  the North east
has two data points.  Even though there are no data for the LoMidW
region, there is an equation for it with a reported n of 13.  Where
does this equation come from?  The n for the north east is reportedly
48, but is really 2.



**** What about adding climate?
#+begin_src R
  sp.sub <- c("ACPL", "QURU", "PIST", "CEOC", "FRPE")
  ds <- filter(d, SpCode %in% sp.sub)
#+end_src

#+RESULTS:

#+begin_src R
  ds <- mutate(ds, logDBH = log(DBH), logAGE = log(AGE + 1), AGE2 = AGE^2, AGE2scaled = AGE2/100)
#+end_src

#+RESULTS:

from table 1 see above

#+begin_src R :var climate=city_climate
  str(climate)
#+end_src

#+RESULTS:
: 'data.frame':	17 obs. of  5 variables:
:  $ Region: chr  "CenFla" "GulfCo" "InlEmp" "InlVal" ...
:  $ City  : chr  "Orlando, FL" "Charleston, SC" "Claremont, CA" "Modesto, CA" ...
:  $ CDD   : int  1806 1124 134 1052 773 677 510 355 349 39 ...
:  $ HDD   : int  289 1221 872 1439 1718 2416 3153 4436 3332 1786 ...
:  $ Precip: int  1367 1555 523 315 470 250 392 622 452 564 ...


#+begin_src R :exports results :results graphics :file figs/climatespace.png
  ggplot(climate, aes(x = HDD, y = CDD,label = City)) + geom_point(aes(size = Precip)) + geom_text(hjust = .5, nudge_y = 80)
#+end_src

#+RESULTS:
[[file:../figs/climatespace.png]]

Rescale precip, HDD, and CDD by dividing by 100
#+begin_src R
  climate <- climate %>% mutate(HDD = HDD/100, CDD = CDD/100, Precip = Precip/100)
  ds <- left_join(ds, climate)
#+end_src

#+RESULTS:
: Joining, by = c("Region", "City")


Just precip for now
#+begin_src R
  mod_precip <- lmer(DBH ~ AGE + AGE2scaled - 1 + Precip + Precip:AGE +(AGE + AGE2scaled - 1 | SpCode) + (AGE - 1 | Region), data = ds)
#+end_src

#+RESULTS:

#+begin_src R
  dsAGE_min_max = ds %>%
      group_by(SpCode) %>%
      summarize(minAGE = min(AGE, na.rm = T),
                maxAGE = max(AGE, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsAGE_min_max), function(i) {
      x <- seq(dsAGE_min_max$minAGE[i], dsAGE_min_max$maxAGE[i],  (dsAGE_min_max$maxAGE[i] - dsAGE_min_max$minAGE[i]) / 9)
      cbind(dsAGE_min_max[i,], AGE = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logAGE = log(AGE + 1), AGE2scaled = AGE^2/100)

  regions <- rep(c("wet","dry"), each = nrow(newdata))
  newprecip <- rep(c(2.5,14), each = nrow(newdata))

  newdata <- do.call("rbind", replicate(length(unique(regions)), newdata, simplify = FALSE))

  newdata$Region <- regions
  newdata$Precip <- newprecip


#+end_src

#+RESULTS:
: Warning messages:
: 1: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 2: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 3: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded
: 4: In data.frame(..., check.names = FALSE) :
:   row names were found from a short variable and have been discarded

#+begin_src R
  pred <- predict(mod_precip, newdata, allow.new.levels = T)

  pred <- cbind(newdata, pred) %>%
      mutate(DBH = pred)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/precip_pred.png
  ggplot(pred, aes(x = AGE, y = DBH, color = Precip, group = interaction(Region,Precip))) + geom_line() +
      facet_wrap(~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/precip_pred.png]]

#+begin_src R :exports results :results graphics :file figs/precip_pred_wsomedata.png
  ggplot(pred, aes(x = AGE, y = DBH, color = Precip, group = interaction(Region,Precip))) + geom_line() +
      facet_wrap(~SpCode) +
      geom_point(data = ds)
#+end_src

#+RESULTS:
[[file:../figs/precip_pred_wsomedata.png]]


#+begin_src R
  ggplot() +

#+end_src

* Exploring dbh and crown diameter
show plots of dbh versus biomass and the published equations on a
figure.

look specifically for places where pooling might help (same species in
two regions)

** load libraries
#+begin_src R :exports none
  library(plyr)
  library(dplyr)
  library(ggplot2)
  library(readr)
#+end_src

#+RESULTS:
** read in data
#+begin_src R :exports code
  d <- read_csv("data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv")
#+end_src

#+RESULTS:
#+begin_example
Parsed with column specification:
cols(
  .default = col_integer(),
  Region = col_character(),
  City = col_character(),
  Source = col_character(),
  Zone = col_character(),
  `Park/Street` = col_character(),
  SpCode = col_character(),
  ScientificName = col_character(),
  CommonName = col_character(),
  TreeType = col_character(),
  street = col_character(),
  `DBH (cm)` = col_double(),
  `TreeHt (m)` = col_double(),
  CrnBase = col_double(),
  `CrnHt (m)` = col_double(),
  `CdiaPar (m)` = col_double(),
  `CDiaPerp (m)` = col_double(),
  `AvgCdia (m)` = col_double(),
  `Leaf (m2)` = col_double(),
  dbh1 = col_double()
)
See spec(...) for full column specifications.
Warning: 24255 parsing failures.
row # A tibble: 5 x 5 col     row   col   expected actual                                            file expected   <int> <chr>      <chr>  <chr>                                           <chr> actual 1  1262  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv' file 2  1263  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv' row 3  1264  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv' col 4  1265  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv' expected 5  1266  side an integer      C 'data/RDS-2016-0005/Data/TS3_Raw_tree_data.csv'
... ................. ... ............................................................................... ........ ............................................................................... ...... ............................................................................... .... ................................................................. [... truncated]
Warning message:
In rbind(names(probs), probs_f) :
  number of columns of result is not a multiple of vector length (arg 1)
#+end_example


#+begin_src R
                                          #str(d)
#+end_src

#+RESULTS:

** tidy a few names and select variables of interest here
#+begin_src R
  d <- d %>% rename(DBH = `DBH (cm)`, Leaf = `Leaf (m2)`, AvgCdia = `AvgCdia (m)`) %>% select(Region, City, TreeID, SpCode, DBH, Leaf, AvgCdia, Age)
#+end_src

#+RESULTS:

#+begin_src R
  summary(d$Leaf)
  sum(d$Leaf == -1) / length(d$Leaf)
  sum(d$AvgCdia == -1) / length(d$AvgCdia)
  sum(d$DBH == -1) / length(d$DBH)
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
:    -1.0    12.9   116.1   302.5   389.2  9516.0
: [1] 0.1143094
: [1] 0.003244288
: [1] 0

#+begin_src R
  d <- filter(d, AvgCdia != -1)
#+end_src

#+RESULTS:

** plot dbh versus average crown diamter for all trees
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_all.png :bg transparent
  ggplot(d, aes( x = DBH, y = AvgCdia)) + geom_point()
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_all.png]]

** DBH versus Cdia by cities
Constraining scales to 0-200 dbh and 0-40 AvgCdia.  Much of
variability within regions is due to species, colored in the plot below.
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_byCity_focusCoords.png :height 1000 :width 1000
  ggplot(d, aes( x = DBH, y = AvgCdia, color = SpCode)) + geom_point(alpha = .7, size = .5) +
      facet_wrap(~City) +
      coord_cartesian(xlim = c(0, 200), ylim = c(0,40)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_byCity_focusCoords.png]]

** DBH versus Cdia by species
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_bySpecies_focusCoords.png :height 1500 :width 800
  ggplot(d, aes( x = DBH, y = AvgCdia, color = City)) + geom_point(alpha = .2, size = .5) +
      facet_wrap(~SpCode, ncol = 8) +
      coord_cartesian(xlim = c(0, 200), ylim = c(0,40)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_bySpecies_focusCoords.png]]

Woah, there are lots of species.  Clearly there is some variability in
the relationship between dbh and crown diameter across species.

** DBH versus Cdia by species for species that are in more than 1 city
Does the relationship between DBH and AvgCdia for a species change
depending on the city where it is?

Is there evidence for a different equation for every species city
combination?  Or can we use one equation for each species, regardless
of city?
#+begin_src R
  sp.w.multiple.cities <- d %>% group_by(City, SpCode) %>% summarize(n = n()) %>% ungroup() %>% group_by(SpCode) %>%
      summarize(n_cities_per_species = n()) %>%
      filter(n_cities_per_species > 1) %>%
      pull(SpCode)

  d.sp.w.multiple.cities <- filter(d, SpCode %in% sp.w.multiple.cities)

#+end_src

#+RESULTS:


*** Each panel is a species, Each color is a different city
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_bySpecies_focusCoords_multiplecities.png :height 1000 :width 800
  ggplot(d.sp.w.multiple.cities, aes( x = DBH, y = AvgCdia, color = City)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free", ncol = 8) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none")
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_bySpecies_focusCoords_multiplecities.png]]
*** Adding Loess trend lines
It looks like some species have the same relationship (e.g. ACPL),
others may have a different relationship (e.g. LAIN, MOAL), and for
some it is hard to tell because the data don't fully overlap
(e.g. LITU).  This is a very informal assessment, but I think there's
something here.  Similarities are likely due to the cities having
similar climates.  Differences are likely due to cities having
different climates.  There could be a genetic component too.
#+begin_src R :exports results :results graphics :file figs/dbhVcdia_bySpecies_focusCoords_multiplecities_trendlines.png :height 1100 :width 800
  ggplot(d.sp.w.multiple.cities, aes( x = DBH, y = AvgCdia, color = City)) +
      geom_point(alpha = .7, size = .8) +
      facet_wrap(~SpCode, scales = "free", ncol = 8) +
                                          #  coord_cartesian(xlim = c(0, 200), ylim = c(0,40)) +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      stat_smooth()
#+end_src

#+RESULTS:
[[file:../figs/dbhVcdia_bySpecies_focusCoords_multiplecities_trendlines.png]]

ACPL's cities
#+begin_src R
  filter(d.sp.w.multiple.cities, SpCode == "ACPL") %>% pull(City) %>% unique
#+end_src

#+RESULTS:
: [1] "Fort Collins, CO" "Minneapolis, MN"  "Indianapolis, IN" "Queens, NY"
: [5] "Boise, ID"        "Longview, WA"

MOAL's cities
#+begin_src R
  filter(d.sp.w.multiple.cities, SpCode == "MOAL") %>% pull(City) %>% unique
#+end_src

#+RESULTS:
: [1] "Glendale, AZ" "Longview, WA"
** Concluding thoughts
Clearly the relationship between DBH and AvgCdia varies with species
and with location.  However, for many species there is little

** Plot Urban Tree Allometric equations on top of data

#+begin_src R
  predict.allo <- function(x, EqName, a, b, c, d, e) {
      if(EqName == "loglogw1") {
          y = exp(a + b*log(log(x + 1) + c/2))
      }
      else if(EqName == "loglogw2") {
          y = exp(a + b*log(log(x + 1))+(sqrt(x) * (c/2)))
      }
      else if (EqName == "loglogw3") {
          y = exp(a + b*log(log(x + 1)) + x * c/2)
      }
      else if (EqName == "loglogw4") {
          y = exp(a + b*log(log(x + 1)) + x^2 * c/2)
      }
      else if (EqName == "expow1") {
          y = exp(a+ b * (x) + (c/2))
      }
      else if (EqName == "lin") {
          y = a + b * x
      }
      else if (EqName == "quad") {
          y = a + b * x + c* x^2
      }
      else if (EqName == "cub") {
          y = a+b * x+c *x^2 + d * x^3
      }
      else if (EqName == "quart") {
          y = a+b * x+c *x^2 + d * x^3 + e * x^4
      }
      return(y)
  }


#+end_src

#+RESULTS:


#+begin_src R
  eqn <- read.csv("data/RDS-2016-0005/Data/TS6_Growth_coefficients_fromNatalie.csv", stringsAsFactors = F) %>%
      mutate(a = as.numeric(a))

  eqn <- eqn %>%
      filter(Predicts.component %in% c("crown dia"), Independent.variable == "dbh")

  dbh_min_max = d %>%
      group_by(Region, SpCode) %>%
      summarize(minDBH = min(DBH, na.rm = T),
                maxDBH = max(DBH, na.rm = T))

  eqn <- left_join(eqn, dbh_min_max)

  cdia_min_max = d %>%
      group_by(Region, SpCode) %>%
      summarize(minCdia = min(AvgCdia, na.rm = T),
                maxCdia = max(AvgCdia, na.rm = T))

  eqn <- left_join(eqn, cdia_min_max)


                                          # fill in the NAs due to equations existing for species in regions where they weren't sampled.
  eqn$minDBH[is.na(eqn$minDBH)] <- 5
  eqn$maxDBH[is.na(eqn$maxDBH)] <- 90

  newdata <- lapply(1:nrow(eqn), function(i) {
      x <- seq(eqn$minDBH[i], eqn$maxDBH[i],  (eqn$maxDBH[i] - eqn$minDBH[i]) / 9)
      cbind(x, eqn[i,])
  })

  newdata <- bind_rows(newdata)

  predictions <- newdata %>% rowwise %>% mutate(predicted_Cdia = predict.allo(x = x, EqName = EqName, a = a, b = b, c = c, d = d, e = e))



                                          #filter out predictions that are outside range of data and label those in range of appsmin and appsmax
  predictions_apprange <- predictions %>%
      filter(predicted_Cdia > Apps.min & predicted_Cdia < Apps.max)

  predictions_datarange <- predictions %>%
      filter(predicted_Cdia > minCdia & predicted_Cdia < maxCdia)

#+end_src

#+RESULTS:
: Joining, by = c("Region", "SpCode")
: Joining, by = c("Region", "SpCode")
: There were 50 or more warnings (use warnings() to see the first 50)



#+begin_src R :exports results :results graphics :file figs/predictions_byRegion.png

  ggplot(predictions_apprange, aes(x = x, y = predicted_Cdia, group = SpCode)) +
      geom_line() +
      facet_wrap(~Region, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_byRegion.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_bySpecies.png :height 1200 :width 1200

  ggplot(predictions_apprange, aes(x = x, y = predicted_Cdia, group = Region)) +
      geom_line() +
      facet_wrap(~SpCode, scales = "free")

#+end_src

#+RESULTS:
[[file:../figs/predictions_bySpecies.png]]

What's up with BUCA and PIPO?  Those equations seem wrong.

#+begin_src R :exports results :results graphics :file figs/GulfCo_BUCA.png
  gcbuca <- filter(predictions, Region == "GulfCo", SpCode == "BUCA") %>% mutate(DBH = x)

  ggplot(gcbuca, aes(x = DBH, y = predicted_Cdia)) + geom_line()
#+end_src

#+RESULTS:
[[file:../figs/GulfCo_BUCA.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_bySpeciesFull_wData.png :height 1200 :width 1200
  predictions_apprange <- predictions_apprange %>% mutate(DBH = x, AvgCdia = predicted_Cdia)

  ggplot(d, aes( x = DBH, y = AvgCdia, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange, aes(group = Region), size = 1.5)

#+end_src

#+RESULTS:
[[file:../figs/predictions_bySpeciesFull_wData.png]]


#+begin_src R :exports results :results graphics :file figs/predictions_bySpecies_wData.png :height 1200 :width 1200
  predictions_apprange.sp.w.multiple.cities <- predictions_apprange %>%       filter(SpCode %in% d.sp.w.multiple.cities$SpCode)


  ggplot(d.sp.w.multiple.cities, aes( x = DBH, y = AvgCdia, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_apprange.sp.w.multiple.cities, aes(group = Region), size = 1.5)

#+end_src


#+RESULTS:
[[file:../figs/predictions_bySpecies_wData.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_bySpecies_wData_ACPL.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(DBH = x, AvgCdia = predicted_Cdia) %>%
      filter(SpCode == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(DBH = x, AvgCdia = predicted_Cdia) %>%
      filter(SpCode == "ACPL")

  ggplot(filter(d, SpCode == "ACPL"), aes( x = DBH, y = AvgCdia, color = Region)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region), size = 2, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region), size = 2)


#+end_src

#+RESULTS:
[[file:../figs/predictions_bySpecies_wData_ACPL.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_bySpecies_wData_ACPL_facet.png
  predictions_apprange.acpl <- predictions_apprange %>% mutate(DBH = x, AvgCdia = predicted_Cdia) %>%
      filter(SpCode == "ACPL")

  predictions_datarange.acpl <- predictions_datarange %>% mutate(DBH = x, AvgCdia = predicted_Cdia) %>%
      filter(SpCode == "ACPL")

  ggplot(filter(d, SpCode == "ACPL"), aes( x = DBH, y = AvgCdia)) +
      geom_point(alpha = .7, size = .5) +
      facet_wrap(~SpCode, scales = "free") +
      theme_minimal() +
      theme(text = element_text(size = 20),
            legend.position = "none") +
      geom_line(data = predictions_datarange.acpl, aes(group = Region, color = Region), size = 1, linetype = "1111") +
      geom_line(data = predictions_apprange.acpl, aes(group = Region, color = Region), size = 1) +
      facet_wrap(~Region)


#+end_src

#+RESULTS:
[[file:../figs/predictions_bySpecies_wData_ACPL_facet.png]]

We should be able to borrow information from other regions to extend
the applicable range for regions with smaller ranges.

** Model
the slope between dbh and the other tree characteristic would be a
function of the species characteristics and the city's climate.


** COMMENT Thinking about writing out the model

This follows Gelman and Hill 2007 notation:

see page 291.

\[
y_i \sim lognormal(\alpha + \beta_{j[i],k[i]} x_i , \sigma_y)
\]

\[
\beta_j \sim normal(\gamma_0 + \gamma_1 u_j, \sigma_\beta)
\]

where
- y is our target tree characteristic, average crown diameter, say.
- x is the diameter at breast height
- u is the "climate" e.g. growing degree days of a city
- \gamma's  are the coefficients for climate on the slope between x
  and y
-
-
  -

** COMMENT climate data
https://www.ncdc.noaa.gov/data-access/land-based-station-data/land-based-datasets/climate-normals/1981-2010-normals-data

see also table 1 in https://www.fs.fed.us/psw/publications/documents/psw_gtr253/psw_gtr_253.pdf

** NEXT modelling

Just do the climate effects now

Subset down to 5 species
#+begin_src R
  sp.sub <- c("ACPL", "QURU", "PIST", "CEOC", "FRPE")
  ds <- filter(d, SpCode %in% sp.sub)
#+end_src

#+RESULTS:

*** lme4
#+begin_src R
  library(lme4)
#+end_src

#+RESULTS:

#+begin_src R
  ds <- mutate(ds, logAvgCdia = log(AvgCdia))
  mod <- lmer(logAvgCdia ~ log(DBH) + (1 + log(DBH) | SpCode) + ( 1 + log(DBH) | Region), data = ds)
#+end_src

#+RESULTS:

#+begin_src R
  mod
#+end_src

#+RESULTS:
#+begin_example
Linear mixed model fit by REML ['lmerMod']
Formula: logAvgCdia ~ log(DBH) | SpCode
   Data: ds
REML criterion at convergence: -439.0436
Random effects:
 Groups   Name        Std.Dev. Corr
 SpCode   (Intercept) 4.5990
          log(DBH)    0.7474   -1.00
 Residual             0.1977
Number of obs: 1224, groups:  SpCode, 5
Fixed Effects:
(Intercept)
      4.168
#+end_example

#+begin_src R

  dsDBH_min_max = ds %>%
      group_by(Region, SpCode) %>%
      summarize(minDBH = min(DBH, na.rm = T),
                maxDBH = max(DBH, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsDBH_min_max), function(i) {
      x <- seq(dsDBH_min_max$minDBH[i], dsDBH_min_max$maxDBH[i],  (dsDBH_min_max$maxDBH[i] - dsDBH_min_max$minDBH[i]) / 9)
      cbind(dsDBH_min_max[i,], DBH = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logDBH = log(DBH))

#+end_src

#+begin_src R
  pred <- predict(mod, newdata)

  pred <- cbind(newdata, pred) %>%
      mutate(Cdia = exp(pred))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/predictions_m1.png
  ggplot(pred, aes(x = DBH, y = Cdia)) + geom_line() +
      facet_grid(Region~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/predictions_m1.png]]


#+begin_src R

  dsDBH_min_max = ds %>%
      group_by(SpCode) %>%
      summarize(minDBH = min(DBH, na.rm = T),
                maxDBH = max(DBH, na.rm = T)) %>%
      data.frame()

  newdata <- lapply(1:nrow(dsDBH_min_max), function(i) {
      x <- seq(dsDBH_min_max$minDBH[i], dsDBH_min_max$maxDBH[i],  (dsDBH_min_max$maxDBH[i] - dsDBH_min_max$minDBH[i]) / 9)
      cbind(dsDBH_min_max[i,], DBH = x)
  })

  newdata <- bind_rows(newdata)

  newdata <- mutate(newdata, logDBH = log(DBH))


  regions <- rep(unique(ds$Region), each = nrow(newdata))

  newdata <- do.call("rbind", replicate(length(unique(regions)), newdata, simplify = FALSE))

  newdata$Region <- regions

#+end_src

#+RESULTS:
#+begin_example
Warning messages:
1: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
2: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
3: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
4: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
5: In data.frame(..., check.names = FALSE) :
  row names were found from a short variable and have been discarded
#+end_example

#+begin_src R
  pred <- predict(mod, newdata)

  pred <- cbind(newdata, pred) %>%
      mutate(AvgCdia = exp(pred))

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/predictions_m1_RegionsWoSpecies.png
  ggplot(pred, aes(x = DBH, y = AvgCdia)) + geom_line() +
      facet_grid(Region~SpCode)
#+end_src

#+RESULTS:
[[file:../figs/predictions_m1_RegionsWoSpecies.png]]

#+begin_src R :exports results :results graphics :file figs/predictions_m1_RegionsWoSpecies_wData.png :width 600 :height 600
  ggplot(pred, aes(x = DBH, y = AvgCdia)) + geom_line() +
      facet_grid(Region~SpCode) +
      geom_point(data = ds, size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_m1_RegionsWoSpecies_wData.png]]


#+begin_src R :exports results :results graphics :file figs/predictions_m1_RegionsWoSpecies_wData_facetSpCode.png :width 1000 :height 300
  ggplot(pred, aes(x = DBH, y = AvgCdia, color = Region)) + geom_line() +
      facet_wrap(~SpCode, ncol = 5) +
      geom_point(data = ds, size = .5, alpha = .5)
#+end_src

#+RESULTS:
[[file:../figs/predictions_m1_RegionsWoSpecies_wData_facetSpCode.png]]

Obviously, the lines extrapolate quite a bit.  Differences across
regions appear to be pretty small.  Looking at the model summary it is
clear that there is little evidence distinguishing the different
regions and even the different species.  The is much variation not
explained by region or species.

If I used age instead of dbh, I'd probably find stronger differences
across regions.

**** What about adding climate?
from table 1

#+name: city_climate
| Region | City             |  CDD |  HDD | Precip |
|--------+------------------+------+------+--------|
| CenFla | Orlando, FL      | 1806 |  289 |   1367 |
| GulfCo | Charleston, SC   | 1124 | 1221 |   1555 |
| InlEmp | Claremont, CA    |  134 |  872 |    523 |
| InlVal | Modesto, CA      | 1052 | 1439 |    315 |
| SacVal | Sacramento, CA   |  773 | 1718 |    470 |
| InterW | Albuquerque, NM  |  677 | 2416 |    250 |
| LoMidW | Indianapolis, IN |  510 | 3153 |    392 |
| MidWst | Minneapolis, MN  |  355 | 4436 |    622 |
| NMtnPr | Fort Collins, CO |  349 | 3332 |    452 |
| NoCalC | Berkeley, CA     |   39 | 1786 |    564 |
| NoEast | Queens, NY       |  560 | 2819 |   1041 |
| PacfNW | Longview, WA     |  157 | 2468 |   1059 |
| Piedmt | Charlotte, NC    |  847 | 1891 |   1426 |
| SacVal | Santa Monica, CA |  266 |  710 |    570 |
| SWDsrt | Glendale, AZ     | 2128 |  637 |    174 |
| TpIntW | Boise, ID        |  387 | 3325 |    417 |
| Tropic | Honolulu, HI     | 2416 |    0 |   2206 |

These values for CDD and HDD are surprising to me, but maybe I don't
really understand how they are calcuated.  Maybe the theshold
temperature is what's driving it.  I don't think it matters here.

#+begin_src R :var climate=city_climate
  str(climate)
#+end_src

#+RESULTS:
: 'data.frame':	17 obs. of  5 variables:
:  $ Region: chr  "CenFla" "GulfCo" "InlEmp" "InlVal" ...
:  $ City  : chr  "Orlando, FL" "Charleston, SC" "Claremont, CA" "Modesto, CA" ...
:  $ CDD   : int  1806 1124 134 1052 773 677 510 355 349 39 ...
:  $ HDD   : int  289 1221 872 1439 1718 2416 3153 4436 3332 1786 ...
:  $ Precip: int  1367 1555 523 315 470 250 392 622 452 564 ...


#+begin_src R :exports results :results graphics :file figs/climatespace.png
  ggplot(climate, aes(x = HDD, y = CDD,label = City)) + geom_point(aes(size = Precip)) + geom_text(hjust = .5, nudge_y = 80)
#+end_src

#+RESULTS:
[[file:../figs/climatespace.png]]

Rescale precip, HDD, and CDD by dividing by 100
#+begin_src R
  climate <- climate %>% mutate(HDD = HDD/100, CDD = CDD/100, Precip = Precip/100)
  ds <- left_join(ds, climate)
#+end_src

#+RESULTS:
: Joining, by = c("Region", "City")


#+begin_src R

#+end_src

Just precip for now
#+begin_src R
  mod_precip <- lmer(logAvgCdia ~ log(DBH) + Precip + Precip:log(DBH) + (1 + log(DBH) | SpCode) + ( 1 + log(DBH) | Region), data = ds)
#+end_src

#+RESULTS:

#+begin_src R
  mod_hdd <- lmer(logAvgCdia ~ log(DBH) + HDD + HDD:log(DBH) + (1 + log(DBH) | SpCode) + ( 1 + log(DBH) | Region), data = ds)
#+end_src

#+RESULTS:



*** rstanarm
#+begin_src R
  library(rstanarm)
  options(mc.cores = parallel::detectCores())
#+end_src

#+RESULTS:

#+begin_src R
  smod <- stan_glm(log(AvgCdia) ~ DBH, data = d, family = gaussian(link = "identity"))
#+end_src

#+RESULTS:
#+begin_example

SAMPLING FOR MODEL 'continuous' NOW (CHAIN 1).

Gradient evaluation took 0.003692 seconds
1000 transitions using 10 leapfrog steps per transition would take 36.92 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'continuous' NOW (CHAIN 2).

Gradient evaluation took 0.003201 seconds
1000 transitions using 10 leapfrog steps per transition would take 32.01 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'continuous' NOW (CHAIN 3).

Gradient evaluation took 0.005202 seconds
1000 transitions using 10 leapfrog steps per transition would take 52.02 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'continuous' NOW (CHAIN 4).

Gradient evaluation took 0.006159 seconds
1000 transitions using 10 leapfrog steps per transition would take 61.59 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 19.5348 seconds (Warm-up)
               17.1469 seconds (Sampling)
               36.6817 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 19.8768 seconds (Warm-up)
               16.8117 seconds (Sampling)
               36.6885 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 21.2892 seconds (Warm-up)
               16.3886 seconds (Sampling)
               37.6777 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 19.5799 seconds (Warm-up)
               17.5401 seconds (Sampling)
               37.12 seconds (Total)
#+end_example

#+begin_src R
  summary(smod)
#+end_src

#+RESULTS:
#+begin_example

Model Info:

 function:     stan_glm
 family:       gaussian [identity]
 formula:      log(AvgCdia) ~ DBH
 algorithm:    sampling
 priors:       see help('prior_summary')
 sample:       4000 (posterior sample size)
 observations: 14440
 predictors:   2

Estimates:
                mean    sd      2.5%    25%     50%     75%     97.5%
(Intercept)       1.2     0.0     1.2     1.2     1.2     1.2     1.2
DBH               0.0     0.0     0.0     0.0     0.0     0.0     0.0
sigma             0.4     0.0     0.4     0.4     0.4     0.5     0.5
mean_PPD          2.0     0.0     2.0     2.0     2.0     2.0     2.1
log-posterior -8910.8     1.2 -8914.0 -8911.4 -8910.5 -8909.9 -8909.4

Diagnostics:
              mcse Rhat n_eff
(Intercept)   0.0  1.0  3986
DBH           0.0  1.0  4000
sigma         0.0  1.0  2642
mean_PPD      0.0  1.0  3693
log-posterior 0.0  1.0  1848

For each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1).
#+end_example

#+begin_src R
  print(smod, digits = 5)
#+end_src

#+RESULTS:


#+begin_src R
  smod_Sp <- stan_glmer(log(AvgCdia) ~ DBH | SpCode, data = d, family = gaussian(link = "identity"))
#+end_src

#+RESULTS:
: Error: Using '|' in model formula not allowed. Maybe you meant to use 'stan_(g)lmer'?

posterior predict with exp transform

* COMMENT scratch
|                               |                |
|-------------------------------+----------------|
| Region                        | GulfCo         |
| Scientific.Name               | Butia capitata |
| SpCode                        | BUCA           |
| Independent.variable          | dbh            |
| Predicts.component            | crown dia      |
| Units.of.predicted.components | meters         |
| Model.weight                  | 1/ht^2         |
| EqName                        | cub            |
| a                             | -0.0575        |
| b                             | 0.10884        |
| c                             | 1.87801        |
| d                             | -0.45639       |
| e                             |                |
| Apps.min                      | 0.12           |
| Apps.max                      | 4.63           |
| Sigma                         |                |
| n                             |                |
| adj.R2                        |                |
| Data.min..from.raw.data.      | 0.7            |
| Data.max..from.raw.data.      | 7.4            |
| DF                            |                |



#+begin_src R
  x <- 1:100
  a <- seq(-.2, -1, -.2)
  b <- seq(1.2,2, .2)
  dq <- expand.grid(x = x, a = a,b = b)
  dq <- mutate(dq, y = a*(x^2)/100 + b * x)

#+end_src

#+RESULTS:

#+begin_src R :exports results :results graphics :file figs/understand_quad.png
  ggplot(dq, aes(x = x, y = y)) +
      geom_line() +
      facet_grid(a~ b)
#+end_src

#+RESULTS:
[[file:../figs/understand_quad.png]]

* Issues
1) Inconsistent naming of regions.  Is sacramento in the sacramento valley or the inland valley?
2) SpCode: "lain" instead of "LAIN"; "list" instead of "LIST"

* junk
+
geom_vline(xintercept = -coef(m)[1]/(2*coef(m)[2]), linetype = "dashed", color = "blue")

* questions

** are individual-level parameters  in a non-linear multilevel model with group-level predictors drawn from a normal distribution?

It's common to see parts of multilevel models written like this:

[[file:../../../org/attachments/questions/Screenshot 2018-08-07 13.55.11_2018-08-08_15-51-34.png]]

from page 280 in Gelman and Hill.

Where the population level parameter (intercept and slope) are drawn
from a normal distribution with a mean that is a function of
group-level predictors and a covariance matrix with correlations
between the parameters.


3)

quote:

prior is not normal, so how could they be drawn from a normal?  (they
must be positive, I'm using gamma, but could use something else if
that would be better, but I definitely can't use normal (unless it's
truncated), because must be positive which is important for the
non-linear model.

I don't see it in the stan code

the

Questions:
1) Is this just the case in linear models?
2) Does the prior on the parameters, or the




* test
#+begin_src emacs-lisp

#+end_src

#+RESULTS:
| simple.stan |

* model loss function with gamma family

Example 3 in ... cites ... who mention that the ... is right skewed
https://journal.r-project.org/archive/2018/RJ-2018-017/RJ-2018-017.pdf

https://magesblog.com/post/2015-11-10-hierarchical-loss-reserving-with-stan/

https://cran.r-project.org/web/packages/brms/vignettes/brms_nonlinear.html

"Thus, please make sure that you set the link function to identity,
whenever your non-linear predictor term already contains the desired
link function"


#+begin_src R
url <- paste0("https://raw.githubusercontent.com/mages/",
"diesunddas/master/Data/ClarkTriangle.csv")
loss <- read.csv(url)
head(loss)
#+end_src

#+RESULTS:
:     AY dev      cum premium
: 1 1991   6  357.848   10000
: 2 1991  18 1124.788   10000
: 3 1991  30 1735.330   10000
: 4 1991  42 2182.708   10000
: 5 1991  54 2745.596   10000
: 6 1991  66 3319.994   10000

#+begin_src R
  nlform <- bf(cum ~ ult * (1 - exp(-(dev / theta)^omega)),
               ult ~ 1 + (1|AY), omega ~ 1, theta ~ 1, nl = TRUE)
  nlprior <- c(prior(normal(5000, 1000), nlpar = "ult"),
               prior(normal(1, 2), nlpar = "omega"),
               prior(normal(45, 10), nlpar = "theta"))
  fit_loss1 <- brm(formula = nlform, data = loss, family = gaussian(), prior = nlprior,
                   chains = 2,
                   cores = 2,
                   control = list(adapt_delta = 0.9))

#+end_src

#+begin_src R :exports results :results graphics :file ../figs/pp_check_fit_loss1.png
pp_check(fit_loss1) + xlim(c(-500,5500))
#+end_src

#+RESULTS:
[[file:../figs/pp_check_fit_loss1.png]]


#+begin_src R
  nlform <- bf(cum ~ ult * (1 - exp(-(dev / theta)^omega)),
               ult ~ 1 + (1|AY), omega ~ 1, theta ~ 1, nl = TRUE)
  nlprior <- c(prior(normal(5000, 1000), nlpar = "ult"),
               prior(normal(1, 2), nlpar = "omega"),
               prior(normal(45, 10), nlpar = "theta"))
  fit_loss3 <- brm(formula = nlform, data = loss, family = Gamma("identity"), prior = nlprior,
                   chains = 2,
                   cores = 2,
                   control = list(adapt_delta = 0.9))

#+end_src

#+RESULTS:
#+begin_example

SAMPLING FOR MODEL 'gamma brms-model' NOW (CHAIN 1).
Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is nan, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is nan, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[11] is -0.110338, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is nan, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is -19.0419, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is -0.069164, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is -0.0750579, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is nan, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[11] is -2.99082, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)

Rejecting initial value:
  Error evaluating the log probability at the initial value.
Exception: gamma_lpdf: Inverse scale parameter[1] is -0.305499, but must be > 0!  (in 'model930d52c1e5cf_file930d4fe72f0c' at line 56)


Gradient evaluation took 0.00054 seconds
1000 transitions using 10 leapfrog steps per transition would take 5.4 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)

SAMPLING FOR MODEL 'gamma brms-model' NOW (CHAIN 2).

Gradient evaluation took 0.000434 seconds
1000 transitions using 10 leapfrog steps per transition would take 4.34 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 22.7133 seconds (Warm-up)
               11.1468 seconds (Sampling)
               33.8601 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 22.8441 seconds (Warm-up)
               13.3994 seconds (Sampling)
               36.2436 seconds (Total)
#+end_example


#+begin_src R
fit_loss3
#+end_src

#+RESULTS:
#+begin_example
 Family: gamma
  Links: mu = identity; shape = identity
Formula: cum ~ ult * (1 - exp(-(dev/theta)^omega))
         ult ~ 1 + (1 | AY)
         omega ~ 1
         theta ~ 1
   Data: loss (Number of observations: 55)
Samples: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup samples = 2000

Group-Level Effects:
~AY (Number of levels: 10)
                  Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
sd(ult_Intercept)   552.47    185.71   298.64  1051.96        747 1.00

Population-Level Effects:
                Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
ult_Intercept    5396.17    347.61  4794.76  6135.68        517 1.00
omega_Intercept     1.27      0.03     1.21     1.33        928 1.00
theta_Intercept    48.95      3.82    42.26    57.05        737 1.00

Family Specific Parameters:
      Estimate Est.Error l-95% CI u-95% CI Eff.Sample Rhat
shape   111.15     23.42    68.73   162.17       1454 1.00

Samples were drawn using sampling(NUTS). For each parameter, Eff.Sample
is a crude measure of effective sample size, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).
#+end_example


#+begin_src R :exports results :results graphics :file ../figs/pp_check_fit_loss3.png
pp_check(fit_loss3)
#+end_src

#+RESULTS:
[[file:../figs/pp_check_fit_loss3.png]]


#+begin_src R
loo(fit_loss1,fit_loss3)
#+end_src

#+RESULTS:
:                        LOOIC    SE
: fit_loss1             715.96 19.54
: fit_loss3             741.67 13.09
: fit_loss1 - fit_loss3 -25.71 17.27
